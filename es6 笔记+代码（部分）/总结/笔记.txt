1.变量：

var		重复声明、函数级(var a = 0 ; var a = 1 ;//不报错)
let		不能重复声明、块级、变量
const	不能重复声明、块级、常量

2.箭头函数
	a.方便
		i.如果只有一个参数，（）可以省
		ii.如果只有一个return，（）也可以省
	b.修正this
		this相对正常点

3.参数扩展:
	...：
		扩展
		收集

	默认参数：
	function(a,b=5){

	}
	
4.数组方法
	map			映射
	reduce		汇总：一堆-》一个
	filter		过滤	：
	forEach		循环


5.字符串
	startsWith/endsWith
	字符串模板：`${a}xxx${b}`
6.Promise
	封装异步操作

	Promise.all([]);

7.generator
	执行到一半可以暂停
	function *show(){
		yield;
	}


8.JSON
	//把JSON变成字符串，解析
	JSON.stringify（{a:12,b:5}）=>'{"a":12,"b":5}'
	//把字符串转成JSON，序列化
	JSON.parse '{"a":12,"b":5}'=>（{a:12,b:5}）

9.面向对象
	类：
	class Test{
		constructor{
			//构造函数
			this.XXXX
		}
		方法一(){

		};
		方法二(){

		};
	}

	继承：
	class Cls2 extends Cls1{
		constructor{
			super();
		}
	}


10.解构赋值
	let[a,b,c]=[12,5,8];

	左右两边结构一样
	右边是个合法的东西
	声明、赋值一次完成
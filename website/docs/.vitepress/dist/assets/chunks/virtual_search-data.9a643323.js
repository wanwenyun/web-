const e={map:'[{"前言":["0.0","2.0","9.0","16.0","20.0","20.1","33.0","40.0"],"关于作用域":["0.1"],"变量提升带来的问题":["0.2"],"全局作用域和函数作用域":["0.3"],"块级作用域":["0.4"],"词法作用域":["0.5"],"栈空间和堆空间简介":["0.6"],"栈空间的重要作用":["0.7"],"有了栈":["0.8"],"延迟解析":["0.9"],"预解析器如何解决闭包给惰性解析带来的问题":["0.10"],"第一步":["0.11","33.2"],"第二步":["0.12"],"v8怎么实现回调函数的":["1.0"],"宏任务":["1.1"],"微任务":["1.2"],"nexttick":["1.3"],"宏任务和微任务的执行过程":["1.4"],"eventloop":["1.5"],"面试问题":["1.6"],"promise":["1.7"],"生成器generators":["1.8"],"async":["1.9"],"总结":["1.10","20.9","20.19","22.8","22.12","36.6"],"垃圾数据如何产生":["2.1"],"副垃圾回收器":["2.2"],"主垃圾回收器":["2.3","2.7"],"并行回收":["2.4"],"增量回收":["2.5"],"并发":["2.6"],"常见的几种内存泄露情况":["2.8"],"如何发现内存泄露":["2.9"],"call":["3.0","3.1"],"apply":["3.2"],"bind":["3.3"],"new生成一个对象的过程":["3.4"],"手写new":["3.5"],"解决原有语法的缺陷和不足":["4.0"],"let":["4.1"],"结构赋值":["4.2"],"模版字符串":["4.3"],"字符串新增方法":["4.4"],"函数参数增强":["4.5"],"操作符":["4.6"],"可选链":["4.7"],"箭头函数":["4.8"],"object":["4.9","4.10","7.2","10.5"],"proxy":["4.11"],"reflect":["4.12"],"用于处理异步":["4.13"],"class":["4.14"],"set":["4.15"],"map":["4.16"],"symbol新的数据结构":["4.17"],"for":["4.18","10.3"],"原型和原型链":["5.0","5.1"],"词法":["5.2"],"什么是作用域":["5.3"],"静态":["5.4"],"执行上下文栈":["5.5"],"变量对象":["5.6"],"作用域链":["5.7"],"从ecmascript规范解读this":["5.8"],"this对象":["5.9"],"this绑定规则":["5.10"],"执行上下文":["5.11"],"闭包":["5.12"],"参数按值传递":["5.13"],"参考文章":["6.0","29.0"],"label语法":["6.1"],"如何判断异步返回":["6.2"],"类型判断":["6.3"],"js":["7.0"],"typeof":["7.1"],"instanceof":["7.3"],"手写instanceof":["7.4"],"抽象方法toprimitive":["7.5"],"toprimitive":["7.6"],"valueof方法和tostring方法解析":["7.7"],"string":["7.8","7.25"],"其他类型转为字符串类型":["7.9"],"其他类型转为number类型":["7.10"],"其他类型转为boolean类型":["7.11"],"对象转为其他类型":["7.12"],"隐式类型转换":["7.13"],"数学运算符中的隐式类型转换":["7.14"],"减":["7.15"],"加法":["7.16"],"逻辑语句中的类型转换":["7.17"],"单个变量":["7.18"],"比较运算符":["7.19"],"使用":["7.20","26.2"],"几道经典例题":["7.21"],"和":["7.22"],"显示类型转换":["7.23"],"tostring":["7.24"],"json":["7.26","10.4"],"tonumber":["7.27"],"toboolean":["7.28"],"附录":["7.29"],"创建对象":["8.0"],"工厂模式":["8.1"],"构造函数模式":["8.2"],"原型模式":["8.3"],"组合模式":["8.4"],"动态原型模式":["8.5"],"寄生构造函数模式":["8.6"],"稳妥构造函数模式":["8.7"],"原型链继承":["8.8"],"借用构造函数":["8.9"],"组合继承":["8.10"],"原型式继承":["8.11"],"寄生式继承":["8.12"],"寄生组合式继承":["8.13"],"es6类继承extends":["8.14"],"混入方式继承多个对象":["8.15"],"为什么promise要引入微任务":["9.1"],"手写promise":["9.2"],"深浅拷贝":["10.0"],"浅拷贝":["10.1"],"深拷贝":["10.2"],"解构赋值":["10.6"],"深度优先遍历":["10.7"],"广度优先遍历":["10.8"],"防抖":["11.0"],"黑头发黑眼睛":["12.0"],"腾讯云活动运营":["12.1"],"tcc电销系统":["12.2"],"商机线索管理系统":["12.3"],"vpteampage":["14.0"],"没有ajax的时候":["15.0","15.1"],"csr":["15.2"],"ssr":["15.3"],"ssr的实现方式":["15.4"],"react":["15.5","16.1","16.2"],"next":["15.6"],"服务端渲染相关面试题":["15.7"],"ssg":["15.8"],"前端安全csrf攻击原理和防护方法":["17.0"],"ajax":["19.0","19.1","33.8"],"axios和fetch的区别":["19.2"],"react理念":["20.2"],"老react架构":["20.3"],"新react架构":["20.4"],"scheduler":["20.5"],"reconciler":["20.6"],"render":["20.7"],"例子":["20.8","22.4","23.4","26.1"],"react16协调器":["20.10"],"fiber架构的心智模型":["20.11"],"fiber的三层含义":["20.12"],"架构层面":["20.13"],"作为静态的数据结构":["20.14"],"作为动态的工作单元":["20.15"],"fiber架构的工作原理":["20.16"],"怎么理解双缓存":["20.17"],"fiber架构双缓存":["20.18"],"react源码如何调试":["20.20"],"前置知识":["21.0"],"概览":["21.1","25.0"],"diff的瓶颈以及react如何应对":["21.2"],"diff是如何实现的":["21.3"],"单节点diff":["21.4"],"多节点diff":["21.5"],"diff思路":["21.6"],"第一轮遍历":["21.7"],"第二轮遍历":["21.8"],"分析":["21.9"],"react生命周期":["22.0"],"流程概览":["22.1","23.0"],"递":["22.2","22.5"],"归":["22.3","22.9"],"reconcilechildren":["22.6"],"effecttag":["22.7"],"hostcomponen如何处理":["22.10"],"effectlist":["22.11"],"before":["22.13"],"mutation阶段":["22.14"],"placement":["22.15"],"update":["22.16"],"deletion":["22.17"],"layout阶段":["22.18"],"update的结构":["23.1"],"update与fiber的联系":["23.2"],"updatequeue":["23.3"],"如何保证update不丢失":["23.5"],"如何保证状态依赖的连续性":["23.6"],"hooks的优势":["24.0"],"usestate做了什么":["24.1"],"update数据结构":["24.2"],"update如何保存":["24.3"],"hook数据结构":["24.4"],"模拟react调度更新流程":["24.5"],"计算state":["24.6"],"redux":["26.0"],"源码":["26.3"],"参考链接":["27.0","162.0"],"前端框架":["29.1"],"如何描述ui":["29.2"],"数据驱动":["29.3"],"前端用到的技术":["29.4"],"响应式":["29.5"],"victual":["29.6"],"aot预编译技术":["29.7"],"webpack入门":["30.0"],"webpack是什么":["30.1"],"快速入门":["30.2"],"webpack配置文件":["30.3"],"webpack":["30.4"],"模块化相关的知识":["30.5"],"入口entry":["30.6"],"出口output":["30.7"],"filename":["30.8"],"path":["30.9"],"publicpath":["30.10"],"hash":["30.11"],"loader配置":["30.12"],"rules其它配置":["30.13"],"几个常用的loader":["30.14"],"pnpm":["31.0"],"前端项目为什么需要监控":["32.0"],"xmlhttprequest":["33.1","33.6","33.7"],"为":["33.3"],"配置基础的请求信息":["33.4"],"第四步":["33.5"],"cookie":["34.0","34.9"],"cookie的参数":["34.1"],"cookie函数":["34.2"],"登录状态是如何保持的":["34.3"],"localstorage":["34.5"],"sessionstorage":["34.6"],"storage事件":["34.7"],"session":["34.8"],"token":["34.10"],"系统安全":["35.0"],"安全沙箱":["35.1"],"安全沙箱如何影响各个模块功能":["35.2"],"站点隔离":["35.3"],"安全沙箱能防止":["35.4"],"同源策略":["36.0"],"什么是同源策略":["36.1"],"同源策略对dom层面":["36.2"],"cors":["36.3"],"简单请求":["36.4"],"非简单请求":["36.5"],"为什么cors要有预检请求呢":["36.7"],"页面中可以嵌入第三方资源":["36.8"],"服务器代理":["36.9"],"xss攻击":["36.10"],"什么是xss攻击":["36.11"],"存储型xss攻击":["36.12"],"反射型":["36.13"],"基于":["36.14"],"如何防范xss攻击":["36.15"],"csrf攻击":["36.16"],"如何防止csrf攻击":["36.17"],"浏览器多进程架构":["37.0"],"进程和线程":["37.1"],"单进程浏览器时代":["37.2"],"目前":["37.3"],"未来":["37.4"],"渲染流程":["38.0"],"构建dom树":["38.1"],"样式计算":["38.2"],"布局阶段":["38.3"],"创建布局树":["38.4"],"布局计算":["38.5"],"分层":["38.6"],"图层绘制":["38.7"],"栅格化":["38.8"],"合成和显示":["38.9"],"重排":["38.10"],"重绘":["38.11"],"合成":["38.12"],"如何减少重排和重绘":["38.13"],"cdn缓存":["39.0"],"cdn是什么":["39.1"],"cdn原理":["39.2"],"cdn缓存基本原理":["39.3"],"cdn缓存策略":["39.4"],"cdn缓存应用场景":["39.5"],"dns是什么":["39.6"],"缓存位置":["40.1"],"浏览器缓存过程":["40.2"],"缓存机制":["40.3"],"http":["40.4","40.5","40.7","40.8","42.0","42.1","42.2","42.11","42.13"],"协商缓存过程":["40.6"],"计算机网络体系":["41.0"],"三次握手":["41.1"],"为什么要三次握手":["41.2"],"三次握手过程中可以携带数据吗":["41.3"],"syn":["41.4"],"如果第三次握手丢失了":["41.5"],"四次挥手":["41.6"],"等待2msl的意义":["41.7"],"为什么是4次挥手":["41.8"],"http1":["42.3"],"长链接":["42.4"],"管线化":["42.5","42.6"],"提供虚拟主机的支持":["42.7"],"支持响应分块":["42.8"],"断点续传":["42.9"],"以及其他http":["42.10"],"二进制分帧":["42.12"],"什么是https协议":["43.0"],"http各种请求方法":["44.0"],"javascript":["45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","65.0","66.0","67.0","68.0","69.0","70.0","71.0","72.0","73.0","74.0","75.0","76.0","77.0","78.0","81.0","82.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","100.0","101.0","102.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","115.0","116.0","118.0","122.0","123.0","124.0","126.0","127.0","129.0","130.0","131.0","132.0","134.0","135.0","136.0","137.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","163.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"把一棵二叉树被抽象成了一棵三叉树":["55.0"],"技巧":["64.0"],"什么是动态规划":["79.0"],"动态规划和其他算法的区别":["79.1"],"动态规划的解题方法":["79.2"],"解动态规划题目的步骤":["79.3"],"img":["80.0","176.0"],"限制条件":["80.1"],"定义操作":["80.2"],"定义状态":["80.3"],"举例":["80.4"],"状态转移方程":["80.5"],"子序列问题解题模版":["87.0"],"第一种思路":["87.1"],"第二种思路":["87.2"],"贪心类型问题":["96.0"],"总起":["110.0"],"元素无重":["110.1","110.7"],"子集":["110.2","110.5","110.8"],"排列":["110.3","110.6","110.9"],"元素可重":["110.4"],"图节点的逻辑结构如下":["112.0"],"有关括号问题":["117.0"],"插入法排序":["119.0","119.1"],"冒泡排序":["119.2"],"选择排序":["119.3"],"归并排序":["119.4"],"快速排序":["119.5"],"计数排序":["119.6"],"基数排序":["119.7"],"堆排序":["119.8"],"顺序查找":["120.0","120.1"],"二分查找":["120.2"],"插值查找":["120.3"],"树表查找":["120.4"],"在处理数组和链表相关问题时":["121.0"],"二分查找常用场景":["125.0"],"顺":["128.0"],"矩阵的螺旋遍历":["128.1"],"前缀和":["133.0"],"双指针技巧秒杀七道数组题目":["139.0"],"左右指针的常用算法有":["145.0"],"数组问题中比较常见的快慢指针技巧":["149.0"],"差分数组":["152.0"],"最大堆":["164.0"],"栈":["168.0"],"对于":["175.0"],"先看反转链表前n个节点":["178.0"]},{"0":["7.10","21.7","36.9","42.0","42.1","42.2","73.0","80.5","85.0","102.0","125.0","132.0","158.0","162.0"],"1":["0.1","0.2","0.7","0.10","0.11","0.12","1.5","1.6","1.10","2.8","2.9","3.4","5.6","7.1","7.2","7.6","7.7","7.16","7.19","7.20","7.21","8.14","16.1","21.4","21.5","21.7","21.8","23.6","29.3","29.7","30.8","30.13","30.14","33.7","33.8","36.4","36.6","36.9","36.17","38.13","40.5","40.8","42.0","42.2","42.3","42.9","42.10","42.11","42.13","44.0","46.0","69.0","73.0","79.1","79.2","79.3","80.5","85.0","117.0","119.2","119.3","119.4","119.5","120.2","125.0","132.0","145.0","158.0","160.0","163.0","165.0","167.0"],"2":["0.7","0.12","1.5","1.6","1.10","2.8","5.1","5.10","7.20","8.14","21.7","30.8","30.14","33.7","42.9","42.13","46.0","79.3","80.5","85.0","119.2","119.3","119.4","119.5","120.2","125.0","132.0","158.0","163.0"],"3":["0.12","1.5","1.10","21.2","21.7","30.8","30.14","42.9","85.0","119.4","119.5","132.0","156.0","158.0"],"4":["1.5","1.10","5.5","36.3","119.5"],"5":["1.10","143.0"],"6":["1.10","5.7"],"7":["5.8"],"9":["5.12","42.0","42.1"],"10":["5.13"],"11":["135.0"],"15":["20.0","20.3","136.0"],"16":["137.0"],"20":["0.10","1.10","114.0"],"21":["171.0"],"22":["103.0","115.0"],"25":["177.0"],"26":["146.0"],"27":["12.0","147.0"],"34":["122.0"],"35":["123.0"],"39":["104.0","110.8"],"40":["110.5"],"42":["3.3"],"43":["68.0"],"45":["74.0","93.0"],"46":["105.0","110.3"],"47":["106.0","110.6"],"48":["126.0"],"53":["85.0","132.0","158.0"],"54":["127.0"],"55":["95.0"],"60":["1.10","5.1","39.2","55.0"],"62":["76.0","98.0"],"63":["77.0","99.0"],"64":["100.0"],"70":["38.2","41.1","41.6","78.0","101.0"],"76":["160.0"],"77":["107.0"],"78":["108.0","110.2"],"83":["172.0"],"86":["173.0"],"90":["109.0","110.5"],"94":["62.0"],"98":["63.0"],"100":["0.1","2.1","47.0"],"101":["48.0"],"104":["49.0"],"108":["50.0"],"110":["51.0"],"111":["52.0"],"112":["45.0","53.0"],"114":["54.0"],"120":["71.0","97.0"],"123":["7.2","7.7","7.21"],"127":["36.9"],"141":["169.0"],"144":["56.0"],"145":["57.0"],"146":["165.0"],"160":["170.0"],"167":["141.0"],"198":["88.0"],"200":["40.6"],"204":["66.0"],"213":["89.0"],"215":["46.0"],"219":["155.0"],"226":["58.0"],"238":["67.0"],"239":["166.0"],"241":["69.0"],"279":["72.0"],"283":["148.0"],"300":["82.0"],"303":["130.0"],"304":["40.6","131.0"],"316":["134.0"],"322":["73.0"],"337":["90.0"],"344":["142.0"],"354":["83.0"],"380":["167.0"],"384":["179.0"],"398":["180.0"],"435":["92.0"],"438":["157.0"],"450":["59.0"],"452":["94.0"],"509":["75.0"],"516":["84.0"],"528":["181.0"],"567":["159.0"],"647":["86.0","144.0"],"700":["60.0"],"701":["61.0"],"704":["124.0"],"797":["111.0"],"876":["138.0","174.0"],"904":["161.0"],"921":["116.0"],"931":["102.0"],"1000":["1.10"],"1004":["153.0"],"1024":["91.0"],"1094":["150.0"],"1109":["151.0"],"1143":["81.0"],"1456":["154.0"],"1541":["113.0"],"1574":["140.0"],"1630":["65.0"],"1991":["42.1"],"290445":["167.0"],"变量提升":["0.0","0.1"],"var":["0.0","0.1","0.2","0.10","2.8","3.4","5.10","7.2","7.7","7.21","75.0","85.0","102.0","118.0","125.0","127.0","129.0","131.0","132.0","158.0","178.0","181.0"],"bell":["0.0"],"关于作用域":["0.0"],"函数表达式":["0.0","0.1"],"立即函数表达式的经典面试题":["0.0","0.1"],"变量提升带来的问题":["0.0"],"作用域":["0.0","5.4"],"全局作用域和函数作用域":["0.0"],"块级作用域":["0.0"],"let":["0.0","0.4","3.5","4.0","9.2","21.7","24.6","26.3","85.0","87.1","87.2","102.0","112.0","118.0","125.0","132.0","158.0","162.0","178.0"],"const":["0.0","0.4","0.10","3.3","4.0","4.1","4.8","10.8","11.0","21.9","23.1","23.3","24.1","26.1","30.12","46.0","163.0"],"暂时性死区":["0.0","0.4"],"作用域链":["0.0"],"词法作用域":["0.0"],"内存管理机制":["0.0","0.5"],"堆和栈":["0.0"],"栈空间和堆空间简介":["0.0"],"栈空间的重要作用":["0.0"],"管理函数调用":["0.0","0.7"],"js":["0.1","0.2","0.10","0.12","1.10","2.1","2.8","3.1","3.3","3.5","4.3","4.5","4.8","4.12","4.14","5.10","7.1","7.2","7.4","7.7","7.20","7.21","7.26","8.1","8.2","8.3","8.4","8.6","8.7","8.8","8.9","8.10","8.11","8.12","8.13","8.15","9.0","9.2","10.3","10.6","10.7","10.8","11.0","15.6","20.14","21.3","21.5","21.9","22.4","23.1","23.3","23.4","23.6","24.1","24.5","24.6","26.1","26.2","26.3","30.2","30.3","30.8","30.12","33.1","55.0","80.4","80.5","87.1","87.2","110.6","112.0","119.4","120.1","125.0","162.0","178.0"],"n":["0.1","21.2","87.1","87.2","102.0","103.0","115.0","119.3","151.0","152.0","178.0","179.0"],"function":["0.1","0.2","0.10","1.10","2.8","3.3","3.5","4.14","5.10","7.1","7.4","7.21","8.1","8.2","8.3","8.4","8.6","8.7","8.8","8.9","8.10","8.11","8.13","8.15","9.0","10.8","21.3","22.4","24.1","24.6","26.3","33.1","46.0","70.0","85.0","90.0","102.0","118.0","119.4","120.1","125.0","127.0","129.0","131.0","132.0","158.0","163.0","178.0","181.0"],"foo":["0.1","0.10","2.8","5.10"],"console":["0.1","0.2","1.10","3.3","5.10","7.26"],"变量容易在不被察觉的情况下被覆盖掉":["0.2"],"myname":["0.2"],"极客时间":["0.2"],"showname":["0.2"],"log":["0.2","1.10","3.3","5.10"],"在es6之前":["0.3"],"只有两种作用域":["0.3"],"全局作用域":["0.3"],"但由于变量提升带来的问题":["0.4"],"会给人带来误解":["0.4"],"所以es6引入了":["0.4"],"和":["0.4","1.7","20.8","22.10","33.8","82.0"],"关键字":["0.4"],"从而使":["0.4"],"javascript":["0.4","2.1","6.1","8.10","37.2","42.2"],"也能像其他语言一样拥有了":["0.4"],"的用法如下":["0.4"],"词法作用域就是指作用域是由代码中函数声明的位置来决定的":["0.5"],"所以词法作用域是静态的作用域":["0.5"],"通过它就能够预测代码在执行过程中如何查找标识符":["0.5"],"基本数据类型用":["0.6"],"栈":["0.6"],"存储":["0.6"],"栈会自动分配内存空间":["0.6"],"会自动释放":["0.6"],"引用数据类型的":["0.6"],"值":["0.6"],"用":["0.6"],"创建并切换函数执行上下文":["0.7"],"函数":["0.7","5.12"],"有两个主要的特性":["0.7"],"可被调用":["0.7"],"可以在一个函数中调用另外一个函数":["0.7"],"当函数调用发生时":["0.7"],"执行代码的控制权将从父函数转移到子函数":["0.7"],"子函数执行结束之后":["0.7"],"又会将代码执行控制权返还给父函数":["0.7"],"具有作用域机制":["0.7"],"是指函数在执行的时候可以将定义在函数内部的变量和外部环境隔离":["0.7"],"为什么还要堆":["0.8"],"因为栈空间有一个重要的作用是用来切换执行上下文":["0.8"],"所以栈空间一般不会设置太大":["0.8"],"因此容易产生栈溢出的问题":["0.8"],"为了解决栈空间小导致的栈溢出的问题":["0.8"],"所以使用":["0.8"],"堆空间":["0.8"],"v8如何实现闭包":["0.9"],"d":["0.10"],"return":["0.10","1.10","3.3","7.21","22.4","24.6","46.0","69.0","73.0","85.0","86.0","100.0","102.0","125.0","127.0","129.0","132.0","134.0","136.0","151.0","158.0","163.0"],"inner":["0.10"],"a":["0.10","2.1","7.21","30.2","46.0","58.0","59.0","90.0","136.0","163.0"],"b":["0.10","30.2","136.0"],"c":["0.10","136.0"],"f":["0.10","8.11"],"如上面这段代码":["0.10"],"inner函数调用了foo函数中的变量d":["0.10"],"形成了闭包":["0.10"],"这会带来两个问题":["0.10"],"编译阶段":["0.11"],"准备基础环境":["0.11"],"包括堆":["0.11"],"栈空间":["0.11"],"执行阶段":["0.12"],"执行阶段有以下3部分工作":["0.12"],"创建堆空间和栈空间":["0.12"],"创建执行上下文和作用域":["0.12"],"构建事件循环系统":["0.12"],"并由执行代码":["0.12"],"ps":["0.12","1.5","125.0"],"解释器执行字节码":["0.12"],"按照顺序解释执行字节码":["0.12"],"并输出执行结果":["0.12"],"当解释器执行到热点代码":["0.12"],"指被重复多次执行的代码":["0.12"],"时":["0.12","7.15","36.17"],"会优先执行被":["0.12"],"编译器":["0.12"],"编译成":["0.12"],"机器代码":["0.12"],"后的热点代码":["0.12"],"以便提升代码的执行速度":["0.12"],"有一个d8工具":["0.12"],"从v8源码编译出来的":["0.12"],"可以输出js代码的ast结构和作用域等":["0.12"],"d8":["0.12"],"print":["0.12"],"ast":["0.12"],"test":["0.12","2.1"],"scopes":["0.12"],"栈溢出错误是什么":["0.12"],"在":["0.12","2.8","3.3","8.14","22.1","22.3","36.17","42.13","43.0"],"chrome":["0.12","35.3","37.4"],"中":["0.12","16.0","20.8","36.11","43.0"],"事件循环机制":["1.0"],"宏任务":["1.0","1.5"],"网络请求":["1.0","1.1"],"文件读写":["1.0","1.1"],"settimeout":["1.0","1.1","1.10"],"setinterval":["1.0","1.1"],"微任务":["1.0","1.5"],"promise":["1.0","1.2","1.10","9.0","9.1","9.2","33.8"],"then":["1.0","1.2"],"指消息队列中的":["1.1"],"等待":["1.1","1.9"],"被":["1.1"],"主线程":["1.1"],"或":["1.2","34.7","43.0"],"reject":["1.2","1.10","9.2"],"await下一条语句":["1.2"],"引入微任务的初衷是为了解决异步回调的问题":["1.2"],"可以看成是一个需要":["1.2"],"异步":["1.2"],"执行的函数":["1.2"],"执行时机是在主函数执行结束之":["1.2"],"后":["1.2","34.7","64.0"],"当前":["1.2"],"宏任务结束之":["1.2"],"process":["1.3"],"开始":["1.4"],"过程详解":["1.5"],"总结":["1.5","22.0","24.0"],"一开始整段脚本作为第一个":["1.5"],"执行":["1.5"],"并将":["1.5"],"全局执行上下文":["1.5"],"压入调用栈":["1.5"],"并在执行上下文中创建一个空的微任务队列":["1.5"],"执行过程中":["1.5"],"同步代码":["1.5"],"直接压入":["1.5"],"调用栈":["1.5"],"直接执行":["1.5"],"进入宏任务队列":["1.5"],"即消息队列":["1.5"],"进入微任务队列":["1.5"],"中的所有同步任务执行完毕":["1.5"],"当前宏任务执行完出队":["1.5"],"理解检查当前":["1.5"],"微任务队列":["1.5"],"如果有则依次执行":["1.5"],"直到微任务队列为空":["1.5"],"执行队首新的宏任务":["1.5"],"回到2":["1.5"],"依此循环":["1.5"],"直到宏任务和微任务队列都为空":["1.5"],"同一次事件循环中":["1.5"],"微任务永远在宏任务之前执行":["1.5"],"微任务是在当前的任务快要执行结束之前执行的":["1.5"],"执行宏任务时":["1.6"],"遇到了微任务会怎么样执行":["1.6"],"遇到微任务":["1.6"],"会将该微任务放进微任务队列的末尾":["1.6"],"当当前宏任务执行完毕之后":["1.6"],"再按顺序执行微任务队列里面的任务":["1.6"],"执行宏任务":["1.6"],"将原来的用回调函数的异步编程方法转成用":["1.7"],"relsove":["1.7"],"yield":["1.8","9.0"],"generator函数是将函数":["1.8"],"分步骤阻塞":["1.8"],"只有主动调用":["1.8"],"next":["1.8","23.4","26.0","26.2"],"才能进行下一步":["1.8"],"语法上":["1.8"],"首先可以把它理解成":["1.8"],"generator":["1.8","9.0"],"函数是一个状态机":["1.8"],"封装了多个内部状态":["1.8"],"函数除了状态机":["1.8"],"还是一个遍历器对象生成函数":["1.8"],"可暂停函数":["1.8"],"yield可暂停":["1.8"],"next方法可启动":["1.8"],"每次返回的是yield后的表达式结果":["1.8"],"yield表达式本身没有返回值":["1.8"],"或者说总是返回undefined":["1.8"],"await":["1.9","1.10","9.0"],"异步编程的":["1.9"],"终极":["1.9"],"方案":["1.9"],"async本质上是generator的语法糖":["1.9"],"自带一个状态机":["1.9"],"在await的部分":["1.9"],"返回":["1.9"],"返回后":["1.9"],"自动":["1.9"],"执行下一步":["1.9"],"内置了执行器":["1.9"],"而且相较于promise":["1.9"],"img":["1.10","5.1","21.4","30.14","31.0","33.1","34.1","35.2","37.3","38.2","39.2","41.1","41.6","55.0","64.0","119.1","119.2","119.3","119.4","178.0"],"src":["1.10","5.1","21.4","31.0","33.1","34.1","35.2","37.3","38.2","39.2","41.1","41.6","55.0","64.0","80.0","119.1","119.2","119.3","119.4","176.0","178.0"],"picture":["1.10","5.1","31.0","33.1","34.1","35.2","37.3","38.2","39.2","41.1","41.6","55.0","64.0","176.0","178.0"],"pic7":["1.10"],"png":["1.10","5.1","21.4","33.1","34.1","37.3","38.2","39.2","41.1","41.6","55.0","176.0","178.0"],"width":["1.10","5.1","38.2","39.2","41.1","41.6","55.0","176.0"],"结合promise和async":["1.10"],"await的事件循环例题":["1.10"],"例题一":["1.10","7.21"],"async":["1.10","9.0"],"fn":["1.10"],"run":["1.10"],"需要执行150ms左右":["1.10"],"虽然第二个settimeout已经到达时间":["1.10"],"但不会执行":["1.10"],"for":["1.10","10.0","54.0","58.0","59.0","63.0","90.0","102.0","138.0","152.0","173.0","177.0"],"垃圾数据如何产生":["2.0"],"垃圾回收":["2.0"],"garbage":["2.0"],"collection":["2.0"],"算法":["2.0","2.3"],"副垃圾回收器":["2.0","2.4"],"无论是使用什么语言":["2.1"],"我们都会频繁地使用数据":["2.1"],"这些数据会被存放到栈和堆中":["2.1"],"通常的方式是在内存中创建一块空间":["2.1"],"使用这块空间":["2.1"],"在不需要的时候回收这块空间":["2.1"],"window":["2.1"],"new":["2.1","3.4","7.7","30.14","87.2"],"object":["2.1","3.4","5.7","6.3","7.0","7.4","8.11","10.0"],"uint16array":["2.1"],"当":["2.1","34.7","42.13"],"执行这段代码的时候":["2.1"],"新生代垃圾回收":["2.2"],"scavenge算法":["2.2"],"副垃圾回收器主要负责新生代的垃圾回收":["2.2"],"新生代区域中对象的特点":["2.2"],"对象占用空间小":["2.2"],"存活时间短":["2.2"],"触发回收操作频繁":["2.2"],"scavenge":["2.2"],"算法把新生代空间对半划分为两个区域":["2.2"],"老生代垃圾回收":["2.3"],"标记":["2.3"],"清除":["2.3"],"mark":["2.3","20.9","22.0"],"sweep":["2.3"],"整理":["2.3"],"compact":["2.3"],"刚刚介绍了新生代的回收方式":["2.3"],"那么新生代中的变量如果经过":["2.3"],"多次回收":["2.3"],"后依然存在":["2.3"],"那么就会被放入到":["2.3"],"老生代内存":["2.3"],"是指垃圾回收器在主线程上执行的过程中":["2.4"],"还会开启多个协助线程":["2.4"],"增量式垃圾回收":["2.5"],"是指垃圾收集器将标记工作分解为":["2.5"],"更小":["2.5"],"的块":["2.5"],"并且穿插在主线程不同的任务之间执行":["2.5"],"采用增量垃圾回收时":["2.5"],"垃圾回收器没有必要一次执行完整的垃圾回收过程":["2.5"],"每次执行的只是整个垃圾回收过程中的一小部分工作":["2.5"],"具体流程你可以参看下图":["2.5"],"concurrent":["2.6","25.0"],"回收":["2.6"],"增量回收是在主线程上执行的":["2.6"],"如果主线程繁忙的时候":["2.6"],"增量垃圾回收操作依然会增加主线程处理任务的吞吐量":["2.6"],"并行":["2.7","37.1"],"增量":["2.7"],"并发":["2.7"],"v8":["2.7"],"的主垃圾回收器就融合了上面介绍的三种机制":["2.7"],"来实现垃圾回收":["2.7"],"全局变量":["2.8"],"非严格模式":["2.8"],"下当引用未声明的变量时":["2.8"],"会在":["2.8","36.2"],"全局对象":["2.8"],"中创建一个新变量":["2.8"],"arg":["2.8"],"bar":["2.8"],"some":["2.8"],"text":["2.8"],"bar将泄漏到全局":["2.8"],"原因":["2.8","10.1"],"全局变量是根据定义无法被垃圾回收机制收集":["2.8"],"解决办法":["2.8"],"严格模式":["2.8"],"use":["2.8"],"strict":["2.8"],"eslint检查":["2.8"],"被遗忘的定时器和回调函数":["2.8"],"someresource":["2.8"],"getdata":["2.8"],"参考链接":["2.9","5.5","7.13","7.23","36.3","36.10","36.16","43.0","145.0"],"task":["2.9"],"manager":["2.9"],"用来粗略地查看内存使用情况":["2.9"],"入口":["2.9"],"apply":["3.0"],"bind使用":["3.0"],"使用一个指定的":["3.1"],"this":["3.1","3.2","3.3","4.14","5.10","8.8","8.9","8.10","8.13","9.2","30.4","150.0","181.0"],"值和单独给出的一个或多个参数来调用一个函数":["3.1"],"调用一个具有给定":["3.2"],"值的函数":["3.2"],"以及以一个":["3.2"],"方法将":["3.3"],"创建一个新的函数":["3.3"],"被调用时":["3.3"],"这个新函数的":["3.3"],"被指定为":["3.3"],"的第一个参数":["3.3"],"而其余参数将作为新函数的参数":["3.3"],"供调用时使用":["3.3"],"module":["3.3","30.1","30.4","30.5","30.12"],"x":["3.3"],"getx":["3.3"],"unboundgetx":["3.3"],"the":["3.3"],"gets":["3.3"],"invoked":["3.3"],"at":["3.3"],"global":["3.3"],"scope":["3.3"],"expected":["3.3"],"output":["3.3"],"undefined":["3.3","7.9","7.10","7.25","9.2"],"boundgetx":["3.3"],"call":["3.3","3.5","7.0","7.2"],"apply区别":["3.3"],"创建一个空对象":["3.4"],"从堆内存里":["3.4"],"开辟了一块内存":["3.4"],"obj":["3.4","3.5","8.11"],"mynew":["3.5"],"创建对象":["3.5"],"constructor":["3.5","8.3","9.2","150.0"],"shift":["3.5"],"arguments":["3.5"],"获取构造函数":["3.5"],"把数组的第一个元素从其中删除":["3.5"],"对原有语法的增强":["4.0"],"结构赋值":["4.0"],"模版字符串":["4.0"],"参数默认值":["4.5"],"收起剩余数据":["4.6"],"展开数组":["4.6"],"收取剩余参数":["4.6"],"取代arguments":["4.6"],"arguments是一个类数组":["4.6"],"箭头函数没有自己的this对象":["4.8"],"它的this指向上级作用域":["4.8"],"name":["4.8","4.14","8.1","8.3","8.4","8.7","8.8","8.9","8.10","8.13"],"tony":["4.8"],"assign":["4.9","8.15","10.0","10.5"],"用于合并多个对象":["4.9"],"第一个参数就是最终的返回值":["4.9"],"如果对象的属性名相同":["4.9"],"后面的覆盖前面的":["4.9"],"is":["4.10"],"判断两个值是否相等":["4.10"],"严等于":["4.10"],"返回布尔值":["4.10"],"封装操作对象的统一api":["4.12"],"reflect的目的是使用同一套方式去操作对象":["4.12"],"解决回调函数的地狱式嵌套问题":["4.13"],"类":["4.14"],"es5写法":["4.14"],"people":["4.14"],"设置实例属性":["4.14"],"设置实例的共享方法":["4.14"],"prototype":["4.14","7.0","7.2","8.3"],"类似于数组":["4.15"],"es5中的对象key只能是字符串":["4.16"],"唯一值":["4.17"],"of":["4.18"],"词法":["5.0","5.4"],"静态":["5.0","5.2"],"参考资料":["5.1"],"https":["5.1","5.5","5.7","5.8","5.11","5.12","5.13","6.1","7.13","7.23","12.0","19.2","33.7","36.3","36.10","36.16","43.0","145.0","160.0","162.0","167.0"],"github":["5.1","5.5","5.7","5.8","5.12","5.13","12.0","160.0","162.0"],"com":["5.1","5.5","5.7","5.8","5.12","5.13","12.0"],"mqyqingfeng":["5.1","5.5","5.7","5.8","5.12","5.13"],"blog":["5.1","5.5","5.7","5.8","5.12","5.13"],"issues":["5.1","5.5","5.7","5.8","5.12","5.13"],"proto":["5.1","7.4"],"作用域是指程序源代码中定义变量的区域":["5.3"],"动态作用域":["5.4"],"函数的作用域在函数":["5.4"],"定义":["5.4"],"的时候就决定了":["5.4"],"font":["5.4"],"color":["5.4"],"red":["5.4"],"js采用此方式":["5.4"],"函数的作用域是在函数调用的时候才决定的":["5.4"],"例子":["5.4","22.0","23.0","26.0","110.0"],"对于每个":["5.5"],"执行上下文":["5.5"],"变量对象会包括":["5.6"],"函数的所有形参":["5.6"],"如果是函数上下文":["5.6"],"由名称和对应值组成的一个变量对象的属性被创建":["5.6"],"对于每个执行上下文":["5.7"],"都有三个重要属性":["5.7"],"变量对象":["5.7"],"variable":["5.7"],"es语言类型":["5.8"],"除了undefined":["5.8"],"null":["5.8","6.3","7.9","7.10","7.25","22.6","24.3","178.0"],"boolean":["5.8","7.5","7.7","7.8","7.9","7.10","7.20"],"string":["5.8","7.1","7.2","7.7","7.16","68.0","69.0","81.0","86.0","134.0","157.0"],"this对象代表函数运行时":["5.9"],"默认绑定":["5.10"],"隐式绑定":["5.10"],"显式绑定":["5.10"],"new绑定":["5.10"],"箭头函数":["5.10"],"默不满足其他的绑定方式":["5.10"],"而执行的绑定规则":["5.10"],"默认绑定会把this绑定到全局对象":["5.10"],"num":["5.10","7.7"],"www":["5.12","7.13"],"liaoxuefeng":["5.12"],"wiki":["5.12"],"1022910821149312":["5.12"],"1023021250770016":["5.12"],"mdn对闭包的定义":["5.12"],"闭包是指那些能够访问自由变量的函数":["5.12"],"其中自由变量是指在函数中使用的":["5.12"],"但既不是函数参数也不是函数的局部变量的变量":["5.12"],"所以":["5.12"],"函数能够访问的自由变量":["5.12"],"简单的例子":["5.12"],"按值传递":["5.13"],"把函数外部的值复制给函数内部的参数":["5.13"],"就和把值从一个变量复制到另一个变量一样":["5.13"],"修改函数内部的参数":["5.13"],"盘点六个阅读react源码后get到的基础知识":["6.0"],"mdn":["6.1"],"developer":["6.1"],"mozilla":["6.1"],"org":["6.1"],"zh":["6.1","160.0","162.0"],"cn":["6.1","19.2","36.3","45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","72.0","73.0","74.0","75.0","76.0","77.0","78.0","81.0","82.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","100.0","101.0","102.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","115.0","116.0","122.0","123.0","124.0","126.0","127.0","130.0","131.0","132.0","134.0","135.0","136.0","137.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"docs":["6.1"],"web":["6.1","34.0","36.15"],"reference":["6.1"],"判断promise对象":["6.2"],"react官方使用的方式是通过判断条件":["6.2"],"有两个类型判断关键字":["6.3"],"typeof":["6.3","7.0"],"instanceof":["6.3","7.0"],"但他们有各自的缺陷":["6.3"],"是用来判断变量基本类型的关键字":["6.3"],"但typeof":["6.3"],"数据类型":["7.0"],"类型判断":["7.0"],"tostring":["7.0","7.2","7.21","7.25","7.26"],"手写instanceof":["7.0"],"类型转换":["7.0"],"number":["7.1","7.2","7.7","65.0","67.0","69.0","73.0","85.0","86.0","89.0","91.0","100.0","102.0","103.0","115.0","122.0","127.0","129.0","131.0","132.0","136.0","140.0","151.0","153.0","158.0","161.0","166.0","181.0"],"hello":["7.1"],"instanceof原理":["7.3"],"用来判断一个构造函数的prototype属性所指向的对象是否存在另外一个要检测对象的原型链上":["7.3"],"myinstanceof":["7.4"],"left":["7.4","46.0","85.0","125.0","132.0","158.0","162.0","163.0"],"right":["7.4","46.0","85.0","125.0","132.0","158.0","162.0","163.0"],"getprototypeof":["7.4"],"在介绍隐式类型转换之前先看看toprimitive":["7.5"],"和string":["7.5"],"转换为原始值的规则":["7.6"],"如果preferredtype被标记为number":["7.6"],"则会进行下面的操作流程来转换输入的值":["7.6"],"如果输入的值已经是一个原始值":["7.6"],"则":["7.6"],"直接返回":["7.6"],"它":["7.6","30.14"],"该两个方法一定在对象中存在":["7.7"],"valueof":["7.7","7.21"],"这三种构造函数生成的基础值的对象形式":["7.7"],"通过valueof转换后会变成相应的原始值":["7.7"],"str":["7.7"],"转为":["7.9","7.10"],"nan":["7.10","7.20"],"只有":["7.11","7.28"],"原始类型":["7.12"],"当对象转为其他原始类型时":["7.12"],"freecodecamp":["7.13"],"乘":["7.15"],"除":["7.15"],"star":["7.15","7.16","7.18","23.0","23.4","24.0"],"我们在对各种非number类型运用数学运算符":["7.15"],"会先将非number类型转换为number类型":["7.15"],"转换规则参考":["7.15"],"其他类型转为number类型":["7.15"],"为什么加法要区别对待":["7.16"],"因为js里":["7.16"],"还可以用来拼接字符串":["7.16"],"谨记以下3条":["7.16"],"优先级由高到低":["7.16"],"当一侧为":["7.16"],"类型":["7.16","7.22","10.7","10.8"],"被识别为":["7.16"],"字符串拼接":["7.16"],"当我们使用":["7.17"],"如果是对象":["7.19"],"比较中的5条规则":["7.20"],"规则":["7.20"],"和其他任何类型比较永远返回false":["7.20"],"包括和他自己":["7.20"],"false":["7.20"],"和其他任何类型比较":["7.20"],"首先被转换为":["7.20"],"true":["7.21","7.25"],"首先":["7.21"],"x与y类型不同":["7.21"],"x为boolean类型":["7.21"],"先转为number类型":["7.21"],"接着":["7.21"],"x为number":["7.21"],"y为object类型":["7.21"],"对y进行原始转换":["7.21"],"toprimitive":["7.21"],"没有指定转换类型":["7.21"],"有什么区别":["7.22"],"叫做严格相等":["7.22"],"是指":["7.22","33.7"],"左右两边不仅值要相等":["7.22"],"也要相等":["7.22"],"tostring负责处理非字符串到字符串的强制类型转换":["7.24"],"的基本类型值的字符串化规则":["7.25"],"转换为":["7.25"],"转化为":["7.25"],"stringify":["7.26"],"在将json对象序列化为字符串时":["7.26"],"也涉及到了字符串化的相关规则":["7.26"],"对大多数简单值来说":["7.26"],"json字符串化和":["7.26"],"的效果基本相同":["7.26"],"tonumber负责将非数字转化为数字":["7.27"],"类型转换表":["7.29"],"工厂模式":["8.0"],"构造函数模式":["8.0","8.4"],"原型模式":["8.0","8.4"],"createperson":["8.1"],"person":["8.2","8.3","8.4","8.6","8.7"],"与":["8.4","21.7","21.9"],"双剑合璧":["8.4"],"parent":["8.8","8.9","8.10","8.13"],"kevin":["8.8"],"daisy":["8.8"],"经典继承":["8.9","8.10"],"原型链继承":["8.10"],"中最常用的继承模式":["8.10"],"colors":["8.10"],"利用一个空对象作为中介":["8.11"],"将某个对象直接赋值给空对象构造函数的原型":["8.11"],"在原型式继承的基础上":["8.12"],"增强对象":["8.12"],"返回构造函数":["8.12"],"最为推荐":["8.13"],"结合":["8.13"],"借用构造函数":["8.13"],"传递参数和":["8.13"],"寄生模式":["8.13"],"实现继承":["8.13"],"父类初始化实例属性和原型属性":["8.13"],"es6可以用过extends关键字实现继承":["8.14"],"这比通过es5的修改原型链实现继承":["8.14"],"要清晰和方法很多":["8.14"],"class":["8.14","9.2","38.13","112.0","150.0","163.0"],"中继承主要是依靠两个东西":["8.14"],"extends":["8.14"],"super":["8.14"],"对于该继承的效果和之前我们介绍过的":["8.14"],"混入方式继承就是":["8.15"],"一个子类继承多个父类":["8.15"],"在这边":["8.15"],"我们需要用到es6中的方法":["8.15"],"bject":["8.15"],"它的作用就是可以把":["8.15"],"多个对象":["8.15"],"的属性和方法拷贝到目标对象中":["8.15"],"若是存在同名属性的话":["8.15"],"后面的会覆盖前面":["8.15"],"当然":["8.15"],"这种拷贝是一种浅拷贝啦":["8.15"],"父类1":["8.15"],"回调函数":["9.0"],"为什么promise要引入微任务":["9.0"],"手写promise":["9.0"],"我们知道javascript语言的执行环境是":["9.0"],"单线程":["9.0"],"也就是指一次只能完成一件任务":["9.0"],"如果有多个任务":["9.0"],"就必须排队":["9.0"],"前面一个任务完成":["9.0"],"再执行后面一个任务":["9.0"],"但是只要有一个任务耗时很长":["9.0"],"后面的任务都必须排队等着":["9.0"],"会拖延整个程序的执行":["9.0"],"为了解决这个问题":["9.0"],"javascript语言将任务的执行模式分成两种":["9.0"],"同步和异步":["9.0"],"下面介绍几种异步编程方式":["9.0"],"异步编程进化史":["9.0"],"callback":["9.0"],"回调函数是异步编程最基本的方法":["9.0"],"doasync1":["9.0"],"中的":["9.1"],"执行函数是同步":["9.1"],"从零实现promise":["9.2"],"executer":["9.2"],"构造函数constructor里面是个执行器":["9.2"],"status":["9.2"],"pending":["9.2","23.5","23.6","24.6"],"默认的状态":["9.2"],"value":["9.2"],"成功的值默认undefined":["9.2"],"reason":["9.2"],"失败的值默认undefined":["9.2"],"状态只有在pending时候才能改变":["9.2"],"resolvefn":["9.2"],"判断只有等待时才能resolve成功":["9.2"],"if":["9.2","21.9","24.6","40.7","40.8","125.0"],"resolve":["9.2"],"判断只有等待时才能reject失败":["9.2"],"rejectfn":["9.2"],"try":["9.2"],"把resolve和reject两个函数传给执行器executer":["9.2"],"catch":["9.2"],"e":["9.2"],"浅拷贝":["10.0"],"深拷贝":["10.0","10.8"],"in":["10.0","10.3","40.8"],"json":["10.0"],"parse":["10.0","10.4","30.4"],"stringfy":["10.0","10.4"],"解构赋值":["10.0"],"深度优先遍历":["10.0"],"递归":["10.0","10.7"],"直接将对象赋值给一个新变量":["10.1"],"原理":["10.2"],"为了":["10.7"],"解决循环引用":["10.7"],"的问题":["10.7"],"自身有个key对应的value又是自身":["10.7"],"我们必须记录要拷贝的这个对象之前是不是已经被深拷贝过一次":["10.7"],"如果已经被拷贝过一次":["10.7"],"就直接返回拷贝的时候对应的内存空间即可":["10.7"],"不然会进入递归的无限循环":["10.7"],"造成栈内存溢出":["10.7"],"gettype方法是用来获取变量准确的类型":["10.7","10.8"],"引用类型包括object":["10.7","10.8"],"array":["10.7","10.8","87.2"],"date":["10.7","10.8"],"regexp":["10.7","10.8"],"gettype":["10.8"],"节流":["11.0"],"参考文章":["11.0"],"含义":["11.0"],"在事件触发n秒后才执行":["11.0"],"如果在事件触发的n秒内又触发该事件":["11.0"],"不会再被执行":["11.0"],"将多次执行变为最后一次执行":["11.0"],"场景":["11.0"],"用户在频繁触发某个事件的时候":["11.0"],"比如搜索框":["11.0"],"输入完毕之后才会调用接口获取联想数据":["11.0"],"func是用户传入需要防抖的函数":["11.0"],"wait是等待时间":["11.0"],"debounce":["11.0"],"func":["11.0"],"我叫弯弯你记住":["12.0"],"个人信息":["12.0"],"姓名":["12.0"],"万雯赟":["12.0"],"女":["12.0"],"年龄":["12.0"],"项目简介":["12.1","12.2","12.3"],"业务系统测试辅助平台":["12.1"],"对需求在提测流程中的前端代码执行情况":["12.1"],"公司内部轻数据管理平台":["12.2"],"兼顾需求方的配置体验和研发对数据使用场景的不同诉求":["12.2"],"提供分层的配置管理":["12.2"],"品牌广告平台是公司内部投放品牌广告的平台":["12.3"],"包括投前":["12.3"],"投中":["12.3"],"vpteampagetitle":["14.0"],"template":["14.0"],"页面渲染过程":["15.0","15.1"],"csr":["15.0"],"客户端渲染":["15.0","15.2"],"在没有ajax的时候":["15.1"],"几乎所有应用都是服务端渲染":["15.1"],"此时服务器渲染非现在的服务器渲染":["15.1"],"过程":["15.1","39.2"],"有了nodejs之后":["15.2"],"项目可以做到前后端分离":["15.2"],"浏览器请求url":["15.2","15.3"],"前端服务器":["15.2"],"直接返回一个":["15.2"],"服务端渲染":["15.3","15.6"],"前端服务器接收到url请求之后":["15.3"],"根据不同的url":["15.3"],"前端服务器向后端服务器请求数据":["15.3"],"请求完成后":["15.3"],"服务端渲染的实现一般有两种方法":["15.4"],"分别是":["15.4"],"在服务器端使用":["15.4"],"模板引擎":["15.4"],"渲染页面":["15.4"],"然后将渲染好的":["15.4"],"服务端渲染如何处理路由":["15.5"],"服务端渲染中处理路由有两种主要方式":["15.5"],"静态路由和动态路由":["15.5"],"静态路由是指路由信息在应用启动时就已经确定":["15.5"],"而动态路由是指路由信息在应用运行时才会动态变化":["15.5"],"对于静态路由":["15.5"],"你可以使用第三方的路由库如":["15.5"],"router":["15.5","16.2"],"来处理":["15.5"],"在服务端":["15.5"],"你可以在":["15.5"],"rendertostring":["15.5"],"方法中使用":["15.5"],"js主要是通过以下几个核心机制实现服务端渲染的":["15.6"],"你是否了解客户端渲染和服务端渲染":["15.7"],"它们有何区别":["15.7"],"静态页面生成":["15.8"],"hash模式":["16.0"],"react":["16.0","20.0","20.3","25.0","26.1","26.2","26.3"],"路由hash模式实现原理":["16.0","16.1"],"history模式":["16.0"],"路由history模式实现原理":["16.0","16.2"],"前端路由是指在单页面应用":["16.0"],"spa":["16.0"],"通过改变":["16.0"],"url":["16.0","16.1","30.14","36.1"],"路径来实现页面的切换和状态的管理的一种技术":["16.0"],"相比传统的多页面应用":["16.0"],"前端路由可以提高用户的体验":["16.0"],"避免了多次请求页面资源的时间消耗":["16.0"],"路由的":["16.1"],"hash":["16.1","30.8"],"模式指的是":["16.1"],"地址中以":["16.1"],"开头的部分用于匹配路由":["16.1"],"而不是直接将地址路径作为路由匹配":["16.1"],"实现":["16.1"],"模式的原理是":["16.1"],"的":["16.2","31.0","36.1","36.14","36.15","36.17","40.5","120.2"],"history":["16.2"],"模式是通过":["16.2"],"html5":["16.2"],"api":["16.2"],"实现的":["16.2","33.8"],"前端跨域问题需不需要后台支持":["17.0"],"axios和fetch的区别":["19.0"],"juejin":["19.2","36.3"],"react理念":["20.0"],"老react架构":["20.0"],"新react架构":["20.0"],"react16":["20.0","20.4"],"react入口函数":["20.1"],"reactdom":["20.1","23.0"],"react理念是":["20.2"],"构建":["20.2"],"react15架构可以分为两层":["20.3"],"reconciler":["20.3"],"react16架构可以分为三层":["20.4"],"调度器":["20.5"],"协调器":["20.6"],"render阶段":["20.6","20.10","22.0"],"在react15中reconciler是递归处理虚拟dom的":["20.6"],"在react16中":["20.6"],"更新工作从递归变成了可以":["20.6"],"中断":["20.6","42.9"],"渲染器":["20.7"],"假设有三个更新":["20.8"],"优先级依次为低":["20.8"],"高":["20.8"],"当前已有":["20.8"],"更新1":["20.8"],"更新2":["20.8"],"由于":["20.8","42.11"],"heavy":["20.9","22.0"],"exclamation":["20.9","22.0","23.0"],"react16采用":["20.9"],"代数效应":["20.11"],"是函数式编程中的一个概念":["20.11"],"用于将副作用从函数调用中分离":["20.11"],"也就是说能够将副作用从函数中逻辑中分离":["20.11"],"使得函数关注点保持存粹":["20.11"],"代数效应在react中的应用":["20.11"],"架构":["20.12"],"层面":["20.12"],"之前react15的reconciler采用递归的方式执行":["20.12"],"数据保存在":["20.12"],"递归调用栈":["20.12"],"每个":["20.13"],"fiber节点":["20.13"],"有个对应的":["20.13"],"作为一种静态的数据结构":["20.14"],"保存了组件相关的信息":["20.14"],"fiber对应组件的类型":["20.14"],"作为":["20.15"],"动态的工作单元":["20.15"],"每个fiber节点保存了本次更新中该组件":["20.15"],"需要更新的状态":["20.15"],"需要执行的工作":["20.15"],"双缓存":["20.16","20.18"],"当我们用canvas绘制动画":["20.17"],"每一帧绘制前都会调用ctx":["20.17"],"react使用":["20.18"],"来完成":["20.18"],"fiber树":["20.18"],"的构建与替换":["20.18"],"对应着":["20.18"],"dom树":["20.18"],"的创建与更新":["20.18"],"在react中最多会同时存在两棵fiber树":["20.18"],"当前屏幕上":["20.18"],"显示内容":["20.18"],"对应的fiber树称为":["20.18"],"current":["20.18","22.10"],"fiber":["20.18","22.5","22.9","22.11","23.2","23.4","24.4"],"tree":["20.18","59.0","90.0"],"其对应节点为":["20.18"],"通过本章的学习":["20.19"],"我们了解了react的":["20.19"],"scheduler":["20.19"],"参考步骤":["20.20"],"diff算法":["21.0"],"概览":["21.0"],"diff的瓶颈以及react如何应对":["21.0"],"diff是如何实现的":["21.0"],"单节点diff":["21.0"],"多节点diff":["21.0"],"为了防止概念混淆":["21.1"],"这里再强调下":["21.1"],"一个dom节点在某一时刻最多会有4个节点和他相关":["21.1"],"由于diff操作本身也会带来性能损耗":["21.2"],"即使在最前沿的算法中":["21.2"],"将前后两棵树完全比对的算法的复杂程度为":["21.2"],"o":["21.2","152.0","167.0"],"其中n是树中元素的数量":["21.2"],"我们从diff的入口函数":["21.3"],"reconcilechildfibers":["21.3"],"出发":["21.3"],"该函数会根据newchild":["21.3"],"即":["21.3"],"jsx对象":["21.3"],"类型调用不同的处理函数":["21.3"],"根据newchild类型选择不同diff函数处理":["21.3"],"单节点diff流程如下":["21.4"],"pictures":["21.4","119.1","119.2","119.3","119.4"],"singlediff":["21.4"],"核心在于":["21.4"],"如何判断dom节点是否可以复用":["21.4"],"react通过先判断key是否相同":["21.4"],"如果":["21.4","21.7"],"key":["21.4","21.9"],"相同":["21.4"],"再判断":["21.4"],"需要处理的情况如下":["21.5"],"节点更新":["21.5"],"包括节点属性变化":["21.5"],"节点类型变化等":["21.5"],"之前":["21.5"],"ul":["21.5"],"li":["21.5"],"在日常开发中":["21.6"],"相较于新增和删除":["21.6"],"更新":["21.6","24.2"],"组件发生的频率更高":["21.6"],"过程如下":["21.7"],"i":["21.7","21.9","22.4","46.0","80.3","80.4","80.5","119.3","152.0","163.0"],"遍历newchildren":["21.7"],"将":["21.7"],"newchildren":["21.7","21.8","21.9"],"oldfiber":["21.7","21.9"],"比较":["21.7"],"判断dom节点是否可复用":["21.7"],"可复用":["21.7"],"继续比较":["21.7"],"与oldfiber":["21.7"],"sibling":["21.7"],"sibling表示兄弟节点":["21.7"],"可以复用则继续遍历":["21.7"],"不可复用":["21.7"],"分两种情况":["21.7"],"基于第一轮遍历结束后":["21.8"],"产生的4种情况":["21.8"],"进行第二轮遍历":["21.8"],"都没遍历完的情况":["21.9"],"处理移动的节点":["21.9"],"由于有节点在这次":["21.9"],"更新中改变了位置":["21.9"],"所以不能再用位置索引":["21.9"],"对比前后的节点":["21.9"],"而要用到":["21.9"],"为了快速的找到key对应的oldfiber":["21.9"],"我们将所有还未处理的oldfiber存入":["21.9"],"以key为key":["21.9"],"oldfiber为value的map中":["21.9"],"existingchildren":["21.9"],"mapremainingchildren":["21.9"],"returnfiber":["21.9"],"接下来遍历剩余的newchildren":["21.9"],"通过":["21.9","33.7","36.17","37.4"],"就能在existingchildren中找到key相同的":["21.9"],"既然我们的目标是寻找移动的节点":["21.9"],"那么我们需要明确":["21.9"],"节点是否移动是以什么为参照物":["21.9"],"我们的参照物是":["21.9"],"最后一个可复用的节点在oldfiber中的位置索引":["21.9"],"用变量":["21.9"],"lastplacedindex":["21.9"],"表示":["21.9","22.11"],"oldindex":["21.9"],"表示当前遍历到的可复用节点在oldfiber中的位置索引":["21.9"],"代表该可复用节点不需要移动":["21.9"],"并执行":["21.9"],"专业术语解释":["22.0"],"commit阶段等与总结":["22.0"],"流程概览":["22.0"],"递":["22.0"],"阶段":["22.0","22.1","22.2","22.3","22.5","22.9"],"beginwork":["22.0","22.2","22.5","22.8","22.10"],"归":["22.0"],"completework":["22.0","22.3","22.9"],"reconcilechildren":["22.0"],"effecttag":["22.0","22.11","22.15","22.18"],"render":["22.1"],"react将更新应用于通过setstate或render方法触发的组件":["22.1"],"并确定需要在用户屏幕上做哪些更新":["22.1"],"哪些节点需要插入":["22.1"],"app":["22.4","24.1","45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","72.0","73.0","74.0","75.0","76.0","77.0","78.0","81.0","82.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","100.0","101.0","102.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","115.0","116.0","122.0","123.0","124.0","126.0","127.0","130.0","131.0","132.0","134.0","135.0","136.0","137.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"div":["22.4"],"am":["22.4"],"span":["22.4"],"源码在此":["22.5"],"的工作是传入":["22.5","22.8"],"当前fiber":["22.5"],"节点":["22.5"],"根据":["22.5","22.10","29.3","38.9"],"tag":["22.5","22.9"],"来创建其":["22.5"],"子fiber":["22.5"],"并为fiber节点带上":["22.5"],"通过current":["22.6"],"区分mount与update":["22.6"],"对于mount的组件":["22.6"],"他会创建新的":["22.6"],"它表示":["22.7"],"render阶段结束后":["22.7"],"通知render":["22.7"],"也是针对不同":["22.9"],"组件类型":["22.9"],"类组件":["22.9"],"我们重点关注页面渲染所必须的":["22.10"],"hostcomponent":["22.10"],"即原生dom组件对应的fiber节点":["22.10"],"一样":["22.10"],"节点在":["22.11"],"commit阶段":["22.11"],"completework的目的就是为了":["22.12"],"创建对应的dom节点":["22.12"],"插入对应的":["22.12"],"父级节点":["22.12"],"的dom节点":["22.12"],"为其添加":["22.12"],"副作用":["22.12"],"标识":["22.12"],"mutation阶段":["22.13"],"执行dom操作前":["22.13"],"在before":["22.13"],"会遍历":["22.13"],"effectlist":["22.13","22.14","22.18"],"执行dom操作":["22.14"],"mutation阶段会遍历":["22.14"],"effect":["22.15","22.16","22.17"],"含有":["22.15","22.17"],"执行dom操作后":["22.18"],"layout阶段也会遍历":["22.18"],"依次执行":["22.18"],"commitlayouteffects":["22.18"],"该方法的主要工作为根据":["22.18"],"调用不同的处理函数":["22.18"],"处理fiber":["22.18"],"心智模式":["23.0"],"同步":["23.0"],"并发更新react":["23.0"],"触发状态更新":["23.0"],"update分类":["23.0"],"update":["23.0","23.1"],"update的结构":["23.0"],"update与fiber的联系":["23.0"],"updatequeue":["23.0","23.2","23.4","23.5"],"调度更新":["23.0"],"深入理解优先级":["23.0"],"如何保证update不丢失":["23.0"],"如何保证状态依赖的连续性":["23.0"],"update存在一个连接其他update形成":["23.2"],"链表":["23.2"],"的字段next":["23.2"],"联想到react中另一种以":["23.2"],"形式组成的结构":["23.2"],"classcomponent与hostroot":["23.3"],"使用的updatequeue结构如下":["23.3"],"假设有一个fiber刚经历":["23.4"],"commit":["23.4"],"阶段完成渲染":["23.4"],"该fiber上有两个由于优先级过低所以在上次的render阶段并没有处理的update":["23.4"],"他们会成为下次更新的":["23.4"],"baseupdate":["23.4","23.6"],"我们称其为u1和u2":["23.4"],"其中":["23.4"],"u1":["23.4"],"u2":["23.4"],"此时的":["23.4"],"如下":["23.4"],"在render阶段":["23.5"],"shared":["23.5","23.6"],"的环被剪开并连接在":["23.5"],"当某个update由于优先级低而被跳过时":["23.6"],"保存在":["23.6"],"中的不仅是该update":["23.6"],"还包括链表中该update之后的所有update":["23.6"],"例如":["23.6","30.8","34.7"],"其中字母代表该update要在页面插入的字母":["23.6"],"数字代表优先级":["23.6"],"值越低优先级越高":["23.6"],"basestate":["23.6","24.6"],"a1":["23.6"],"b2":["23.6"],"c1":["23.6"],"d2":["23.6"],"第一次render":["23.6"],"优先级为1":["23.6"],"极简实现usestate":["24.0"],"usestate做了什么":["24.0"],"update数据结构":["24.0"],"update如何保存":["24.0"],"hook数据结构":["24.0"],"模拟react调度更新流程":["24.0"],"计算state":["24.0"],"修改state引起重渲染原理":["24.0"],"先通过以下例子":["24.1"],"来看看usestate做了什么工作":["24.1"],"我们将":["24.2"],"同一个hooks的多个update通过":["24.3"],"环状单向链表":["24.3"],"关联起来":["24.3"],"调用":["24.3","35.2"],"updatenum":["24.3"],"实际调用的是":["24.3"],"dispatchaction":["24.3"],"bind":["24.3"],"hook":["24.3","24.6"],"接下来我们关注":["24.4"],"memoizedstate":["24.4","24.6"],"中保存的":["24.4"],"在上文dispatchaction末尾我们通过":["24.5"],"schedule":["24.5"],"方法模拟react调度更新流程":["24.5"],"组件render时会调用usestate":["24.6"],"他的大体逻辑如下":["24.6"],"usestate":["24.6","26.2"],"initialstate":["24.6"],"当前usestate使用的hook会被赋值该该变量":["24.6"],"ismount":["24.6"],"mount时需要生成hook对象":["24.6"],"else":["24.6","125.0"],"update时从workinprogresshook中取出该usestate对应的hook":["24.6"],"queue":["24.6"],"根据queue":["24.6"],"pending中保存的update更新state":["24.6"],"fiber架构":["25.0"],"scheduler调度器的原理与实现":["25.0"],"模式是一组":["25.0"],"的新功能":["25.0"],"可帮助应用保持响应":["25.0"],"并根据用户的设备性能和网速进行适当的调整":["25.0"],"usereducer":["26.0","26.1"],"usecontext":["26.0"],"unstated":["26.0","26.2"],"使用":["26.0","33.7","38.13","43.0"],"源码":["26.0"],"共享对象":["26.1"],"代码如下":["26.1"],"import":["26.1","26.2"],"from":["26.1","26.2"],"countcontext":["26.1"],"createcontext":["26.1"],"export":["26.1","26.3"],"default":["26.1"],"父组件代码如下":["26.1"],"componenta":["26.1"],"createcontainer":["26.2","26.3"],"usehook":["26.3"],"context":["26.3","30.6"],"六千字详解":["27.0"],"浅谈前端框架原理":["29.0"],"ui":["29.1","29.6"],"jsx":["29.2"],"facebook提出的一种":["29.2"],"ecmascript":["29.2"],"的语法糖":["29.2"],"jsx在运行时会被转换成浏览器能够识别的标准es语法":["29.2"],"说的是":["29.3"],"在数据驱动框架中":["29.3"],"状态变化":["29.3"],"会引起ui的变化":["29.3"],"框架内部运行机制的实现":["29.3"],"可以概括为以下两个步骤":["29.3"],"todo":["29.5"],"dom":["29.6","35.1","36.11","36.14","36.15","38.2","38.3","38.4"],"vdom的作用":["29.6"],"描述":["29.6"],"通过对比":["29.6"],"vdom":["29.6"],"前后的变化":["29.6"],"在前端框架一般都有编译这一步骤":["29.7"],"用于":["29.7"],"代码转换":["29.7"],"如":["29.7","30.8"],"姜瑞涛":["30.0"],"webpack是一个模块打包工具":["30.1"],"bundler":["30.1"],"现在我有三个文件":["30.2"],"js和index":["30.2"],"html":["30.2","36.11","38.1","42.2","42.13"],"js内容":["30.2"],"webpack默认的配置文件是项目根目录下的webpack":["30.3"],"config":["30.3"],"在执行":["30.3"],"npx":["30.3"],"loader":["30.4","30.14"],"webpack自身只支持对js文件处理":["30.4"],"现在的版本也支持对json文件处理":["30.4"],"如果引入了一个非js文件":["30.4"],"那么webpack在处理该模块的时候":["30.4"],"会在控制台报错":["30.4"],"failed":["30.4"],"you":["30.4"],"may":["30.4"],"need":["30.4"],"an":["30.4"],"appropriate":["30.4"],"to":["30.4"],"handle":["30.4"],"file":["30.4","30.14"],"webpack支持es6":["30.5"],"commonjs和amd等模块化方法":["30.5"],"表示资源入口entry是从哪个目录为起点的":["30.6"],"context的值是一个字符串":["30.6"],"表示一个绝对路径":["30.6"],"在我们没有设置context的时候":["30.6"],"它是当前工程的根目录":["30.6"],"entry":["30.6"],"它有三种形式的值":["30.6"],"字符串":["30.6"],"是最简单的形式":["30.6"],"webpack的output是资源出口配置项":["30.7"],"filename是打包后生成的":["30.8"],"资源名称":["30.8"],"bundle":["30.8"],"filename除了可以是一个文件名称":["30.8"],"也可以是":["30.8"],"相对地址":["30.8"],"bundljs":["30.8"],"filename支持类似变量的方式生成":["30.8"],"动态文件名":["30.8"],"特定动态值":["30.8"],"path表示资源打包后输出的位置":["30.9"],"该位置地址要是绝对路径":["30.9"],"如果你不设置它":["30.9"],"output中的publicpath表示的是资源访问路径":["30.10"],"注意这个publicpath指的是output的":["30.10"],"和devserver的不一样":["30.10"],"path和publicpath的区别":["30.10"],"path":["30.10","30.12","34.1"],"资源输出位置":["30.10"],"表示的是本次打包完成后":["30.10"],"资源存放的磁盘位置":["30.10"],"是一个本地路径":["30.10"],"资源访问路径":["30.10"],"chunkhash和contenthash区别":["30.11"],"之前有用过两个loader来处理css":["30.12"],"require":["30.12","30.14"],"除了test和use这两个关键配置参数":["30.13"],"rules还有exclude":["30.13"],"include":["30.13"],"resource":["30.13","36.3"],"issure和enforce等参数":["30.13"],"exclude":["30.13"],"babel":["30.14"],"主要作用是在webpack打包的时候":["30.14"],"用babel将es6的代码转换成es5版本的":["30.14"],"一般配合":["30.14"],"preset":["30.14"],"env一起使用":["30.14"],"处理文件导入地址并替换成其访问地址":["30.14"],"并把文件输出到相应位置":["30.14"],"是file":["30.14"],"loader的增强版":["30.14"],"它支持file":["30.14"],"loader的所有功能":["30.14"],"另外还有一个特殊的功能":["30.14"],"可以计算出文件的base64编码":["30.14"],"在文件体积小于我们指定的值":["30.14"],"单位":["30.14"],"byte":["30.14"],"的时候":["30.14"],"可以返回一个base64编码的dataurl来代替访问地址":["30.14"],"使用base64编码的好处是可以减少一次网络请求":["30.14"],"提升页面加载速度":["30.14"],"webpack插件plugin":["30.14"],"在webpack中使用插件非常简单":["30.14"],"只需要在配置项里增加一个plugins项即可":["30.14"],"plugins是一个数组":["30.14"],"每一个数组元素是一个插件":["30.14"],"插件会专注处理":["30.14"],"webpack":["30.14"],"在编译过程中的某个特定的任务":["30.14"],"插件的范围包括":["30.14"],"从打包优化和压缩":["30.14"],"一直到重新定义环境中的变量":["30.14"],"插件接口功能极其强大":["30.14"],"可以用来处理各种各样的任务":["30.14"],"想要使用一个插件":["30.14"],"你只需要":["30.14"],"然后把它添加到":["30.14"],"plugins":["30.14"],"数组中":["30.14"],"多数插件可以通过选项":["30.14"],"option":["30.14"],"自定义":["30.14"],"你也可以在一个配置文件中因为不同目的而多次使用同一个插件":["30.14"],"这时需要通过使用":["30.14"],"操作符来创建它的一个实例":["30.14"],"npm":["31.0"],"yarn":["31.0"],"npm2":["31.0"],"是通过嵌套的方式管理":["31.0"],"node":["31.0","90.0"],"modules":["31.0"],"会有同样的依赖复制多次的问题":["31.0"],"我们可以通过监控":["32.0"],"xmlhttprequest":["33.0","33.2","33.8"],"运作机制":["33.0","33.1"],"第一步":["33.0"],"创建":["33.0","33.2"],"对象":["33.0","33.8"],"背后的实现机制":["33.1"],"具体工作过程你可以参考下图":["33.1"],"webapi":["33.1"],"pic1":["33.1","34.1","64.0","176.0"],"使用方法如下":["33.1"],"getwebdata":["33.1"],"xhr":["33.3"],"对象注册回调函数":["33.3"],"首先要通过":["33.4"],"open":["33.4"],"发起请求":["33.5"],"一切准备就绪之后":["33.5"],"就可以调用xhr":["33.5"],"send来发起网络请求了":["33.5"],"三个重要的属性":["33.6"],"使用过程中的":["33.7"],"坑":["33.7"],"跨域问题":["33.7","36.0","36.2"],"然如何解决跨域问题":["33.7"],"相见":["33.7"],"安全":["33.7"],"页面安全":["33.7"],"跨域":["33.7"],"网站攻击":["33.7"],"章节":["33.7"],"混合内容的问题":["33.7"],"页面中包含了不符合":["33.7"],"安全要求的内容":["33.7"],"比如包含了":["33.7"],"http":["33.7","36.17","40.0","43.0","44.0"],"资源":["33.7"],"加载的图像":["33.7"],"视频":["33.7"],"样式表":["33.7"],"脚本等":["33.7"],"都属于混合内容":["33.7"],"axios的区别":["33.8"],"是基于":["33.8"],"原生的":["33.8"],"而":["33.8","36.15"],"axios":["33.8"],"封装的":["33.8"],"document":["34.0"],"cookie的参数":["34.0"],"cookie函数":["34.0"],"登录状态是如何保持的":["34.0"],"存储对象":["34.0"],"localstorage":["34.0","34.7"],"sessionstorage":["34.0","34.7"],"storage事件":["34.0"],"indexeddb":["34.0"],"总结cookie":["34.0"],"indexdb":["34.0"],"storage":["34.1","34.7"],"表示该路径下的页面可以访问该":["34.1"],"cookie":["34.1","34.3","36.17"],"如果一个":["34.1"],"带有":["34.1"],"admin":["34.1"],"设置":["34.1"],"那么该":["34.1"],"getcookie":["34.2"],"用户打开登录页面":["34.3"],"在登录框里填入用户名和密码":["34.3"],"点击确定按钮":["34.3"],"点击按钮会触发页面脚本生成用户登录信息":["34.3"],"然后调用":["34.3"],"post":["34.3","36.3","44.0"],"方法提交用户登录信息给服务器":["34.3"],"服务器接收到浏览器提交的信息之后":["34.3"],"查询后台":["34.3"],"验证用户登录信息是否正确":["34.3"],"如果正确的话":["34.3"],"会生成一段表示用户身份的字符串":["34.3"],"并把该字符串写到响应头的":["34.3"],"set":["34.3","36.17"],"字段里":["34.3"],"如下所示":["34.3"],"然后把响应头发送给浏览器":["34.3"],"uid":["34.3"],"3431uad":["34.3"],"localstorage有以下的特点":["34.5"],"sessionstorage的使用频率比localstorage低":["34.6"],"它的使用有以下限制":["34.6"],"中的数据更新":["34.7"],"setitem":["34.7"],"removeitem":["34.7"],"clear":["34.7"],"方法":["34.7","36.5"],"事件就会触发":["34.7"],"它具有以下属性":["34.7"],"session的中文翻译是":["34.8"],"cookie是保存在本地终端的数据":["34.9"],"token的意思是":["34.10"],"安全沙箱":["35.0"],"安全沙箱如何影响各个模块功能":["35.0"],"站点隔离":["35.0"],"site":["35.0","35.3"],"isolation":["35.0","35.3"],"安全沙箱能防止":["35.0"],"xss":["35.0","35.4","36.11","36.13","36.15"],"或者":["35.0","35.4"],"csrf":["35.0","35.4"],"一类的攻击的吗":["35.0"],"由于渲染进程需要执行":["35.1"],"解析":["35.1"],"我们知道安全沙箱最小的保护单位是进程":["35.2"],"并且能限制进程对操作系统资源的访问和修改":["35.2"],"这就意味着如果要让安全沙箱应用在某个进程上":["35.2"],"那么这个进程必须没有读写操作系统的功能":["35.2"],"比如读写本地文件":["35.2"],"发起网络请求":["35.2"],"gpu":["35.2"],"接口等":["35.2"],"在有安全沙箱的情况下":["35.2"],"渲染进程和浏览器内核各自的职责如下":["35.2"],"所谓站点隔离是指":["35.3"],"将同一站点":["35.3"],"包含了相同根域名和相同协议的地址":["35.3"],"什么是同源策略":["36.0"],"同源策略对dom层面":["36.0"],"数据层面":["36.0","36.2"],"网络层面的影响":["36.0","36.2"],"如何解决跨域问题":["36.0"],"cors":["36.0","36.9"],"跨域资源共享":["36.0","36.3"],"如果两个":["36.1"],"协议":["36.1"],"两个不同源的页面之间会有":["36.2"],"6844903681683357710":["36.3"],"heading":["36.3"],"cross":["36.3"],"origin":["36.3"],"sharing":["36.3"],"浏览器":["36.4"],"先根据同源策略对前端页面和后台交互地址做匹配":["36.4"],"若同源":["36.4"],"则直接发送数据请求":["36.4"],"若不同源":["36.4"],"则发送跨域请求":["36.4"],"浏览器会在请求的http":["36.4"],"header中加上一个":["36.4"],"浏览器在发送真正的请求之前":["36.5"],"会先发送一个":["36.5"],"preflight":["36.5"],"请求":["36.5"],"预检请求":["36.5"],"给服务器":["36.5"],"这种请求使用":["36.5"],"options":["36.5"],"优点":["36.6"],"减少非简单跨域请求对服务器的影响":["36.7"],"开始时就提到":["36.7"],"jsonp":["36.8"],"浏览器有跨域限制":["36.9"],"但是":["36.9","41.3"],"服务器不存在跨域问题":["36.9"],"所以可以由服务器请求所有域的资源再返回给客户端":["36.9"],"服务器代理是万能的":["36.9"],"实际开发中如何解决跨域":["36.9"],"比如tcc项目":["36.9"],"本地开发时":["36.9"],"只需在switchhosts中":["36.9"],"或whistle":["36.9"],"rules中":["36.9"],"配置如下规则":["36.9"],"time":["36.10","36.16"],"geekbang":["36.10","36.16"],"攻击是指黑客往":["36.11"],"文件中或者":["36.11"],"注入恶意脚本":["36.11"],"从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段":["36.11"],"开始的时候":["36.11"],"这种攻击是通过跨域来实现的":["36.11"],"也叫持久型xss":["36.12"],"主要将xss代码提交存储在服务器端":["36.12"],"攻击":["36.13","36.15"],"一般是攻击者通过特定手法":["36.13"],"csp":["36.15"],"httponly":["36.15"],"存储型":["36.15"],"攻击和反射型":["36.15"],"都是需要经过":["36.15"],"服务器来处理的":["36.15"],"因此可以认为这两种类型的漏洞是":["36.15"],"服务端":["36.15"],"的安全漏洞":["36.15"],"基于":["36.15"],"samesite等":["36.17"],"充分利用好":["36.17"],"samesite":["36.17"],"属性":["36.17"],"响应头中":["36.17"],"字段设置":["36.17"],"可以带上":["36.17"],"进程和线程":["37.0"],"单进程浏览器时代":["37.0"],"目前":["37.0"],"多进程浏览器时代":["37.0","37.3"],"浏览器进程":["37.0","37.3","38.9"],"渲染进程":["37.0","37.3"],"gpu进程":["37.0","37.3"],"网络进程":["37.0","37.3"],"多线程":["37.1"],"可以":["37.1"],"处理任务":["37.1"],"单进程浏览器是指浏览器的所有功能模块都是运行在同一个进程里":["37.2"],"这些模块包含了网络":["37.2"],"插件":["37.2"],"运行环境":["37.2"],"渲染引擎和页面等":["37.2"],"插件进程":["37.3"],"目前最新的chrome进程架构如下图":["37.3"],"other":["37.3","38.2"],"pic3":["37.3","178.0"],"面向服务的架构":["37.4"],"2016年":["37.4"],"chrome团队提出了":["37.4"],"soa":["37.4"],"也就是说":["37.4"],"整体架构会朝向现代操作系统所采用的":["37.4"],"方向发展":["37.4"],"原来的各种模块会被重构成独立的":["37.4"],"服务":["37.4"],"service":["37.4","40.1"],"每个服务":["37.4"],"都可以在独立的进程中运行":["37.4"],"访问服务":["37.4"],"必须使用定义好的接口":["37.4"],"ipc":["37.4"],"来通信":["37.4"],"从而":["37.4"],"构建一个更内聚":["37.4"],"松耦合":["37.4"],"易于维护和扩展的系统":["37.4"],"更好实现":["37.4"],"简单":["37.4"],"稳定":["37.4"],"构建dom树":["38.0"],"样式计算":["38.0"],"布局阶段":["38.0"],"创建布局树":["38.0"],"布局计算":["38.0"],"分层":["38.0"],"图层绘制":["38.0"],"栅格化":["38.0"],"这是因为浏览器无法直接理解和使用":["38.1"],"所以需要将":["38.1"],"css样式来源有三种":["38.2"],"pic10":["38.2"],"样式计算的目的是为了计算出":["38.2"],"有了":["38.3"],"树还含有很多不可见的元素":["38.4"],"比如":["38.4","164.0"],"head":["38.4","44.0","178.0"],"标签":["38.4"],"现在我们有了一棵完整的布局树":["38.5"],"现在我们有了布局树":["38.6"],"而且每个元素的具体位置信息都计算出来了":["38.6"],"但接下来依然不是绘制页面":["38.6"],"因为页面中有很多复杂的效果":["38.6"],"如一些复杂的":["38.6"],"3d":["38.6"],"渲染引擎会把一个图层的绘制拆分成很多小的":["38.7"],"raster":["38.8"],"操作":["38.8"],"绘制列表只是用来记录绘制顺序和绘制指令的列表":["38.8"],"而实际上绘制操作是由":["38.8"],"一旦所有图块都被光栅化":["38.9"],"合成线程就会生成一个绘制图块的命令":["38.9"],"drawquad":["38.9"],"然后将该命令提交给":["38.9"],"命令":["38.9"],"更新了元素的几何属性":["38.10"],"更新元素的绘制属":["38.11"],"如果你更改一个既不要布局也不要绘制的属性":["38.12"],"会发生什么变化呢":["38.12"],"操作样式":["38.13"],"cdn是什么":["39.0"],"cdn是内容分发网络":["39.1"],"cdn是将源站内容分发至最接近用户的节点":["39.1"],"cache":["39.2","40.5"],"pic8":["39.2"],"cdn":["39.3","39.5"],"的基本原理是广泛采用各种":["39.3"],"缓存服务器":["39.3"],"cdn边缘节点缓存策略因服务商不同而不同":["39.4"],"往往被用来存放":["39.5"],"通俗一点":["39.6"],"dns其实就是一个电话本翻译系统":["39.6"],"web缓存知识体系":["40.0"],"缓存位置":["40.0"],"浏览器缓存过程":["40.0"],"缓存机制":["40.0"],"强缓存":["40.0","40.3"],"头":["40.0","40.4","40.5","40.7","40.8"],"expires":["40.0","40.4"],"从缓存位置上来说分为四种":["40.1"],"并且各自有优先级":["40.1"],"当依次查找缓存且都没有命中的时候":["40.1"],"才会去请求网络":["40.1"],"worker":["40.1"],"运行在浏览器背后的独立线程":["40.1"],"浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中":["40.2"],"优先于":["40.3"],"协商缓存":["40.3"],"进行":["40.3"],"若强制缓存":["40.3"],"相关http头":["40.3"],"expires和cache":["40.3"],"control":["40.3","40.5"],"是一个":["40.4"],"绝对":["40.4"],"优先级比expires的优先级高":["40.5"],"是http":["40.5"],"1产物":["40.5"],"该字段表示资源缓存最大有效时间":["40.5"],"在该时间内":["40.5"],"相关状态码":["40.6"],"使用协商缓存有两种情况":["40.6"],"last":["40.7"],"modified":["40.7"],"since":["40.7"],"etag":["40.8"],"none":["40.8"],"match":["40.8"],"为了解决上述问题":["40.8"],"出现了一组新的字段":["40.8"],"是上一次加载资源时":["40.8"],"tcp协议":["41.0"],"三次握手":["41.0"],"为什么要三次握手":["41.0"],"三次握手过程中可以携带数据吗":["41.0"],"syn":["41.0","41.1"],"洪泛攻击":["41.0","41.4"],"建立连接过程如下":["41.1"],"network":["41.1","41.6"],"tcp1":["41.1"],"图中字符的含义":["41.1"],"连接请求":["41.1"],"接收":["41.1"],"报文段":["41.1"],"三次握手的目的是建立可靠的通信信道":["41.2"],"说到通讯":["41.2"],"简单来说就是数据的发送与接收":["41.2"],"而三次握手最主要的目的就是":["41.2"],"双方确认自己与对方的发送与接收是正常的":["41.2"],"第三次握手的时候":["41.3"],"是可以携带数据的":["41.3"],"flood":["41.4"],"客户端服务端会如何处理":["41.5"],"服务器发送完":["41.5"],"关闭连接过程如下":["41.6"],"tcp2":["41.6"],"上图中符号的意思":["41.6"],"fin":["41.6"],"连接终止位":["41.6"],"seq":["41.6"],"发送的第一个字节的序号":["41.6"],"ack":["41.6"],"确认报文段":["41.6"],"如果不等待会怎样":["41.7"],"如果不等待":["41.7"],"客户端直接跑路":["41.7"],"当服务端还有很多数据包要给客户端发":["41.7"],"任何一方都可以在数据传送结束后发出连接释放的通知":["41.8"],"待对方确认后进入半关闭状态":["41.8"],"当另一方也没有数据再发送的时候":["41.8"],"则发出连接释放通知":["41.8"],"对方确认后就完全关闭了tcp连接":["41.8"],"通俗的来说":["41.8"],"两次握手就可以释放一端到另一端的":["41.8"],"tcp":["41.8","42.4","42.12","42.13"],"连接":["41.8"],"完全释放连接一共需要四次握手":["41.8"],"单行协议":["42.0","42.1"],"是于":["42.1"],"年提出的":["42.1"],"主要用于学术交流":["42.1"],"需求很简单":["42.1"],"构建可扩展性":["42.2"],"多文件":["42.2"],"状态码":["42.2"],"用户代理":["42.2"],"随着万维网的发展":["42.2"],"在浏览器中展示的不单是":["42.2"],"文件了":["42.2"],"还包括了":["42.2"],"css":["42.2"],"图片":["42.2"],"音频":["42.2"],"视频等不同类型的文件":["42.2"],"因此":["42.2"],"长链接是指":["42.4"],"在一个":["42.4"],"连接上可以传输多个":["42.4"],"并发连接":["42.5"],"在使用持久连接的情况下":["42.6"],"某个连接上的消息传递类似于":["42.6"],"请求1":["42.6"],"host请求头":["42.7"],"断点续传":["42.8"],"断点续传就是从文件上次":["42.9"],"的地方开始重新下载或上传":["42.9"],"实现原理":["42.9"],"将一个文件按照一定的规则人为的":["42.9"],"分割":["42.9"],"成多个小文件":["42.9"],"每次客户端上传文件片前先获取已上传的文件位置":["42.9"],"确定本次应切割的位置":["42.9"],"1特性":["42.10"],"1的瓶颈":["42.11"],"多路复用":["42.12"],"队头阻塞":["42.12"],"其根本原因在于http":["42.12"],"基于请求":["42.12"],"响应的模型":["42.12"],"在同一个":["42.12"],"长连接中":["42.12"],"前面的请求没有得到响应":["42.12"],"后面的请求就会被阻塞":["42.12"],"http1":["42.12"],"1用":["42.12"],"0其他特性":["42.13"],"设置请求优先级":["42.13"],"服务器推送":["42.13"],"头部压缩":["42.13"],"可以设置请求的优先级":["42.13"],"可以在发送请求时":["42.13"],"标上该请求的优先级":["42.13"],"这样服务器接收到请求之后":["42.13"],"会优先处理优先级高的请求":["42.13"],"当中":["42.13"],"服务器已经不再是完全被动地接收请求":["42.13"],"响应请求":["42.13"],"连接建立之后":["42.13"],"比如浏览器请求一个":["42.13"],"文件":["42.13"],"服务器就可以在返回":["42.13"],"的基础上":["42.13"],"ssl":["43.0"],"tls":["43.0"],"https证书":["43.0"],"https验证过程":["43.0"],"对称加密":["43.0"],"非对称加密":["43.0"],"证书":["43.0"],"如何开启https":["43.0"],"并非是一个新的协议":["43.0"],"https是一种通过计算机网络进行安全通信的传输协议":["43.0"],"经由":["43.0"],"进行通信":["43.0"],"利用":["43.0"],"建立全信道":["43.0"],"加密数据包":["43.0"],"https使用的主要作用是提供对网站服务器的身份认证":["43.0"],"同时保护交换数据的隐私与完整性":["43.0"],"传输层安全性":["43.0"],"安全套接字层":["43.0"],"get和post有什么区别":["44.0"],"http状态码":["44.0"],"url与uri":["44.0"],"1规定了以下请求方法":["44.0"],"注意":["44.0","82.0"],"都是大写":["44.0"],"get":["44.0","165.0"],"通常用来获取资源":["44.0"],"获取资源的元信息":["44.0"],"提交数据":["44.0"],"即上传数据":["44.0"],"put":["44.0"],"修改数据":["44.0"],"delete":["44.0","167.0"],"删除资源":["44.0"],"几乎用不到":["44.0"],"lc":["45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","55.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","72.0","73.0","74.0","75.0","76.0","77.0","78.0","81.0","82.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","100.0","101.0","102.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","115.0","116.0","122.0","123.0","124.0","126.0","127.0","130.0","131.0","132.0","134.0","135.0","136.0","137.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"leetcode":["45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","72.0","73.0","74.0","75.0","76.0","77.0","78.0","81.0","82.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","100.0","101.0","102.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","115.0","116.0","122.0","123.0","124.0","126.0","127.0","130.0","131.0","132.0","134.0","135.0","136.0","137.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"id":["45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","72.0","73.0","74.0","75.0","76.0","77.0","78.0","81.0","82.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","100.0","101.0","102.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","112.0","113.0","114.0","115.0","116.0","122.0","123.0","124.0","126.0","127.0","130.0","131.0","132.0","134.0","135.0","136.0","137.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"lang":["45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","72.0","73.0","74.0","75.0","76.0","77.0","81.0","82.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","100.0","102.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","115.0","122.0","123.0","124.0","126.0","127.0","130.0","131.0","132.0","134.0","135.0","136.0","137.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"路径总和":["45.0","53.0"],"code":["45.0","46.0","50.0","51.0","53.0","54.0","55.0","58.0","59.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","73.0","74.0","75.0","76.0","77.0","81.0","83.0","84.0","85.0","86.0","88.0","89.0","90.0","91.0","92.0","97.0","98.0","99.0","100.0","102.0","103.0","104.0","105.0","106.0","115.0","122.0","126.0","127.0","130.0","131.0","132.0","134.0","136.0","137.0","138.0","140.0","143.0","150.0","151.0","153.0","157.0","158.0","161.0","165.0","166.0","170.0","171.0","173.0","177.0","180.0","181.0"],"start":["45.0","46.0","51.0","53.0","54.0","55.0","58.0","59.0","63.0","65.0","66.0","67.0","68.0","69.0","71.0","73.0","75.0","76.0","77.0","81.0","84.0","85.0","86.0","89.0","90.0","91.0","92.0","97.0","98.0","99.0","100.0","102.0","103.0","105.0","106.0","115.0","122.0","126.0","127.0","131.0","132.0","134.0","136.0","137.0","138.0","140.0","143.0","150.0","151.0","153.0","157.0","158.0","161.0","165.0","166.0","171.0","173.0","177.0","180.0","181.0"],"definition":["45.0","53.0","54.0","55.0","58.0","59.0","63.0","90.0","138.0","173.0","177.0"],"数组中的第k个最大元素":["46.0"],"swap":["46.0","163.0"],"j":["46.0","102.0","152.0","163.0"],"t":["46.0","163.0"],"相同的树":["47.0"],"对称二叉树":["48.0"],"将有序数组转换为二叉搜索树":["50.0"],"平衡二叉树":["51.0"],"二叉树的最小深度":["52.0"],"二叉树展开为链表":["54.0"],"三叉树上的每个节点就是原先二叉树的两个相邻节点":["55.0"],"pic2":["55.0"],"翻转二叉树":["58.0"],"删除二叉搜索树中的节点":["59.0"],"binary":["59.0","90.0"],"二叉搜索树中的搜索":["60.0"],"二叉搜索树中的插入操作":["61.0"],"验证二叉搜索树":["63.0"],"二叉树系列问题只要思考":["64.0"],"每个节点需要做什么":["64.0"],"而不要思考整棵树需要做什么":["64.0"],"二叉树":["64.0"],"前":["64.0"],"中序遍历":["64.0"],"前序遍历":["64.0"],"根":["64.0"],"结点":["64.0"],"左子树":["64.0"],"右子树":["64.0"],"后序遍历":["64.0"],"等差子数组":["65.0"],"param":["65.0","66.0","67.0","68.0","69.0","70.0","73.0","81.0","84.0","85.0","86.0","89.0","91.0","100.0","102.0","103.0","105.0","115.0","122.0","126.0","127.0","129.0","131.0","132.0","134.0","136.0","140.0","151.0","153.0","157.0","158.0","161.0","166.0","181.0"],"计数质数":["66.0"],"除自身以外数组的乘积":["67.0"],"字符串相乘":["68.0"],"num1":["68.0"],"为运算表达式设计优先级":["69.0"],"expression":["69.0"],"不要思考整体":["69.0"],"而是把目光聚焦局部":["69.0"],"只看一个运算符":["69.0"],"只需要思考":["69.0"],"只要我先把数组的左半部分排序":["70.0"],"再把右半部分排序":["70.0"],"最后把两部分合并":["70.0"],"arr":["70.0","87.1","87.2"],"returns":["70.0"],"mergesort":["70.0","119.4"],"采用自上而下的递归方法":["70.0"],"三角形最小路径和":["71.0","97.0"],"完全平方数":["72.0"],"零钱兑换":["73.0"],"coins":["73.0"],"amount":["73.0"],"解法一":["73.0"],"带备忘录的递归":["73.0"],"如果用暴力递归":["73.0"],"会超时":["73.0"],"确定":["73.0"],"base":["73.0"],"case":["73.0"],"显然目标金额":["73.0"],"为":["73.0"],"跳跃游戏":["74.0"],"ii":["74.0","77.0","89.0","99.0","106.0","109.0","110.5","110.6","155.0"],"斐波那契数":["75.0"],"暴力递归法":["75.0"],"不同路径":["76.0","77.0","98.0","99.0"],"状态转移方程":["77.0","99.0"],"dp":["77.0","80.4","80.5","87.2","99.0","100.0"],"动态规划":["79.0","100.0"],"英文":["79.0"],"dynamic":["79.0"],"动态规划和分治的区别":["79.1"],"根据重叠子问题定义状态":["79.3"],"先买入才能卖出":["80.1"],"买入":["80.2"],"今天没有持有股票":["80.5"],"分为两种情况":["80.5"],"k":["80.5","177.0"],"昨天没有持有":["80.5"],"今天不操作":["80.5"],"最长公共子序列":["81.0"],"text1":["81.0"],"text2":["81.0"],"最长递增子序列":["82.0"],"子序列":["82.0"],"子串":["82.0"],"这两个名词的区别":["82.0"],"俄罗斯套娃信封问题":["83.0"],"最长回文子序列":["84.0"],"最大子数组和":["85.0","132.0","158.0"],"nums":["85.0","89.0","110.6","118.0","122.0","125.0","129.0","132.0","136.0","150.0","152.0","158.0"],"滑动窗口":["85.0","132.0","158.0"],"动归":["85.0","132.0","158.0"],"前缀和":["85.0","129.0","132.0","158.0","181.0"],"滑动窗口解法":["85.0","132.0","158.0"],"maxsubarray":["85.0","132.0","158.0"],"windowsum":["85.0","132.0","158.0"],"回文子串":["86.0"],"s":["86.0","134.0","157.0"],"第一种思路":["87.0"],"一维dp数组":["87.0","87.1"],"length":["87.1","87.2","102.0"],"二维dp数组":["87.2"],"map":["87.2","165.0"],"item":["87.2"],"打家劫舍":["88.0","89.0","90.0"],"iii":["90.0","153.0"],"视频拼接":["91.0"],"clips":["91.0"],"无重叠区间":["92.0"],"javascrip":["95.0"],"贪心算法可以认为是动态规划算法的一个特例":["96.0"],"相比动态规划":["96.0"],"最小路径和":["100.0"],"grid":["100.0"],"下降路径最小和":["102.0"],"matrix":["102.0","127.0","131.0"],"暴力穷解法":["102.0"],"minfallingpathsum":["102.0"],"res":["102.0"],"infinity":["102.0"],"终点可能在最后一行的任意一列":["102.0"],"括号生成":["103.0","115.0"],"组合总和":["104.0","110.5"],"全排列":["105.0","106.0","110.3","110.6"],"组合":["107.0","110.0","110.2","110.5","110.8"],"子集":["109.0","110.0"],"排列":["110.0"],"子集问题分情况讨论":["110.0"],"元素无重":["110.0","110.2","110.3","110.8","110.9"],"不可复选":["110.0","110.1","110.2","110.3","110.4","110.5","110.6"],"元素可重":["110.0","110.5","110.6"],"算法框架":["110.3","110.6"],"可复选":["110.7","110.8"],"vertex":["112.0"],"neighbors":["112.0"],"有以下性质":["117.0"],"一个":["117.0"],"binarysearch":["118.0","125.0"],"target":["118.0","122.0","125.0"],"len":["118.0"],"冒泡排序":["119.0"],"它通过构建有序序列":["119.1"],"对于未排序的数据序列":["119.1"],"在已排序序列中从后向前扫描":["119.1"],"找到相应的位置并插入":["119.1"],"类似打扑克牌时的码牌":["119.1"],"insertsort":["119.1"],"gif":["119.1","119.2","119.3","119.4"],"bubblesort":["119.2"],"比较相邻的元素":["119.2"],"如果第一个比第二个大":["119.2"],"就交换它们两个":["119.2"],"对每一对相邻元素作同样的工作":["119.2"],"selectionsort":["119.3"],"初始状态":["119.3"],"无序区为r":["119.3"],"有序区为空":["119.3"],"第i趟排序":["119.3"],"把长度为n的输入序列分成两个长度为n":["119.4"],"2的子序列":["119.4"],"对这两个子序列分别采用归并排序":["119.4"],"将两个排序好的子序列合并成一个最终的排序序列":["119.4"],"视频讲解":["119.5"],"在数组中找到中间位置的元素":["119.5"],"将它作为基准数":["119.5"],"让数组中剩下的元素与这个基准数比较":["119.5"],"大的放右数组":["119.5"],"小的放左数组":["119.5"],"然后以相同的想法递归的去处理左":["119.5"],"右数组":["119.5"],"二分查找":["120.0","124.0","145.0","181.0"],"sequencesearch":["120.1"],"元素必须是":["120.2"],"有序":["120.2"],"首先要找到一个中间值":["120.2"],"通过与中间值比较":["120.2"],"大的放右":["120.2"],"小的放在左边":["120.2"],"二叉查找树":["120.4"],"双指针技巧是经常用到的":["121.0"],"双指针技巧主要分为两类":["121.0"],"左右指针和快慢指针":["121.0"],"所谓左右指针":["121.0"],"在排序数组中查找元素的第一个和最后一个位置":["122.0"],"寻找一个数":["125.0"],"寻找左侧边界":["125.0"],"寻找右侧边界":["125.0"],"二分查找算法框架":["125.0"],"while":["125.0"],"mid":["125.0"],"旋转图像":["126.0"],"螺旋矩阵":["127.0"],"spiralorder":["127.0"],"逆时针旋转矩阵":["128.0"],"解题思路":["128.0","160.0"],"以顺时针旋转90度为例":["128.0"],"思路":["128.1","136.0","151.0"],"queries":["129.0"],"排序":["129.0"],"升序":["129.0"],"查找":["129.0"],"answerqueries":["129.0"],"区域和检索":["130.0"],"数组不可变":["130.0"],"二维区域和检索":["131.0"],"矩阵不可变":["131.0"],"nummatrix":["131.0"],"技巧适用于快速":["133.0"],"频繁地计算一个":["133.0"],"索引区间内的元素之和":["133.0"],"前缀和主要适用的场景是原始数组不会被修改的情况下":["133.0"],"频繁查询某个区间的":["133.0"],"累加和":["133.0"],"核心代码如下":["133.0"],"去除重复字母":["134.0"],"盛最多水的容器":["135.0"],"三数之和":["136.0"],"最接近的三数之和":["137.0"],"链表的中间结点":["138.0"],"singly":["138.0","177.0"],"普通指针":["139.0"],"删除最短的子数组使剩余数组有序":["140.0"],"最长回文子串":["143.0"],"是让你":["149.0"],"拼车":["150.0"],"difference":["150.0"],"构造函数":["150.0"],"输入一个初始数组":["150.0"],"区间操作将在这个数组上进行":["150.0"],"航班预订统计":["151.0"],"bookings":["151.0"],"的主要适用场景是频繁对原始数组的某个区间的":["152.0"],"元素":["152.0"],"进行增减":["152.0"],"常规":["152.0"],"的思路很容易":["152.0"],"你让我给区间":["152.0"],"加上":["152.0"],"val":["152.0"],"那我就一个":["152.0"],"循环给它们都加上呗":["152.0"],"还能咋样":["152.0"],"这种思路的时间复杂度是":["152.0"],"由于这个场景下对":["152.0"],"的修改非常频繁":["152.0"],"所以效率会很":["152.0"],"低下":["152.0"],"类似前缀和技巧构造的":["152.0"],"prefix":["152.0"],"数组":["152.0"],"我们先对":["152.0"],"数组构造一个":["152.0"],"diff":["152.0"],"最大连续1的个数":["153.0"],"定长子串中元音的最大数目":["154.0"],"存在重复元素":["155.0"],"无重复字符的最长子串":["156.0"],"单个字符串的情况":["156.0"],"找到字符串中所有字母异位词":["157.0"],"两个字符串进行比较的情况":["157.0","159.0"],"且窗口大小固定":["157.0"],"字符串的排列":["159.0"],"窗口大小固定":["159.0"],"关键点在窗口收缩时机":["159.0"],"当窗口的大小":["159.0"],"大于等于s1的长度时":["159.0"],"便收缩窗口":["159.0"],"最小覆盖子串":["160.0"],"两个字符串比较的情况":["160.0"],"窗口大小不固定":["160.0"],"labuladong":["160.0","162.0"],"io":["160.0","162.0"],"algo":["160.0","162.0"],"di":["160.0","162.0"],"ling":["160.0","162.0"],"bfe1b":["160.0","162.0"],"wo":["160.0","162.0"],"xie":["160.0","162.0"],"le":["160.0","162.0"],"f02cd":["160.0","162.0"],"用左右两个指针遍历s字符串":["160.0"],"初始化":["160.0","165.0"],"水果成篮":["161.0"],"滑动窗口算法的思路非常简单":["162.0"],"就是维护一个窗口":["162.0"],"不断滑动":["162.0"],"然后更新答案":["162.0"],"算法的大概思路如下":["162.0"],"最大堆":["163.0"],"本质上是个完全二叉树":["164.0"],"只不过存储在数组里":["164.0"],"一般的链表二叉树":["164.0"],"我们操作节点的指针":["164.0"],"而在数组里":["164.0"],"我们把数组索引作为指针":["164.0"],"且每个节点都大于等于它的两个子节点":["164.0"],"画个图就能理解了":["164.0"],"lru":["165.0"],"缓存":["165.0"],"初始化一个":["165.0"],"数据结构":["165.0"],"和一个容量":["165.0"],"capacity":["165.0"],"对于":["165.0"],"如果没有该关键字就返回":["165.0"],"如果有":["165.0"],"那就先":["165.0"],"时间插入":["167.0"],"删除和获取随机元素":["167.0"],"解题思路参考链接":["167.0"],"problems":["167.0"],"insert":["167.0"],"getrandom":["167.0"],"o1":["167.0"],"solutions":["167.0"],"tu":["167.0"],"jie":["167.0"],"chang":["167.0"],"shu":["167.0"],"shi":["167.0"],"jian":["167.0"],"stack":["168.0"],"环形链表":["169.0"],"相交链表":["170.0"],"合并两个有序链表":["171.0"],"分隔链表":["173.0"],"单链表":["175.0"],"来说":["175.0"],"大部分技巧都属于快慢指针":["175.0"],"以下几种算法题":["175.0"],"它们都是通过一个":["175.0"],"fast":["175.0"],"快指针和一个":["175.0"],"slow":["175.0"],"个一组翻转链表":["177.0"],"linked":["177.0"],"list":["177.0"],"successor":["178.0"],"后驱节点":["178.0"],"reversen":["178.0"],"打乱数组":["179.0"],"洗牌算法":["179.0"],"随机打乱一个数组":["179.0"],"分析洗牌算法正确性的准则":["179.0"],"产生的结果必须有":["179.0"],"种可能":["179.0"],"这个很好解释":["179.0"],"因为一个长度为":["179.0"],"的数组的全排列就有":["179.0"],"种":["179.0"],"随机数索引":["180.0"],"按权重随机选择":["181.0"],"w":["181.0"],"solution":["181.0"],"presum":["181.0"]},{"0":["0.2","1.5","1.10","4.10","5.10","7.15","11.0","21.5","21.9","24.1","26.1","26.2","40.7","45.0","46.0","53.0","54.0","58.0","59.0","63.0","71.0","80.4","81.0","87.2","90.0","97.0","118.0","122.0","127.0","131.0","138.0","150.0","151.0","152.0","153.0","160.0","161.0","163.0","164.0","173.0","177.0","179.0","181.0"],"1":["1.1","1.8","3.3","4.6","5.4","5.10","5.12","5.13","6.3","7.15","7.22","7.26","8.13","9.2","10.0","10.3","10.7","10.8","21.1","21.2","22.13","22.18","26.0","30.4","30.10","31.0","33.1","33.5","35.2","36.2","36.11","37.3","38.2","38.10","38.11","39.2","40.7","41.1","41.6","41.8","42.7","67.0","72.0","75.0","76.0","77.0","82.0","83.0","89.0","92.0","98.0","99.0","100.0","102.0","103.0","115.0","118.0","122.0","127.0","128.0","134.0","136.0","150.0","152.0","153.0","164.0","175.0","178.0","179.0","181.0"],"2":["0.10","0.11","1.1","1.8","3.3","3.4","4.6","5.4","5.6","5.12","5.13","7.6","7.16","7.21","8.13","9.2","10.0","16.1","21.2","21.4","23.6","30.4","30.13","31.0","33.1","33.5","33.8","36.4","36.9","38.13","39.2","42.11","66.0","69.0","70.0","73.0","75.0","79.1","82.0","83.0","89.0","103.0","115.0","134.0","136.0","153.0","160.0","165.0","175.0"],"3":["1.1","1.8","3.3","7.21","10.0","21.4","30.13","33.8","42.13","73.0","79.3","82.0","103.0","115.0","119.2","119.3","134.0","136.0","160.0"],"4":["1.1","10.0","21.7","30.14","42.9","66.0","73.0","119.2"],"5":["0.4","6.1","10.0","30.14","42.9"],"6":["0.4"],"7":["0.4","1.10"],"8":["1.10","10.7","10.8"],"9":["0.4","1.10","42.2"],"10":["1.10","36.17"],"11":["7.9"],"19":["36.17"],"20":["36.17"],"30":["31.0"],"40":["30.14"],"50":["11.0","35.2","64.0"],"60":["41.8"],"70":["43.0","176.0"],"77":["110.2"],"80":["2.5","37.3","37.4"],"111":["4.12"],"200":["40.0"],"260":["31.0"],"304":["40.0","40.8"],"443":["43.0"],"1000":["2.8"],"2007":["37.2"],"2019":["36.17"],"152807":["36.10"],"154110":["36.16"],"90000000":["1.10"],"创建并切换函数执行上下文":["0.0"],"有了栈":["0.0"],"为什么还要堆":["0.0"],"闭包":["0.0","24.6"],"延迟解析":["0.0"],"v8如何实现闭包":["0.0"],"预解析器如何解决闭包给惰性解析带来的问题":["0.0"],"什么是v8":["0.0"],"v8":["0.0","0.3","0.10","0.12","1.2"],"如何执行":["0.0"],"javascript":["0.0","0.12","7.13","15.5","33.7","35.0"],"代码":["0.0"],"第一步":["0.0"],"编译阶段":["0.0","0.1"],"第二步":["0.0"],"执行阶段":["0.0"],"v8中的对象表示":["0.0"],"二进制代码如何被cpu执行的":["0.0"],"参考链接":["0.0","0.5","34.0","35.0"],"https":["0.0","0.5","24.0","40.1"],"log":["0.1","1.5","4.8","4.14","5.4","5.12","7.26","8.3","8.8","8.10","8.13","8.15","9.0","30.2","129.0"],"原因":["0.1"],"先在全局作用域内声明变量":["0.1"],"undefined":["0.2","5.6","7.1","7.2","7.28","45.0","53.0","54.0","55.0","58.0","59.0","63.0","90.0","138.0","171.0","173.0","177.0"],"if":["0.2","2.8","3.3","7.17","10.8","11.0","40.3","70.0","75.0","119.1","119.4","119.5","127.0","131.0","178.0"],"极客邦":["0.2"],"在":["0.3","16.1","16.2","22.5","22.12","34.1","34.5","37.2"],"启动过程中就创建了":["0.3"],"js":["0.4","1.5","1.8","4.9","5.1","5.4","5.12","5.13","6.1","6.3","7.15","8.14","10.4","15.2","15.3","20.15","22.9","23.0","24.2","24.3","24.4","29.7","30.6","30.14","64.0","110.2","110.3","110.5","110.8","119.1","119.2","119.5","120.2","133.0","152.0","176.0"],"x":["0.4","1.8","8.14","9.2","91.0","92.0","128.0"],"y":["0.4","1.8","9.2"],"报错":["0.4"],"const声明的变量不可以修改":["0.4"],"作用域块内声明的变量不影响块外面的变量":["0.4"],"例子":["0.4","1.8","9.2"],"function":["0.4","1.5","1.8","3.1","5.1","5.4","5.12","5.13","6.1","8.12","9.2","10.3","10.4","10.6","10.7","11.0","20.14","22.9","24.3","24.5","26.1","26.2","45.0","47.0","48.0","50.0","51.0","52.0","53.0","54.0","55.0","58.0","59.0","60.0","61.0","63.0","64.0","65.0","68.0","69.0","71.0","75.0","81.0","84.0","97.0","104.0","105.0","106.0","119.1","119.2","119.5","120.2","133.0","134.0","137.0","138.0","140.0","156.0","157.0","159.0","161.0","167.0","169.0","170.0","171.0","172.0","173.0","177.0","180.0"],"lettest":["0.4"],"堆和栈":["0.5"],"bell":["0.5","0.6"],"juejin":["0.5","7.23","24.0"],"堆":["0.6","0.12"],"键和值的地址存储于在":["0.6"],"内存":["0.6","36.12"],"堆动态分配的内存":["0.6"],"大小不定也不会自动释放":["0.6"],"在函数内部定义的变量我们也称为临时变量":["0.7"],"临时变量只能在该函数中被访问":["0.7"],"外部函数通常无权访问":["0.7"],"当函数执行结束之后":["0.7"],"存放在内存中的临时变量也随之被销毁":["0.7"],"通过观察函数的":["0.7"],"生命周期":["0.7"],"和函数的":["0.7"],"资源分配":["0.7"],"情况":["0.7"],"我们发现":["0.7"],"它们都符合":["0.7"],"后进先出":["0.7"],"lifo":["0.7"],"存放在堆空间中的数据是":["0.8"],"不要求连续":["0.8"],"存放的":["0.8"],"代码片段":["0.8"],"堆栈状态":["0.8"],"img":["0.8","2.1","2.2","2.4","2.5","2.7","2.9","7.29","22.0","22.12","33.7","36.3","37.2","37.4","38.9","41.8","43.0","128.1","164.0"],"src":["0.8","2.2","2.4","2.5","2.7","22.0","22.12","30.14","33.7","37.2","37.4","38.9","41.8","43.0"],"picture":["0.8","2.2","2.4","2.5","2.7","30.14","33.7","37.4","38.9","41.8","43.0","80.0"],"惰性解析":["0.9"],"解析器在解析的过程中":["0.9"],"当":["0.10"],"执行结束时":["0.10"],"变量":["0.10"],"该不该被销毁":["0.10"],"如果不应该被销毁":["0.10"],"那么应该采用什么策略":["0.10"],"如果采用了惰性解析":["0.10"],"那么当执行到":["0.10"],"函数时":["0.10"],"只会解析":["0.10"],"函数":["0.10","0.12","22.13","30.14","73.0"],"并不会解析内部的":["0.10"],"那么这时候":["0.10"],"就不知道":["0.10"],"函数中是否引用了":["0.10"],"全局执行上文":["0.11"],"全局作用域":["0.11"],"消息循环系统":["0.11"],"内置函数等":["0.11"],"只要开启一个渲染进程":["0.12"],"便会":["0.12"],"初始化":["0.12"],"同时初始化":["0.12"],"堆空间和栈空间":["0.12"],"原生类型":["0.12"],"的数据存储在":["0.12"],"栈":["0.12","103.0","115.0"],"空间":["0.12"],"引用类型":["0.12"],"诸如函数":["0.12"],"数组":["0.12","3.2","3.3","30.6","134.0"],"在浏览器中还有":["0.12"],"window":["0.12","157.0","161.0","162.0"],"对象":["0.12","9.0","30.14","33.2"],"document":["0.12","2.8","22.4"],"对象等":["0.12"],"这些都是存在":["0.12"],"内存堆":["0.12"],"emory":["0.12"],"heap":["0.12","46.0","163.0"],"分配内存地址":["0.12"],"调用栈":["0.12"],"call":["0.12","8.9","10.7","10.8"],"stack":["0.12","20.12","134.0"],"代码执行":["0.12"],"栈空间":["0.12"],"主要是用来管理":["0.12"],"调用的":["0.12"],"栈是内存中":["0.12"],"连续":["0.12"],"的一块空间":["0.12"],"同时栈结构是":["0.12"],"先进后出":["0.12"],"的策略":["0.12"],"调用过程中":["0.12"],"涉及到":["0.12"],"上下文":["0.12"],"或":["1.0","22.1","34.1"],"reject":["1.0","1.7"],"await下一条语句":["1.0"],"nexttick":["1.0"],"宏任务和微任务的执行过程":["1.0"],"eventloop":["1.0"],"过程详解":["1.0"],"面试问题":["1.0"],"异步编程发展史":["1.0"],"结合promise和async":["1.0"],"执行的事件":["1.1"],"常见的宏任务有":["1.1"],"渲染事件":["1.1"],"用户交互事件":["1.1"],"js脚本执行":["1.1"],"前":["1.2"],"会为每个宏任务维护一个微任务队列":["1.2"],"微任务带来了两个优势":["1.2"],"实时性":["1.2"],"解决了宏任务的时间颗粒度太粗":["1.2"],"导致":["1.2"],"应用卡顿":["1.2"],"的问题":["1.2"],"宏任务无法胜任一些对精度和实时性要求较高的场景":["1.2"],"微任务可以在实时性和效率之间做一个有效的权衡":["1.2"],"解决了浪费":["1.2"],"cpu":["1.2"],"性能的问题":["1.2"],"可以改变我们现在的异步编程模型":["1.2"],"属于微任务":["1.3"],"是在当前执行栈的尾部":["1.3"],"取第一个宏任务队列里的任务执行":["1.4"],"宏任务是消息队列中的任务":["1.5"],"主线程执行完一个宏任务之后":["1.5"],"便会接着从消息队列中取出下一个宏任务并执行":["1.5"],"具体例子":["1.5"],"bar":["1.5","5.4","5.12"],"console":["1.5","4.8","4.14","5.4","5.12","8.3","8.8","8.10","8.13","8.15","9.0","30.2","129.0"],"promise":["1.5","1.9"],"resolve":["1.5","1.10"],"then":["1.5","1.7","1.10","9.2"],"str":["1.5"],"micro":["1.5"],"settimeout":["1.5","11.0"],"macro":["1.5"],"foo":["1.5","1.8","5.4","5.12","5.13","9.2"],"遇到了宏任务呢":["1.6"],"执行微任务":["1.6"],"遇到宏任务呢":["1.6"],"这两种情况一样":["1.6"],"都会将宏任务放进宏任务队列的末尾":["1.6"],"始终牢记":["1.6"],"微任务优先级高于宏任务":["1.6"],"每一个宏任务执行完之后":["1.6"],"一定会先去检查微任务队列是否有任务":["1.6"],"等微任务全部执行完之后":["1.6"],"触发事件":["1.7"],"用":["1.7","26.0"],"next方法可以带一个参数":["1.8","9.2"],"该参数就会被当作上一个yield表达式的返回值":["1.8","9.2"],"let":["1.8","1.10","4.3","4.9","4.14","6.1","7.4","11.0","26.2","33.1","46.0","64.0","68.0","69.0","81.0","84.0","105.0","119.1","119.4","119.5","120.2","122.0","127.0","129.0","134.0","140.0","150.0","152.0","161.0","163.0","181.0"],"z":["1.8","38.6"],"return":["1.8","5.12","8.11","10.8","11.0","24.1","26.1","65.0","66.0","67.0","68.0","70.0","71.0","74.0","75.0","77.0","81.0","83.0","84.0","88.0","89.0","91.0","92.0","94.0","95.0","97.0","99.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","114.0","115.0","119.4","122.0","124.0","126.0","131.0","135.0","137.0","140.0","143.0","144.0","146.0","153.0","154.0","155.0","156.0","157.0","159.0","161.0","166.0","178.0"],"async的优越性就是把每次异步返回的结果从then中拿到最外层的方法中":["1.9"],"不需要链式调用":["1.9"],"只要用":["1.9"],"同步":["1.9"],"的写法就可以了":["1.9"],"更加直观而且":["1.9"],"更适合处理":["1.9"],"并发":["1.9"],"调用的问题":["1.9"],"mdn":["1.9"],"的定义":["1.9"],"是一个通过异步执行并隐式":["1.9"],"i":["1.10","67.0","72.0","74.0","82.0","86.0","87.2","88.0","100.0","102.0","109.0","130.0","136.0","150.0","181.0"],"new":["1.10","3.3","4.14","8.1","8.6","8.7","8.11","33.1","69.0","84.0","87.1","105.0","130.0","131.0","133.0","150.0","151.0","152.0","167.0"],"结果":["1.10"],"解释":["1.10"],"首先执行同步代码":["1.10"],"输出":["1.10"],"遇见第一个settimeout":["1.10"],"将其回调放入任务队列":["1.10"],"宏任务":["1.10"],"当中":["1.10"],"继续往下执行运行run":["1.10"],"打印出":["1.10"],"新生代垃圾回收":["2.0"],"scavenge算法":["2.0"],"主垃圾回收器":["2.0"],"老生代垃圾回收":["2.0"],"标记":["2.0"],"清除":["2.0"],"mark":["2.0"],"会先为":["2.1"],"对象添加一个":["2.1"],"属性":["2.1","22.5","30.4"],"并在堆中创建了一个空对象":["2.1"],"并将该对象的":["2.1"],"地址":["2.1"],"指向了":["2.1"],"随后又创建一个大小为":["2.1"],"的数组":["2.1"],"并将属性地址指向了":["2.1"],"的属性值":["2.1"],"此时的内存布局图如下所示":["2.1"],"一半是":["2.2"],"对象区域":["2.2"],"from":["2.2","15.5","30.2"],"space":["2.2"],"一半是空闲区域":["2.2"],"to":["2.2"],"gc":["2.2","2.5","2.7"],"中":["2.3","20.12","24.3","40.8"],"这就是":["2.3"],"对象晋升策略":["2.3"],"老生代中的对象的特点":["2.3"],"对象占用空间大":["2.3"],"存活时间长":["2.3"],"触发回收操作不频繁":["2.3"],"若要在老生代中使用":["2.3"],"scavenge":["2.3"],"算法进行垃圾回收":["2.3"],"复制这些大的对象将会花费比较多的时间":["2.3"],"从而导致回收执行效率不高":["2.3"],"同时还会浪费一半的空间":["2.3"],"所以":["2.3","21.9","179.0"],"主垃圾回收器是采用":["2.3"],"同时执行同样的回收工作":["2.4"],"其工作模式如下图所示":["2.4"],"pic10":["2.5"],"png":["2.5","2.7","22.0","22.12","30.14","31.0","33.7","35.2","37.4","41.8","43.0","64.0"],"width":["2.5","30.14","31.0","35.2","37.3","37.4","41.8","43.0","64.0"],"增量回收是并发的":["2.5"],"为了在不阻塞主线程的情况下":["2.6"],"执行垃圾回收操作":["2.6"],"引入了":["2.6"],"并发回收机制":["2.6"],"所谓并发回收":["2.6"],"pic12":["2.7"],"setinterval":["2.8"],"node":["2.8","45.0","47.0","48.0","50.0","51.0","52.0","53.0","54.0","55.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0"],"getelementbyid":["2.8","22.4"],"innerhtml":["2.8"],"json":["2.8"],"stringify":["2.8"],"定时器也没有清除":["2.8"],"存储了大量数据":["2.8"],"无法回收":["2.8"],"定时器会在后台持续执行":["2.8"],"即便定时器执行完":["2.8"],"也还是会占用内存和cpu":["2.8"],"直到被清除或者页面被卸载":["2.8"],"因此它的回收不是":["2.8"],"立即":["2.8"],"发生的":["2.8"],"右上角三个点":["2.9"],"更多工具":["2.9"],"任务管理器":["2.9"],"然后":["2.9"],"右键表头":["2.9"],"勾选js使用的内存":["2.9"],"bind":["3.0","24.6"],"product":["3.1"],"name":["3.1","4.12","8.2","8.6","8.14","30.2","34.2"],"price":["3.1"],"或一个类数组对象":["3.2"],"的形式提供的参数":["3.2"],"效果与":["3.2"],"apply":["3.3","3.5"],"是为了指明function函数的this指向":["3.3"],"call和apply":["3.3"],"会":["3.3"],"立即执行函数":["3.3"],"bind只是绑定了函数":["3.3"],"并不会立即执行函数":["3.3"],"apply因为要立即执行函数":["3.3"],"所以第二个参数或之后的参数都是当前的":["3.3"],"真实参数":["3.3"],"bind是":["3.3"],"预设参数":["3.3"],"apply方法将参数以":["3.3"],"的形式传入":["3.3"],"call方法将参数以":["3.3"],"正常的参数形式":["3.3"],"传入":["3.3"],"手写call":["3.3"],"call语法":["3.3"],"fun":["3.3"],"thisarg":["3.3"],"arg1":["3.3"],"arg2":["3.3"],"调用一个函数":["3.3"],"其具有一个指定的this值和分别地提供的参数":["3.3"],"参数的列表":["3.3"],"核心":["3.3"],"更改this指向":["3.3"],"函数立即执行":["3.3"],"后删除这个函数":["3.3"],"返回执行结果":["3.3"],"prototype":["3.3","3.5","7.4","7.25","8.4","8.8","8.10","8.11","8.13","8.15","10.7","10.8","30.14"],"mycall":["3.3"],"context":["3.3","15.5"],"先判断当前的调用对象是否是函数":["3.3"],"typeof":["3.3","6.2"],"throw":["3.3"],"typeerror":["3.3"],"error":["3.3"],"绑定新对象的this":["3.4","3.5"],"让person":["3.4"],"构造函数":["3.4","151.0"],"中的this指向这个空对象obj":["3.4"],"并执行person构造函数的函数体":["3.4"],"result":["3.4"],"person":["3.4","4.8","5.1"],"并返回第一个元素的值":["3.5"],"ret":["3.5"],"并执行构造函数":["3.5"],"得到构造函数返回数据":["3.5"],"proto":["3.5"],"字符串新增方法":["4.0"],"函数参数增强":["4.0"],"参数默认值":["4.0"],"操作符":["4.0"],"收起剩余数据":["4.0"],"展开数组":["4.0"],"块级作用域":["4.1"],"const":["4.5","4.12","10.7","15.5","21.3","24.6","29.2","30.14","122.0","131.0","157.0","159.0","161.0"],"fn":["4.5"],"操作符是一个数组类型":["4.6"],"可以使用数组方法":["4.6"],"仅使用一次":["4.6"],"放在参数最后":["4.6"],"tom":["4.8","4.14"],"say":["4.8"],"obja":["4.9"],"a":["4.9","7.7","21.9","23.6","30.8","30.12","45.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","55.0","56.0","57.0","60.0","61.0","62.0","63.0","106.0","110.5","110.6","129.0"],"aa":["4.9"],"b":["4.9","21.9","106.0","110.5","110.6","129.0"],"用途":["4.10","4.17"],"es5中":["4.10"],"对于0的判断不区分正负值":["4.10"],"0返回true":["4.10"],"obj":["4.12","10.7","10.8"],"详见":["4.13"],"sayhi":["4.14"],"p":["4.14","20.1","24.1","64.0","157.0"],"但是成员的值都是唯一的":["4.15"],"map的key可以是任意数据类型":["4.16"],"遍历":["4.18","22.11","64.0"],"作用域与动态作用域":["5.0","5.2"],"什么是作用域":["5.0"],"每个对象都可以有一个原型":["5.1"],"这个原型还可以有它自己的原型":["5.1"],"以此类推":["5.1"],"形成一个":["5.1"],"原型链":["5.1"],"查找特定属性的时候":["5.1"],"我们先去这个对象里去找":["5.1"],"如果没有的话就去它的原型对象里面去":["5.1"],"如果还是没有的话再去向原型对象的原型对象里去寻找":["5.1"],"通过上图可知":["5.1"],"var":["5.1","5.4","5.12","5.13","8.1","8.6","8.7","8.12","30.8","64.0","65.0","68.0","69.0","70.0","71.0","81.0","84.0","97.0","104.0","105.0","106.0","107.0","110.3","110.8","120.2","124.0","126.0","133.0","134.0","137.0","140.0","143.0","156.0","157.0","159.0","161.0","167.0","180.0"],"作用域规定了如何查找变量":["5.3"],"value":["5.4","5.13","26.3","120.1"],"都有三个重要属性":["5.5"],"变量对象":["5.5"],"variable":["5.5"],"object":["5.5","7.25","8.1","8.7","10.7","10.8"],"vo":["5.5","5.7"],"作用域链":["5.5"],"scope":["5.5","5.7"],"chain":["5.5","5.7"],"this":["5.5","5.7","8.2","8.3","8.4","8.14","8.15","20.14","23.0","45.0","46.0","50.0","51.0","53.0","54.0","55.0","58.0","59.0","63.0","90.0","131.0","133.0","138.0","151.0","163.0","167.0","170.0","171.0","173.0","177.0","180.0"],"接上一节最后一个例子":["5.5"],"没有实参":["5.6"],"属性值设为":["5.6"],"函数声明":["5.6"],"作用域链定义":["5.7"],"当查找变量的时候":["5.7"],"会先从当前上下文的变量对象中查找":["5.7"],"如果没有找到":["5.7"],"就会从父级":["5.7"],"词法层面上的父级":["5.7"],"执行上下文的变量对象中查找":["5.7"],"一直找到全局上下文的变量对象":["5.7"],"number":["5.8","5.12","7.0","7.5","7.8","7.9","7.16","7.20","7.27","10.0","66.0","71.0","74.0","76.0","77.0","81.0","83.0","84.0","88.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","124.0","126.0","130.0","135.0","137.0","141.0","146.0","148.0","154.0","155.0","156.0","157.0","180.0"],"object这些之外":["5.8"],"还有一种规范类型":["5.8"],"规范类型是用来描述es语言结构和语言类型的":["5.8"],"规范类型包括":["5.8"],"reference":["5.8"],"list":["5.8","138.0","169.0","170.0","171.0","172.0","173.0","174.0"],"completion":["5.8"],"property":["5.8"],"descriptor":["5.8"],"identifier":["5.8"],"自动生成的一个内部对象":["5.9"],"上面代码中就实现了默认绑定":["5.10"],"在foo方法的代码块中操作的是window":["5.10"],"上下文绑定":["5.10"],"函数被调用的位置有上下文":["5.10"],"或者是该函数的引用地址被某个对象的属性引用":["5.10"],"并通过对象的属性直接运行该函数":["5.10"],"此时this会被绑定成当前对象":["5.10"],"github":["5.11","145.0"],"mybar":["5.12"],"函数可以访问变量":["5.12"],"但是":["5.12","35.3"],"不会影响函数外部的值":["5.13"],"简单的例子":["5.13"],"v":["5.13"],"statements":["6.1"],"label":["6.1"],"使用场景":["6.1"],"多层循环中跳出最外层":["6.1"],"test":["6.1","7.26","30.4"],"basecount":["6.1"],"while":["6.1","7.4","85.0","118.0","122.0","132.0","158.0","162.0"],"destroy":["6.2"],"是个js的老bug":["6.3"],"symbol":["6.3","7.1"],"bigint":["6.3"],"抽象方法toprimitive":["7.0"],"toprimitive":["7.0","7.19"],"转换为原始值的规则":["7.0"],"valueof方法和tostring方法解析":["7.0"],"string":["7.0","84.0","103.0","113.0","114.0","115.0","143.0","144.0","154.0","156.0","159.0"],"boolean":["7.0","7.1","7.2","10.0","65.0","155.0","159.0"],"对象之间的相互转换":["7.0","7.5"],"其他类型转为字符串类型":["7.0"],"其他类型转为number类型":["7.0"],"其他类型转为boolean类型":["7.0"],"对象转为其他类型":["7.0"],"false":["7.1","7.9"],"true":["7.2","7.4","7.7","7.9","7.15","7.20"],"und":["7.2"],"无法判断数组":["7.3"],"方法返回指定对象的原型":["7.4"],"在对象转原始类型的时候":["7.5"],"否则":["7.6"],"如果输入的值是一个对象":["7.6"],"则调用该对象的":["7.6"],"valueof":["7.6","7.12"],"方法":["7.6","7.12","7.21","22.6"],"如果valueof":["7.6"],"方法的返回值是一个原始值":["7.6"],"12df":["7.7"],"bool":["7.7"],"fd":["7.7"],"date这种特殊的对象":["7.7"],"会被转换为日期的毫秒的形式的数值":["7.7"],"true转为":["7.9"],"false转为":["7.9"],"11转为":["7.9"],"科学计数法11e20转为":["7.9"],"true转为1":["7.10"],"false转为0":["7.10"],"字符串":["7.10","7.16"],"如果是":["7.10"],"纯数字":["7.10"],"的字符串":["7.10"],"则转为对应的十进制":["7.10"],"null":["7.11","7.28","10.0","10.8","21.3","21.7","22.9","22.10","23.6","24.6","26.3","34.7","55.0","59.0","90.0","177.0"],"会先调用对象的":["7.12"],"org":["7.13","36.10","36.16"],"chinese":["7.13"],"news":["7.13"],"章节":["7.15"],"首先把":["7.15"],"转换为数字":["7.15"],"并会优先将另一侧转换为":["7.16"],"另一侧为":["7.16"],"原始类型":["7.16"],"则将原始类型转换为":["7.16"],"如果只有单个变量":["7.18"],"会先将变量转换为boolean值":["7.18"],"就通过":["7.19"],"转换对象":["7.19"],"类型":["7.20"],"先把":["7.20"],"变成":["7.20"],"而不是把":["7.20"],"默认number类型":["7.21"],"首先调用":["7.21"],"返回1":["7.21"],"得到原始类型1":["7.21"],"最后":["7.21"],"返回true":["7.21"],"例题二":["7.21"],"运算符优先级高于":["7.21"],"故先进行":["7.21"],"运算":["7.21"],"运算结果为false":["7.21"],"转boolean类型":["7.21"],"调用tonumber":["7.21"],"结果变成":["7.21"],"false比较":["7.21"],"根据规则":["7.21"],"将":["7.21","29.7","42.13","164.0"],"例如":["7.22","15.5","33.8","36.4"],"1的结果是false":["7.22"],"因为一边是string":["7.22"],"另一边是number":["7.22"],"不像":["7.22"],"那样严格":["7.22"],"cn":["7.23","24.0"],"常用的字符串化方法":["7.24"],"数字":["7.25"],"的字符串化遵循通用规则":["7.25"],"极大值或者极小值采用科学计数法表示":["7.25"],"普通对象":["7.25"],"在字符串化时":["7.25"],"实际执行object":["7.25"],"返回该对象的类型":["7.25"],"组合模式":["8.0"],"与":["8.0","21.0","21.8"],"o":["8.1","8.6","8.7","162.0"],"kevin":["8.3","8.9"],"friends":["8.3","8.4","8.9"],"hah":["8.3"],"enen":["8.3"],"getname":["8.3","8.8","8.10","8.13"],"lilei":["8.4"],"child":["8.8","8.9","8.10","22.5"],"daisy":["8.9"],"继承自parent":["8.9"],"red":["8.10"],"blue":["8.10"],"green":["8.10"],"对传入其中的对象执行了一次浅复制":["8.11"],"将构造函数f的原型直接指向传入的对象":["8.11"],"createanother":["8.12"],"original":["8.12"],"arr":["8.13","46.0","119.1","119.4","119.5","120.1","140.0","163.0","164.0"],"寄生组合继承":["8.14"],"方式一样":["8.14"],"parent":["8.14","8.15"],"constructor":["8.14","46.0","151.0","163.0"],"sex":["8.15"],"getsex":["8.15"],"父类2":["8.15"],"otherparent":["8.15"],"result1":["9.0"],"doasync2":["9.0"],"result2":["9.0"],"doasync3":["9.0"],"result3":["9.0"],"缺点":["9.0"],"代码可维护性":["9.0"],"可读性很差":["9.0"],"有":["9.0"],"回调地狱":["9.0"],"问题":["9.0"],"对象用于表示一个异步操作的最终状态":["9.0"],"完成或失败":["9.0"],"以及其返回的值":["9.0"],"本意为承诺":["9.0"],"我们可以理解为程序承诺过一段时间后会给你一个结果":["9.0"],"是一个":["9.0","36.3"],"可以保存三个状态":["9.0"],"每一时刻必须有一个状态":["9.0"],"这样使得异步方法可以像":["9.0"],"同步方法":["9.0"],"那样返回值":["9.0"],"promise状态":["9.0"],"成功":["9.0"],"进行的":["9.1"],"但是里面存在着异步操作":["9.1"],"在异步操作结束后会调用":["9.1"],"失败的话进catch":["9.2"],"onfufilled":["9.2"],"onreject":["9.2"],"如果状态成功调用onfufilled":["9.2"],"如果状态失败调用onreject":["9.2"],"generator":["9.2"],"yield":["9.2"],"generator函数是将函数":["9.2"],"分步骤阻塞":["9.2"],"只有主动调用":["9.2"],"next":["9.2","55.0","138.0","171.0","173.0","177.0","178.0"],"才能进行下一步":["9.2"],"语法上":["9.2"],"首先可以把它理解成":["9.2"],"函数是一个状态机":["9.2"],"封装了多个内部状态":["9.2"],"函数除了状态机":["9.2"],"还是一个遍历器对象生成函数":["9.2"],"可暂停函数":["9.2"],"yield可暂停":["9.2"],"next方法可启动":["9.2"],"每次返回的是yield后的表达式结果":["9.2"],"yield表达式本身没有返回值":["9.2"],"或者说总是返回undefined":["9.2"],"广度优先遍历":["10.0"],"js有8种数据类型":["10.0"],"nndefined":["10.0"],"实际上是将存储在栈中的值赋值给新变量":["10.1"],"对于引用类型来说赋值的是地址":["10.1"],"所以当操作新的引用类型变量的时候":["10.1"],"深拷贝的原理就是定义一个新的对象":["10.2"],"deepcopy":["10.3"],"方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象":["10.5"],"它将返回目标对象":["10.5"],"gettype":["10.7"],"tostring":["10.7","10.8"],"slice":["10.7","10.8"],"isobject方法是用来判断是否是引用类型":["10.7"],"注意object":["10.7"],"deepcopybfs":["10.8"],"wait":["11.0"],"缓存一个定时器id":["11.0"],"timer":["11.0"],"这里返回的函数是每次用户实际调用的防抖函数":["11.0"],"如果已经设定过定时器了就清空上一次的定时器":["11.0"],"开始一个新的定时器":["11.0"],"延迟执行用户传入的方法":["11.0"],"args":["11.0"],"cleartimeout":["11.0"],"wanwenyun":["12.0"],"blog":["12.0"],"io":["12.0","145.0"],"期望职位":["12.0"],"web":["12.0","20.2","36.2"],"前端研发":["12.0"],"期望城市":["12.0"],"北京":["12.0"],"代码覆盖率":["12.1"],"进行收集汇总":["12.1"],"用于在测试验收过程中":["12.1"],"查看代码的实际执行情况":["12.1"],"聚合":["12.2"],"下发机制":["12.2"],"实现数据的全流程管理":["12.2"],"提供json可视化编辑":["12.2"],"投后三大流程管理部分":["12.3"],"目前仅面向内部用户":["12.3"],"进行用户管理":["12.3"],"广告位管理":["12.3"],"title":["14.0"],"团队成员":["14.0"],"ssr":["15.0","15.6"],"服务端渲染":["15.0"],"ssr的实现方式":["15.0"],"react":["15.0","20.13","24.0","29.3"],"浏览器请求页面url":["15.1"],"然后服务器接收到请求之后":["15.1"],"到数据库查询数据":["15.1"],"将数据丢到后端的组件模板":["15.1"],"php":["15.1","15.4"],"空的静态html文件":["15.2"],"然后加载了很多":["15.2"],"渲染页面需要的":["15.2"],"脚本":["15.2","15.3"],"和":["15.2","20.9","29.3","33.7","34.1","38.2","38.3","42.12","43.0","125.0","152.0"],"前端服务器会组装一个携带了具体数据的html文本":["15.3"],"并且返回给浏览器":["15.3"],"浏览器得到html之后开始渲染页面":["15.3"],"同时":["15.3"],"浏览器加载并执行":["15.3"],"html":["15.4","16.0","38.2","42.1"],"发送给客户端展示":["15.4"],"这种方式比较适用于传统的后端开发语言":["15.4"],"如":["15.4","29.3"],"java":["15.4"],"staticrouter":["15.5"],"组件来渲染路由信息":["15.5"],"import":["15.5","30.2"],"dom":["15.5","26.2","36.2","38.1"],"app":["15.5","24.6"],"js利用react的服务端渲染能力":["15.6"],"在服务器端生成html代码":["15.6"],"并将其发送给浏览器端":["15.6"],"为什么要使用服务端渲染":["15.7"],"它有哪些优势和劣势":["15.7"],"如何在":["15.7"],"todo":["15.8","17.0"],"并且可以实现更好的管理和控制页面状态":["16.0"],"简单的说":["16.0"],"就是在保证只有一个":["16.0"],"页面":["16.0"],"且与用户交互时不刷新和跳转页面的同时":["16.0"],"为":["16.0","33.0"],"中的每个视图展示形式匹配一个特殊的":["16.0"],"在刷新":["16.0"],"前进":["16.0"],"后退和seo时均通过这个特殊的":["16.0"],"来实现":["16.0"],"为实现这一目标":["16.0"],"首先在页面中引入":["16.1"],"router":["16.1"],"库":["16.1","33.8"],"并在路由配置中设置":["16.1"],"hashrouter":["16.1"],"作为根组件":["16.1"],"组件中包含一组":["16.1"],"route":["16.1"],"组件":["16.1"],"模式下":["16.2"],"页面的路由使用":["16.2"],"url":["16.2","33.1","33.8","36.13","37.0"],"路径名来表示":["16.2"],"而不是使用":["16.2"],"中的":["16.2"],"hash":["16.2"],"部分":["16.2"],"具体实现原理如下":["16.2"],"post":["19.2","24.0"],"6934155066198720519":["19.2"],"heading":["19.2","24.0"],"scheduler":["20.0","20.4","20.9"],"调度器":["20.0","20.4","20.9","20.19"],"reconciler":["20.0","20.12","20.19"],"协调器":["20.0","20.3","20.9","20.19"],"render阶段":["20.0","22.1"],"render":["20.0","20.1","22.4","23.0","26.2"],"渲染器":["20.0","22.7"],"快速响应":["20.2"],"的大型":["20.2"],"负责找出变化的组件":["20.3"],"diff算法":["20.3"],"递归":["20.3","79.2"],"处理虚拟dom":["20.3"],"调度任务的优先级":["20.4"],"react实现了功能更完备的":["20.5"],"requestidlecallback":["20.5"],"的":["20.6","33.8","36.3"],"循环":["20.6"],"过程":["20.6"],"每次循环都会调用":["20.6"],"shouldyield":["20.6"],"判断当前是否有剩余时间":["20.6"],"commit阶段":["20.7","22.0","22.12"],"的优先级更高":["20.8"],"所以协调器优先处理":["20.8"],"当协调器在处理":["20.8"],"的过程中":["20.8"],"产生了":["20.8"],"更新3":["20.8"],"那么":["20.8","66.0"],"新的reconcile":["20.9"],"架构":["20.10"],"hooks":["20.11"],"对于类似usestate":["20.11"],"usereducer":["20.11"],"useref这样的hook":["20.11"],"我们不需要关注functioncomponent的state在hook中是如何保存的":["20.11"],"react会为我们处理":["20.11"],"所以被称为":["20.12","42.1"],"react16的reconciler基于":["20.12"],"element":["20.13","29.2"],"多个fiber节点是如何连接形成树呢":["20.13"],"靠如下三个属性":["20.13"],"class":["20.14","46.0","151.0"],"host":["20.14"],"tag":["20.14"],"需要被删除":["20.15"],"被插入页面中":["20.15"],"被更新":["20.15"],"fiber中用如下参数保存了本次更新相关的信息":["20.15"],"heavy":["20.16"],"clearrect清除上一帧的画面":["20.17"],"如果当前帧画面计算量比较大":["20.17"],"正在内存中构建":["20.18"],"的fiber树称为":["20.18"],"workinprogress":["20.18","22.9"],"两种节点通过":["20.18"],"alternate":["20.18"],"属性连接":["20.18"],"react应用的根节点通过使":["20.18"],"指针在不同":["20.18"],"diff思路":["21.0"],"第一轮遍历":["21.0"],"第二轮遍历":["21.0"],"分析":["21.0"],"newchildren":["21.0"],"current":["21.1","22.5","22.9","23.2"],"fiber":["21.1","21.3","22.7","23.3","24.6"],"如果该dom节点已在页面中":["21.1"],"开销过于高昂":["21.2"],"因此react的diff会预设3个限制":["21.2"],"只对同级元素进行diff":["21.2"],"如果一个dom节点在前后两次更新中跨越了层级":["21.2"],"那么react不会尝试复用他":["21.2"],"两个不同类型的元素会产生出不同的树":["21.2"],"returnfiber":["21.3"],"currentfirstchild":["21.3"],"newchild":["21.3"],"any":["21.3"],"type":["21.4","21.7","26.1","30.4"],"是否相同":["21.4"],"只有":["21.4"],"都":["21.4"],"相同时一个dom节点才能复用":["21.4"],"key相同":["21.4","21.7"],"type也相同表示可以复用":["21.4"],"返回复用的fiber":["21.4"],"type不相同":["21.4"],"将该fiber及其兄弟fiber标记为删除":["21.4"],"key":["21.5","21.7","34.7"],"classname":["21.5"],"before":["21.5","22.0"],"所以diff会":["21.6"],"优先":["21.6"],"判断当前节点是否属于更新":["21.6"],"在我们做数组相关的算法题时":["21.6"],"经常使用双指针从数组头和尾同时遍历以提高效率":["21.6"],"不同导致不可复用":["21.7"],"属于":["21.7"],"节点位置变化":["21.7"],"的情况":["21.7"],"立即跳出整个遍历":["21.7"],"第一轮遍历结束":["21.7","21.9"],"但":["21.7"],"会创建一个新的fiber节点且标记为":["21.7"],"placement":["21.7","22.0"],"插入":["21.7","22.15"],"并将oldfiber标记为":["21.7"],"deletion":["21.7","22.0"],"删除":["21.7","22.17"],"并继续遍历":["21.7"],"如果newchildren遍历完":["21.7"],"即i":["21.7"],"length":["21.7","46.0","68.0","70.0","81.0","84.0","85.0","105.0","118.0","119.1","119.4","119.5","122.0","125.0","127.0","131.0","132.0","136.0","140.0","150.0","151.0","152.0","158.0","163.0","180.0","181.0"],"或者oldfiber遍历完":["21.7"],"跳出遍历":["21.7"],"oldfiber":["21.8"],"同时遍历完":["21.8"],"是最理想的情况":["21.8"],"只需在第一轮遍历进行组件更新":["21.8"],"此时":["21.8","21.9","160.0"],"语句":["21.9"],"代表本次更新该节点需要向右移动":["21.9"],"单纯文字表达比较晦涩":["21.9"],"跟着下面两个demo对照着理解":["21.9"],"例子一":["21.9"],"之前":["21.9"],"abcd":["21.9"],"之后":["21.9"],"acdb":["21.9"],"第一轮遍历开始":["21.9"],"vs":["21.9"],"key不变":["21.9"],"可复用":["21.9"],"对应的oldfiber":["21.9"],"之前的a":["21.9"],"在之前的数组":["21.9"],"中索引为0":["21.9"],"继续第一轮遍历":["21.9"],"c":["21.9"],"key改变":["21.9"],"不能复用":["21.9"],"跳出第一轮遍历":["21.9"],"第二轮遍历开始":["21.9"],"cdb":["21.9"],"hostcomponen如何处理":["22.0"],"effectlist":["22.0"],"mutation阶段":["22.0"],"执行dom操作前":["22.0"],"执行dom操作":["22.0"],"effect":["22.0"],"update":["22.0","22.10","23.4"],"layout阶段":["22.0"],"执行dom操作后":["22.0"],"pictures":["22.0","22.12"],"lifecycle":["22.0"],"更新或删除":["22.1"],"哪些组件需要调用其生命周期方法":["22.1"],"开始于":["22.1"],"performsyncworkonroot":["22.1"],"performconcurrentworkonroot":["22.1"],"首先从":["22.2","66.0"],"rootfiber":["22.2","22.12"],"阶段会调用":["22.3"],"处理fiber节点":["22.3"],"clap":["22.3"],"kasong":["22.4"],"reactdom":["22.4"],"root":["22.4"],"effecttag":["22.5","22.14","22.17"],"beginwork的工作可以分为两部分":["22.5"],"update时":["22.5"],"如果":["22.5","35.1"],"存在":["22.5"],"满足一定条件时可以复用current节点":["22.5"],"这样就能克隆current":["22.5"],"child作为workinprogress":["22.5"],"而不需要新建workinprogress":["22.5"],"mount时":["22.5"],"子fiber节点":["22.6"],"调用":["22.6"],"mountchildfibers":["22.6"],"对于update的组件":["22.6"],"要执行的dom操作类型":["22.7"],"保存在":["22.7"],"当前fiber":["22.8"],"节点":["22.8"],"函数组件":["22.9"],"调用不同的处理逻辑":["22.9"],"判断是":["22.10"],"mount":["22.10"],"还是":["22.10"],"时":["22.10"],"fiber节点已经存在对应":["22.10"],"要执行的":["22.11"],"dom操作":["22.11"],"作为dom操作的依据":["22.11"],"commit阶段需要找到所有有effecttag的fiber节点并依次执行effecttag对应操作":["22.11"],"难道需要在commit阶段再":["22.11"],"completework":["22.12"],"保存effecttag的单向链表":["22.13"],"并调用":["22.13"],"commitbeforemutationeffects":["22.13"],"依次执行":["22.13","22.14"],"处理dom节点渲染":["22.13"],"commitmutationeffects":["22.14"],"该方法的主要工作为根据":["22.14"],"意味着该fiber节点对应的dom节点需要":["22.15"],"到页面中":["22.15"],"调用的方法为":["22.15","22.17"],"commitplacement":["22.15"],"含有":["22.16"],"意味着该fiber节点对应的dom节点需要从页面中":["22.17"],"并更新":["22.18"],"ref":["22.18"],"一共做了两件事":["22.18"],"commitlayouteffectonfiber":["22.18"],"调用生命周期钩子和hook相关操作":["22.18"],"对于":["22.18","179.0"],"classcomponent":["22.18"],"setstate":["23.0"],"状态更新":["23.0"],"本节我们介绍":["23.0"],"classcomponent与hostroot":["23.0"],"的update原理":["23.0"],"functioncomponent":["23.0"],"对应的update在":["23.0"],"hooks章节":["23.0"],"介绍":["23.0"],"根据场景调用不同的方法":["23.0"],"类组件有":["23.0"],"函数组件有":["23.0"],"eventtime":["23.1"],"任务时间":["23.1"],"通过performance":["23.1"],"now":["23.1"],"获取的毫秒数":["23.1"],"从":["23.2","44.0"],"fiber架构":["23.2"],"双缓存机制":["23.2"],"一节我们知道":["23.2"],"fiber节点组成fiber树":["23.2"],"页面中最多同时存在两棵fiber树":["23.2"],"代表当前页面状态的":["23.2"],"queue":["23.3","24.3","24.5"],"state":["23.3","23.4","26.1","29.1","29.3"],"basestate":["23.3","23.4"],"firstbaseupdate":["23.4"],"lastbaseupdate":["23.4","23.5"],"现在我们在fiber上":["23.4"],"触发两次状态更新":["23.4"],"这会先后产生两个新的update":["23.4"],"我们称为":["23.4"],"u3和u4":["23.4"],"每个":["23.4"],"都会通过":["23.4"],"enqueueupdate":["23.4"],"后面":["23.5"],"实际上":["23.5"],"会被同时连接在":["23.5"],"render阶段使用的update":["23.6"],"memoizedstate":["23.6"],"ac":["23.6"],"其中b2由于优先级为2":["23.6"],"低于当前优先级":["23.6"],"所以他及其后面的":["23.6"],"所有update":["23.6"],"会被保存在baseupdate中作为下次更新的update":["23.6"],"即":["23.6","29.6","110.1","110.4","110.7"],"第二次render":["23.6"],"优先级为2":["23.6"],"常用钩子":["24.0"],"hooks原理探究":["24.0"],"看完不懂":["24.0"],"你打我":["24.0"],"6891577820821061646":["24.0"],"num":["24.1","85.0","132.0","158.0"],"updatenum":["24.1"],"usestate":["24.1"],"定义成如下数据结构":["24.2"],"更新产生的update对象会保存在":["24.3"],"action":["24.3","24.5","26.1"],"创建update":["24.3","24.5"],"hook":["24.4"],"的数据结构":["24.4"],"dispatchaction":["24.5","24.6"],"hooks的第一个核心原理":["24.6"],"是的hooks返回的state和setstate方法":["24.6"],"在hooks内部都是利用闭包实现的":["24.6"],"完整代码":["24.6"],"app组件对应的fiber对象":["24.6"],"保存该functioncomponent对应的hooks链表":["24.6"],"指向app函数":["24.6"],"statenode":["24.6"],"是否首次渲染":["24.6"],"组件首次render为mount":["24.6"],"由于有以下三部分底层架构的支持":["25.0"],"才使得concurrent模式得以实现":["25.0"],"意义在于":["25.0"],"他将单个组件作为工作单元":["25.0"],"使以组件为粒度的":["25.0"],"异步可中断的更新":["25.0"],"成为可能":["25.0"],"scheduler调度器":["25.0"],"当我们配合":["25.0"],"recoil":["26.0"],"实现原理":["26.0"],"componentb":["26.1"],"initialcount":["26.1"],"定义count的默认值":["26.1"],"修改count事件处理函数":["26.1"],"根据修改参数进行处理":["26.1"],"reducer":["26.1"],"注意这里先判断事件类型":["26.1"],"然后结合携带的参数param":["26.1"],"来最终修改count":["26.1"],"switch":["26.1","33.1"],"case":["26.1"],"add":["26.1","162.0"],"usecounter":["26.2"],"initialstate":["26.2"],"count":["26.2"],"createcontext":["26.3"],"provider":["26.3"],"props":["26.3"],"vue3":["27.0"],"f":["29.1"],"例如react用的便是jsx":["29.2"],"div":["29.2"],"计算出":["29.3","29.6"],"ui":["29.3","35.0","37.4"],"变化":["29.3"],"vue":["29.3","29.7"],"通过对比变化前后的":["29.3"],"待补充":["29.5"],"中变化的部分":["29.6"],"diff":["29.6","150.0","151.0"],"vdom优点":["29.6"],"相对于":["29.6"],"ts":["29.7","112.0"],"编译为":["29.7"],"webpack教程":["30.0"],"因为平常多用来对前端工程打包":["30.1"],"所以也是一个前端构建工具":["30.1"],"通俗的说是":["30.1"],"es6的模块化语法":["30.2"],"webpack":["30.3","36.9"],"命令的时候":["30.3"],"webpack会自动寻找该文件并使用其配置信息进行打包":["30.3"],"基于上面的代码":["30.3"],"新增一个配置文件":["30.3"],"内容如下":["30.3"],"当webpack自身无法处理某种类型的文件的时候":["30.4"],"我们就可以通过配置特定的":["30.4"],"赋予webpack来处理该类型文件的能力":["30.4"],"有两个属性":["30.4"],"识别出哪些文件会被转换":["30.4"],"use":["30.4","30.14"],"定义出在进行转换时":["30.4"],"应该使用哪个":["30.4"],"还是延续上面的文件夹":["30.4"],"在里面再加一个c":["30.4"],"目前常用的是es6":["30.5"],"module和commonjs":["30.5"],"es6":["30.5"],"module通过export导出模块":["30.5"],"表示打包的入口js文件":["30.6"],"module":["30.6","30.8"],"exports":["30.6","30.8","30.12"],"core":["30.6"],"stable":["30.6"],"regenerator":["30.6"],"output是一个对象":["30.7"],"其中方括号很像占位符":["30.8"],"表":["30.8"],"示特定的动态值":["30.8"],"path":["30.8"],"require":["30.8"],"entry":["30.8","30.12"],"webpack4默认为dist目录":["30.9"],"需要注意的是":["30.9"],"path输出路径表示的是在磁盘上构建生成的真实文件存放地址":["30.9"],"代表的是":["30.10"],"之后要引入的js":["30.10"],"css":["30.10","35.1","38.2"],"这些的路径":["30.10"],"前缀":["30.10"],"一般来说会写cdn的url":["30.10"],"publicpath的表现形式有两类":["30.10"],"相对路径和绝对路径":["30.10"],"相对路径":["30.10"],"output":["30.10","30.12"],"webpack预处理器loader":["30.11"],"预处理器loader本质是一个函数":["30.11"],"js里引入了css文件":["30.12"],"表示被正则匹配到的文件不会被loader处理":["30.13"],"表示loader只对匹配到的文件处理":["30.13"],"enforce":["30.13"],"可以强制某个loader最先":["30.13"],"pre":["30.13"],"假设有这么一个":["30.14"],"plugin":["30.14"],"somewebpackplugin":["30.14"],"some":["30.14"],"options":["30.14","44.0"],"那么怎么样的一个东西可以称之为":["30.14"],"插件呢":["30.14"],"一个完整的":["30.14"],"插件需要满足以下几点规则和特征":["30.14"],"是一个独立的模块":["30.14"],"模块对外暴露一个":["30.14"],"函数的原型":["30.14"],"上定义了一个注入compiler对象的apply方法":["30.14"],"apply函数中需要有通过":["30.14"],"compiler":["30.14"],"对象挂载的":["30.14"],"事件钩子":["30.14"],"钩子的回调中能拿到当前编译的":["30.14"],"compilation":["30.14"],"如果是异步编译插件的话可以拿到回调":["30.14"],"callback":["30.14"],"完成自定义子编译流程并处理":["30.14"],"pic1":["31.0"],"这样会造成":["31.0"],"占据比较大的磁盘空间":["31.0"],"windows":["31.0"],"的文件路径最长是":["31.0"],"多个字符":["31.0"],"发现问题出在哪里":["32.0"],"xhr":["33.0","33.1"],"对象注册回调函数":["33.0"],"配置基础的请求信息":["33.0"],"第四步":["33.0"],"发起请求":["33.0"],"三个重要的属性":["33.0"],"新建xmlhttprequest请求对象":["33.1"],"注册相关事件回调处理函数":["33.1"],"onreadystatechange":["33.1","33.6"],"readystate":["33.1"],"当执行到":["33.2"],"因为网络请求比较耗时":["33.3"],"所以要注册回调函数":["33.3"],"这样后台任务执行完成之后就会通过调用回调函数来告诉其执行结果":["33.3"],"接口配置一些基础的请求信息":["33.4"],"包括请求的地址":["33.4"],"请求方法":["33.4"],"你可以对照上面那张请求流程图":["33.5"],"可以看到":["33.5"],"渲染进程会将请求发送给网络进程":["33.5"],"请求时":["33.7"],"浏览器认为这种请求可能是攻击者发起的":["33.7"],"会阻止此类危险的请求":["33.7"],"webapi":["33.7"],"pic3":["33.7"],"ajax":["33.7","36.6"],"全称":["33.7"],"asynchronous":["33.7"],"and":["33.7"],"xml":["33.7"],"异步":["33.7"],"是通过":["33.7"],"对象来实现异步数据传输的":["33.7"],"技术方案":["33.7"],"它通过在后台与服务器进行少量数据交换":["33.7"],"实现了只需要更新局部内容而不需要重新加载整个页面":["33.7"],"从而提高了页面的加载速度和性能":["33.7"],"ps":["33.7"],"记住":["33.7"],"ajax只是一种技术方案而已":["33.7"],"相比":["33.8"],"api":["33.8"],"更加简洁易用":["33.8"],"可以用一行代码即可实现对一个":["33.8"],"get":["33.8","42.1"],"请求":["33.8","34.3","40.8","42.1","42.4"],"session":["34.0"],"token的区别":["34.0"],"token":["34.0"],"是直接存储在浏览器中的一小串数据":["34.0"],"它们是":["34.0"],"http":["34.0","34.3","36.3","36.4","42.4","42.7","42.12"],"协议的一部分":["34.0"],"something":["34.1"],"下都是可见的":["34.1"],"但是在":["34.1"],"home":["34.1"],"其他":["34.1"],"下不可见":["34.1"],"通常":["34.1"],"我们应该将":["34.1"],"设置为根目录":["34.1"],"以使":["34.1"],"浏览器在接收到服务器的响应头后":["34.3"],"开始解析响应头":["34.3"],"如果遇到响应头里含有":["34.3"],"字段的情况":["34.3"],"浏览器就会把这个字段信息":["34.3"],"保存到本地":["34.3"],"比如把uid":["34.3"],"3431uad保持到本地":["34.3"],"当用户再次访问时":["34.3"],"浏览器会发起":["34.3"],"但在发起请求之前":["34.3"],"浏览器会读取之前保存的":["34.3"],"数据":["34.3"],"并自动把数据写进":["34.3"],"请求头":["34.3"],"里的":["34.3"],"的数据只存在于":["34.6"],"发生更改的数据的":["34.7"],"如果调用的是":["34.7"],"则为":["34.7"],"oldvalue":["34.7"],"旧值":["34.7"],"如果是新增数据":["34.7"],"newvalue":["34.7"],"新值":["34.7"],"会话":["34.8"],"在后端设置":["34.9"],"保存在客户端本地文件":["34.9"],"令牌":["34.10"],"是用户身份的验证方式":["34.10"],"网络安全":["35.0"],"浏览器架构在最开始的阶段":["35.0"],"浏览器是单进程的":["35.0"],"这意味着渲染过程":["35.0"],"执行过程":["35.0"],"网络加载过程":["35.0"],"绘制过程和页面显示过程等都是在":["35.0"],"网络图片解码等操作":["35.1"],"safe":["35.2"],"pic6":["35.2"],"持久存储":["35.2"],"现代浏览器将读写文件的操作全部放在了":["35.2"],"浏览器内核":["35.2"],"中实现":["35.2"],"然后通过":["35.2"],"ipc":["35.2"],"将操作结果转发给渲染进程":["35.2"],"存储":["35.2"],"中相互关联的页面放到同一个渲染进程中执行":["35.3"],"最开始":["35.3"],"划分渲染进程是以标签页为单位":["35.3"],"也就是说整个标签页会被划分给某个渲染进程":["35.3"],"按照标签页划分渲染进程存在一些问题":["35.3"],"一类的攻击的吗":["35.4"],"安全沙箱是不能防止":["35.4"],"简单请求":["36.0"],"非简单请求":["36.0"],"总结":["36.0"],"为什么cors要有预检请求呢":["36.0"],"页面中可以嵌入第三方资源":["36.0"],"jsonp":["36.0"],"postmessage跨域":["36.0"],"服务器代理":["36.0"],"域名和端口":["36.1"],"都相同":["36.1"],"我们就称这两个":["36.1"],"数据和网络":["36.2"],"这三个层面产生影响":["36.2"],"同源策略限制了来自":["36.2"],"w3c":["36.3"],"标准":["36.3"],"定义了在必须访问跨域资源时":["36.3"],"浏览器与服务器应该如何沟通":["36.3"],"背后的基本思想":["36.3"],"就是使用":["36.3"],"自定义":["36.3"],"头部":["36.3"],"让浏览器与服务器进行沟通":["36.3"],"从而决定请求或响应是应该成功":["36.3"],"还是应该失败":["36.3"],"origin":["36.4","36.5"],"字段":["36.4"],"标明这个请求是从哪里发出来的":["36.4"],"www":["36.4"],"wanwan":["36.4"],"com":["36.4","36.9"],"发送下列头部":["36.5"],"与简单的请求相同":["36.5"],"access":["36.5"],"control":["36.5","40.0"],"request":["36.5"],"method":["36.5"],"请求自身使用的方法":["36.5"],"cors":["36.6"],"通信与同源的":["36.6"],"服务器有时候不想理睬跨域请求":["36.7"],"比如put":["36.7"],"delete请求可以直接新建或者修改":["36.7"],"最初的浏览器都是支持外部引用资源文件的":["36.8"],"比如用":["36.8"],"local":["36.9"],"tcc":["36.9"],"tencent":["36.9"],"把前端域名local":["36.9"],"com代理到本地起的前端页面服务中去":["36.9"],"关于跨域的问题":["36.9"],"都由后台来解决了":["36.9"],"proxy":["36.9"],"原理详见":["36.9"],"column":["36.10","36.16"],"article":["36.10","36.16"],"所以叫":["36.11"],"跨域脚本":["36.11"],"但是发展到现在":["36.11"],"往":["36.11"],"文件中注入恶意代码的方式越来越多了":["36.11"],"而浏览器无法区分这些脚本是被恶意注入的还是正常的页面内容":["36.11"],"恶意脚本可能会":["36.11"],"可以":["36.11"],"数据库":["36.12","37.4"],"文件系统等":["36.12"],"如电子邮件":["36.13"],"诱使用户去访问一个包含恶意代码的":["36.13"],"当受害者点击这些专门设计的链接的时候":["36.13"],"恶意代码会直接在受害者主机上的":["36.13"],"浏览器执行":["36.13"],"xss":["36.14"],"攻击":["36.14"],"黑客通过各种手段将恶意脚本注入用户的页面中":["36.14"],"全部都是在浏览器端完成的":["36.15"],"因此基于":["36.15"],"攻击是属于":["36.15"],"前端":["36.15"],"但无论是何种类型的":["36.15"],"它们都有一个共同点":["36.15"],"那就是首先往浏览器中注入恶意脚本":["36.15"],"然后再通过恶意脚本将用户信息发送至黑客部署的恶意服务器上":["36.15"],"所以要阻止":["36.15"],"utm":["36.16"],"选项":["36.17"],"如下":["36.17"],"1p":["36.17"],"jar":["36.17"],"06":["36.17"],"expires":["36.17"],"tue":["36.17"],"nov":["36.17"],"插件进程":["37.0"],"未来":["37.0"],"面向服务的架构":["37.0"],"从输入":["37.0"],"到页面展示":["37.0"],"这中间发生了什么":["37.0"],"本文知识都是基于chrome浏览器的":["37.0"],"但是线程是不能单独存在的":["37.1"],"它是由":["37.1"],"进程":["37.1"],"来启动和管理的":["37.1"],"年之前":["37.2"],"市面上浏览器都是单进程的":["37.2"],"单进程浏览器架构如下图":["37.2"],"多进程自然的解决了不稳定和不流畅的问题":["37.3"],"同时还利用了安全沙箱解决了不安全的问题":["37.3"],"从图中可以看出":["37.3"],"最新的":["37.3"],"chrome":["37.3"],"浏览器包括":["37.3"],"个":["37.3"],"浏览器":["37.3"],"browser":["37.3"],"主进程":["37.3"],"高速":["37.4"],"安全的目标":["37.4"],"最终要把":["37.4"],"文件":["37.4"],"设备":["37.4"],"网络等模块重构为基础服务":["37.4"],"类似操作系统底层服务":["37.4"],"下面是":["37.4"],"的进程模型图":["37.4"],"other":["37.4","38.9"],"pic4":["37.4"],"指的是进程间通信":["37.4"],"常见的方式有":["37.4"],"管道":["37.4"],"包括无名管道和命名管道":["37.4"],"消息队列":["37.4"],"信号量":["37.4"],"共享存储":["37.4"],"raster":["38.0"],"操作":["38.0"],"合成和显示":["38.0"],"渲染流程总结":["38.0","38.9"],"star":["38.0","38.9"],"相关概念":["38.0"],"重排":["38.0"],"更新了元素的几何属性":["38.0"],"转换为浏览器能够理解的结构":["38.1","38.2"],"树":["38.1","38.3"],"节点中每个元素的具体样式":["38.2"],"这个阶段大体可分为三步来完成":["38.2"],"把":["38.2"],"文件一样":["38.2"],"浏览器也是无法直接理解这些纯文本的":["38.2"],"还有使用了":["38.4"],"display":["38.4"],"none":["38.4"],"属性的元素":["38.4"],"所以在显示之前":["38.4"],"我们还要额外地构建一棵":["38.4"],"那么接下来":["38.5"],"变换":["38.6"],"页面滚动":["38.6"],"或者使用":["38.6"],"indexing":["38.6"],"做":["38.6"],"绘制指令":["38.7"],"然后再把这些指令按照顺序组成一个待绘制列表":["38.7"],"渲染引擎中的合成线程":["38.8"],"来完成的":["38.8"],"合成线程会将较大":["38.8"],"较长的图层":["38.8"],"将其页面内容绘制到内存中":["38.9"],"最后再将内存显示在屏幕上":["38.9"],"更新元素的绘制属性":["38.11"],"渲染引擎将跳过布局和绘制":["38.12"],"只执行后续的合成操作":["38.12"],"我们把这个过程叫做":["38.12"],"而不是频繁操作":["38.13"],"style":["38.13"],"避免使用":["38.13"],"cdn原理":["39.0"],"使用户可就近取得所需内容":["39.1"],"提高用户访问的响应速度和成功率":["39.1"],"当用户点击网站页面上的内容url":["39.2"],"经过":["39.2"],"本地dns系统":["39.2"],"解析":["39.2"],"dns系统会最终将域名的解析权交给cname指向的":["39.2"],"cdn专用dns服务器":["39.2"],"cdn的dns服务器将cdn的全局":["39.2"],"将这些缓存服务器分布到用户访问相对集中的地区或网络中":["39.3"],"在用户访问网站时":["39.3"],"利用全局负载技术将用户的访问指向距离最近的工作正常的缓存服务器上":["39.3"],"由缓存服务器直接响应用户请求":["39.3"],"但一般都会遵循":["39.4"],"静态资源":["39.5"],"所谓":["39.5"],"用来把":["39.6"],"域名解析成对应的ip地址":["39.6"],"对于前端来说":["39.6"],"cache":["40.0","40.1"],"协商缓存":["40.0","40.6"],"协商缓存过程":["40.0"],"相关状态码":["40.0"],"一般可以用来实现缓存功能":["40.1"],"必须使用":["40.1"],"协议来保障安全":["40.1"],"memory":["40.1"],"内存缓存读取高效":["40.1"],"但缓存持续性很短":["40.1"],"浏览器每次发起请求":["40.2"],"都会先在浏览器缓存中查找该请求的结果以及缓存标识":["40.2"],"生效则直接使用缓存":["40.3"],"若强缓存不生效则进行协商缓存":["40.3"],"last":["40.3","178.0"],"modified":["40.3"],"since":["40.3"],"时间":["40.4"],"是缓存过期时间":["40.4"],"用以表达在这个时间点之前发起请求可以直接从浏览器中读取数据":["40.4"],"而无需重新发起请求":["40.4"],"值为一个时间戳":["40.4"],"客户端不需要向服务器发送请求":["40.5"],"control解决了expires在浏览器中":["40.5"],"时间被手动更改导致缓存判断错误的问题":["40.5"],"常见指令如下":["40.5"],"完整列表参考mdn":["40.5"],"private":["40.5"],"默认值":["40.5"],"客户端可以缓存":["40.5"],"代理服务器不能缓存":["40.5"],"public":["40.5"],"客户端和代理服务器都可缓存":["40.5"],"no":["40.5"],"生效":["40.6"],"返回":["40.6"],"服务器通过":["40.7"],"字段告知客户端":["40.7"],"返回资源的同时在header添加":["40.7"],"表示资源最后一次被修改的时间":["40.7"],"服务器":["40.8"],"返回的当前资源文件的一个":["40.8"],"唯一标识":["40.8"],"它的作用是用来标识资源":["40.8"],"是否有变化":["40.8"],"浏览器在下一次发起请求时":["40.8"],"会将上一次返回的etag值赋值给":["40.8"],"并添加在":["40.8"],"header":["40.8"],"服务端匹配传入的值与上次是否一致":["40.8"],"如果一致返回":["40.8"],"如果第三次握手丢失了":["41.0"],"客户端服务端会如何处理":["41.0"],"四次挥手":["41.0"],"等待2msl的意义":["41.0"],"为什么是4次挥手":["41.0"],"dns解析":["41.0","41.8"],"域名解析":["41.0","41.8"],"seq":["41.1"],"发送的第一个字节的序号":["41.1"],"ack":["41.1","41.5"],"确认报文段":["41.1"],"确认号":["41.1","41.6"],"希望收到的下一个数据的第一个字节的序号":["41.1","41.6"],"过程如下":["41.1","41.6"],"第一次握手":["41.1","41.2"],"客户端向服务端发送一个":["41.1"],"报文":["41.1","41.6"],"并指明客户端的初始化序列号":["41.1"],"客户端发送":["41.2"],"syn":["41.2","41.5"],"报文给服务器":["41.2"],"服务器接收该报文":["41.2"],"第一次":["41.3"],"第二次握手绝对不可以携带数据":["41.3"],"假如第一次握手可以携带数据的话":["41.3"],"如果有人要恶意攻击服务器":["41.3"],"属于典型的":["41.4"],"dos":["41.4"],"ddos":["41.4"],"包":["41.5"],"刚开始双方都处于established":["41.6"],"状态":["41.6","73.0"],"假设是客户端先发起关闭请求":["41.6"],"第一次挥手":["41.6"],"客户端发送一个":["41.6"],"请求连接终止":["41.6"],"报文中会指定一个序列号":["41.6"],"u":["41.6"],"并停止再发送数据":["41.6"],"主动关闭":["41.6"],"且还在路上的时候":["41.7"],"若客户端的端口此时刚好被新的应用占用":["41.7"],"那么就接收到了无用数据包":["41.7"],"造成数据包混乱":["41.7"],"network":["41.8","43.0"],"dns":["41.8"],"构建可扩展性":["42.0"],"多文件":["42.0"],"状态码":["42.0"],"用户代理":["42.0"],"http1":["42.0"],"标准化协议":["42.0","42.3"],"长链接":["42.0"],"管线化":["42.0"],"用来在网络之间传递":["42.1"],"超文本的内容":["42.1"],"超文本传输协议":["42.1"],"只能实现":["42.1"],"支持多种类型的文件下载":["42.2"],"是":["42.2"],"的一个":["42.2"],"核心诉求":["42.2"],"而且文件格式不仅仅局限于":["42.2"],"ascii":["42.2"],"编码":["42.2"],"还有很多":["42.2"],"其他类型编码的文件":["42.2"],"在建立好连接之后":["42.2"],"只会发送类似get":["42.2"],"只要浏览器或者服务器没有明确断开连接":["42.4"],"那么该":["42.4"],"域名分片":["42.5","42.12"],"允许在第一个应答被完全发送之前就发送第二个请求":["42.5"],"响应1":["42.6"],"请求2":["42.6"],"响应2":["42.6"],"引入":["42.8"],"chunk":["42.8"],"每次上传完成后更新已上传文件大小的记录":["42.9"],"服务器接收到上传过来的小文件后根据一定的规则来组合这些小文件":["42.9"],"如果在上传过程中出现网络中断等意外情况":["42.9"],"下次再次上传时可以从已经上传的部分继续上传":["42.9"],"而不是重新上传":["42.9"],"http中实现":["42.9"],"断点续传技术在http1":["42.9"],"1中开始得到支持":["42.9"],"通过在header":["42.9"],"里添加两个参数来实现的":["42.9"],"range":["42.9"],"内容协商":["42.10"],"缓存":["42.10","44.0"],"tcp的慢启动":["42.11"],"同时开启了多条":["42.11"],"tcp":["42.11","43.0"],"连接":["42.11","42.12"],"并发连接":["42.12"],"的方式来解决这个问题":["42.12"],"但这并没有真正从":["42.12"],"本身的层面解决问题":["42.12"],"只是增加了":["42.12"],"为了解决该问题":["42.12"],"中引用到的其他资源文件一起返回给客户端":["42.13"],"减少客户端的等待":["42.13"],"针对头部字段":["42.13"],"也采用了对应的压缩算法":["42.13"],"hpack":["42.13"],"对请求头进行压缩":["42.13"],"首先是在服务器和客户端之间建立":["42.13"],"哈希表":["42.13"],"将用到的字段存放在这张表中":["42.13"],"那么在传输的时候对于之前出现过的值":["42.13"],"只需要把":["42.13"],"索引":["42.13"],"比如0":["42.13"],"传给对方即可":["42.13"],"对方拿到索引查表就行了":["42.13"],"这种":["42.13"],"传索引":["42.13"],"的方式":["42.13"],"可以说让请求头字段得到极大程度的精简和复用":["42.13"],"其次是对于整数和字符串进行":["42.13"],"对通信协议进行加密":["43.0"],"也就是":["43.0"],"之间插入一个安全层":["43.0"],"所有经过安全层的数据都会被加密或者解密":["43.0"],"pic7":["43.0"],"安全层有两个主要的职责":["43.0"],"对发起":["43.0"],"请求的数据进行加密操作和对接收到":["43.0"],"的内容进行解密操作":["43.0"],"默认端口号是":["43.0"],"即安全套接字层":["43.0"],"connect":["44.0"],"建立连接隧道":["44.0"],"用于代理服务器":["44.0"],"判断是否有请求权限":["44.0"],"用来跨域请求":["44.0"],"trace":["44.0"],"追踪请求":["44.0"],"响应的传输路径":["44.0"],"的角度":["44.0"],"请求会被浏览器主动缓存下来":["44.0"],"留下历史记录":["44.0"],"而":["44.0"],"默认不会":["44.0"],"参数":["44.0"],"for":["45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","55.0","56.0","57.0","60.0","61.0","62.0","87.1","87.2","120.1","150.0","163.0","169.0","170.0","171.0","172.0","174.0","181.0"],"binary":["45.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","60.0","61.0","62.0","63.0"],"tree":["45.0","47.0","48.0","50.0","51.0","52.0","53.0","54.0","56.0","57.0","58.0","60.0","61.0","62.0","63.0"],"treenode":["45.0","47.0","48.0","50.0","51.0","52.0","53.0","54.0","58.0","59.0","60.0","61.0","63.0","90.0"],"val":["45.0","47.0","48.0","50.0","51.0","52.0","53.0","54.0","55.0","58.0","59.0","60.0","61.0","63.0","90.0","138.0","170.0","171.0","173.0","177.0"],"left":["45.0","47.0","50.0","51.0","52.0","53.0","54.0","55.0","58.0","59.0","63.0","67.0","90.0","118.0","122.0","127.0","153.0","160.0","161.0"],"right":["45.0","50.0","51.0","53.0","54.0","55.0","58.0","59.0","63.0","67.0","90.0","118.0","122.0","127.0","153.0","160.0","161.0"],"data":["46.0","163.0"],"size":["46.0","162.0","163.0"],"重构堆":["46.0","163.0"],"rebuildheap":["46.0","163.0"],"l":["46.0","65.0","136.0","163.0"],"math":["46.0","72.0","80.5","85.0","100.0","102.0","119.4","132.0","158.0","163.0"],"floor":["46.0","163.0"],"code":["47.0","48.0","49.0","52.0","56.0","57.0","60.0","61.0","62.0","72.0","78.0","93.0","94.0","95.0","101.0","107.0","108.0","109.0","111.0","113.0","114.0","116.0","123.0","124.0","135.0","141.0","142.0","144.0","146.0","147.0","148.0","154.0","155.0","156.0","159.0","167.0","169.0","172.0","174.0"],"start":["47.0","48.0","49.0","50.0","52.0","56.0","57.0","60.0","61.0","62.0","72.0","74.0","78.0","83.0","88.0","93.0","94.0","95.0","101.0","104.0","107.0","108.0","109.0","110.2","111.0","113.0","114.0","116.0","123.0","124.0","130.0","135.0","141.0","142.0","144.0","146.0","147.0","148.0","154.0","155.0","156.0","159.0","167.0","169.0","170.0","172.0","174.0"],"definition":["47.0","48.0","49.0","50.0","51.0","52.0","56.0","57.0","60.0","61.0","62.0","169.0","170.0","171.0","172.0","174.0"],"二叉树的最大深度":["49.0"],"二叉树的前序遍历":["56.0"],"二叉树的后序遍历":["57.0"],"二叉树的中序遍历":["62.0"],"快速排序":["64.0"],"就是个二叉树的":["64.0"],"前序":["64.0"],"归并排序":["64.0"],"后序":["64.0"],"快排代码框架如下":["64.0"],"先构造分界点":["64.0"],"然后去左右子数组构造分界点":["64.0"],"就是一个二叉树的前序遍历吗":["64.0"],"sort":["64.0","106.0","110.5","110.6","129.0"],"nums":["64.0","65.0","67.0","74.0","88.0","93.0","95.0","105.0","106.0","108.0","109.0","110.5","120.2","124.0","130.0","133.0","137.0","146.0","148.0","151.0","153.0","155.0","166.0","179.0","180.0"],"lo":["64.0"],"hi":["64.0"],"前序遍历位置":["64.0"],"通过交换元素构建分界点":["64.0"],"r":["65.0","136.0"],"利用array":["65.0"],"sort先对子数组进行排序":["65.0"],"然后用循环去判断差额":["65.0"],"checkarithmeticsubarrays":["65.0"],"n":["66.0","67.0","68.0","73.0","75.0","76.0","77.0","81.0","84.0","89.0","98.0","99.0","107.0","128.0","131.0","162.0"],"素数筛选法":["66.0"],"开始":["66.0"],"我们知道":["66.0"],"是一个素数":["66.0"],"构造前缀乘left":["67.0"],"和后缀乘right":["67.0"],"answer":["67.0"],"num2":["68.0"],"multiply":["68.0"],"m":["68.0","76.0","77.0","81.0","98.0","99.0","131.0"],"结果最多为":["68.0"],"如果不让括号嵌套":["69.0"],"即只加一层括号":["69.0"],"其实就是按照":["69.0"],"运算符":["69.0"],"进行分割":["69.0"],"给每个运算符的左右两部分加括号":["69.0"],"即分治算法中的":["69.0"],"分":["69.0"],"明确递归函数的定义是什么":["69.0"],"相信并且利用好函数的定义":["69.0"],"通过子问题的结果":["69.0"],"合成原问题的结果":["69.0"],"治":["69.0"],"map":["69.0","167.0"],"diffwaystocompute":["69.0"],"len":["70.0","119.1","119.4","119.5","140.0"],"middle":["70.0"],"思路":["71.0","97.0","130.0","135.0","143.0","166.0"],"从底向上计算":["71.0","97.0"],"最后返回dp":["71.0","97.0"],"param":["71.0","74.0","76.0","77.0","83.0","88.0","92.0","93.0","94.0","95.0","97.0","98.0","99.0","104.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","123.0","124.0","130.0","135.0","137.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","154.0","155.0","156.0","159.0","177.0","180.0"],"triangle":["71.0","97.0"],"minimumtotal":["71.0","97.0"],"状态转移方程":["72.0","76.0","86.0","98.0","100.0"],"dp":["72.0","73.0","74.0","76.0","82.0","84.0","86.0","87.1","88.0","98.0","102.0"],"min":["72.0","100.0","102.0"],"j":["72.0","86.0","87.2","100.0"],"时算法返回":["73.0"],"因为不需要任何硬币就已经凑出目标金额了":["73.0"],"也就是原问题和子问题中会变化的变量":["73.0"],"由于硬币数量无限":["73.0"],"硬币的面额也是题目给定的":["73.0"],"只有目标金额会不断地向":["73.0"],"靠近":["73.0"],"所以唯一的":["73.0"],"就是目标金额":["73.0"],"选择":["73.0"],"也就是导致":["73.0"],"产生变化的行为":["73.0"],"所有硬币的面值":["73.0"],"就是你的":["73.0"],"明确":["73.0"],"数组的定义":["73.0"],"表示从索引":["74.0"],"跳到最后一格":["74.0"],"至少需要":["74.0"],"fib":["75.0"],"且":["77.0","99.0"],"到障碍直接返回0":["77.0","99.0"],"obstaclegrid":["77.0","99.0"],"lang":["78.0","101.0","116.0"],"爬楼梯":["78.0","101.0"],"programming":["79.0"],"简称dp":["79.0"],"将问题分解为":["79.0"],"互相重叠的子问题":["79.0"],"动态规划和分治都有最优子结构":["79.1"],"但是分治的子问题不重叠":["79.1"],"寻找最优子结构推导状态转移方程":["79.3"],"确定dp初始状态":["79.3"],"不能同时参加多笔交易":["80.1"],"卖出":["80.2"],"天数":["80.3"],"k":["80.3","80.4","107.0","153.0","154.0","155.0","166.0"],"第i天":["80.4"],"还可以交易k次":["80.4"],"prices":["80.5"],"昨天持有":["80.5"],"今天卖出":["80.5"],"今天手中就没有股票了":["80.5"],"max":["80.5","85.0","132.0","158.0"],"longestcommonsubsequence":["81.0"],"目标":["81.0"],"s1":["81.0","159.0"],"子串一定是连续的":["82.0"],"而子序列不一定是连续的":["82.0"],"双指针":["82.0","135.0","137.0","140.0","175.0"],"该方法不行":["82.0"],"理由同滑动窗口":["82.0"],"滑动窗口":["82.0"],"因为滑动窗口适合于结果为连续的数组或者字符串":["82.0"],"动态规划":["82.0","86.0","103.0","115.0"],"dp定义":["82.0"],"envelopes":["83.0"],"先按宽度从小到大排序":["83.0"],"然后宽度相同的":["83.0"],"再按高度从大到小排序":["83.0"],"按高度进行动态规划":["83.0"],"找最长递增的子序列":["83.0"],"s":["84.0","114.0","143.0","144.0","154.0","156.0","162.0"],"longestpalindromesubseq":["84.0"],"窗口内元素和":["85.0","132.0","158.0"],"res":["85.0","127.0","132.0","153.0","158.0"],"infinity":["85.0","132.0","158.0"],"即将进入窗口的元素":["85.0","132.0","158.0"],"更新窗口":["85.0","132.0","158.0"],"更新答案":["85.0","132.0","158.0"],"收缩窗口":["85.0","132.0","158.0"],"此处难点":["85.0","132.0","158.0"],"中有正有负":["85.0","132.0","158.0"],"这种情况下元素和最大的那个子数组一定是以正数开头的":["85.0","132.0","158.0"],"如果以负数开头的话":["85.0","132.0","158.0"],"把这个负数去掉":["85.0","132.0","158.0"],"就可以得到和更大的子数组了":["85.0","132.0","158.0"],"与假设相矛盾":["85.0","132.0","158.0"],"那么此时我们需要穷举所有以正数开头的子数组":["85.0","132.0","158.0"],"计算他们的元素和":["85.0","132.0","158.0"],"找到元素和最大的那个子数组":["85.0","132.0","158.0"],"所以算法只有在窗口元素和大于":["85.0","132.0","158.0"],"时才会不断扩大窗口":["85.0","132.0","158.0"],"解法二":["86.0"],"表示s":["86.0"],"是否是回文子串":["86.0"],"j不相邻":["86.0"],"第二种思路":["87.0"],"二维dp数组":["87.0"],"相关题目整理":["87.0"],"array":["87.1","105.0","131.0","150.0","151.0","152.0","167.0"],"表示强盗从第":["88.0"],"间房子开始抢劫":["88.0"],"到最后一间抢到的最多的钱":["88.0"],"首先":["89.0"],"首尾房间不能同时被抢":["89.0"],"那么只可能有三种不同情况":["89.0"],"n为房子数量":["89.0"],"即nums长度":["89.0"],"要么都不被抢":["89.0"],"这种情况不用计算":["89.0"],"因为可选择机会比后两种少":["89.0"],"金额肯定也更小":["89.0"],"要么第一间房子被抢最后一间不抢":["89.0"],"time":["91.0"],"先按照起点升序排序":["91.0"],"如果起点相同的话按照终点降序排序":["91.0"],"排序之后":["91.0"],"从第一个区间开始选":["91.0"],"每当选中一个区间":["91.0"],"图中红色的区间":["91.0"],"我们会比较所有起点小于":["91.0"],"的区间":["91.0"],"根据贪心策略":["91.0"],"它们中终点最大的那个区间就是下一个会被选中的区间":["91.0"],"intervals":["92.0"],"贪心算法核心":["92.0"],"选择最早结束的区间":["92.0"],"从区间集合":["92.0"],"intvs":["92.0"],"中选择一个区间":["92.0"],"这个":["92.0"],"跳跃游戏":["93.0","95.0"],"ii":["93.0","141.0"],"用最少数量的箭引爆气球":["94.0"],"points":["94.0"],"与435题相似":["94.0"],"使用贪心算法需要满足更多的条件":["96.0"],"贪心选择性质":["96.0"],"但是效率比动态规划要高":["96.0"],"表示在grid":["100.0"],"位置上的路径和":["100.0"],"grip":["100.0"],"end":["102.0"],"dp函数的定义为":["102.0"],"从第一行":["102.0"],"向下落":["102.0"],"落到位置":["102.0"],"的最小路径和为":["102.0"],"状态转移方程为":["102.0"],"回溯":["103.0","109.0","115.0"],"括号问题的性质":["103.0","115.0"],"一个":["103.0","115.0"],"合法":["103.0","115.0","117.0"],"括号组合的左括号数量一定等于右括号数量":["103.0","115.0"],"对于一个":["103.0","115.0"],"candidates":["104.0"],"target":["104.0","120.2","124.0","137.0"],"combinationsum":["104.0"],"permute":["105.0"],"used":["105.0","110.3","110.6","153.0"],"fill":["105.0"],"permuteunique":["106.0"],"排序":["106.0","137.0"],"combine":["107.0"],"子集":["108.0"],"需要先进行排序":["109.0"],"让相同的元素靠在一起":["109.0"],"如果发现":["109.0"],"可复选":["110.0","110.9"],"回溯算法解题套路框架":["110.0"],"回溯算法秒杀所有排列":["110.0"],"子集问题":["110.0"],"dfs":["110.0"],"算法":["110.0"],"深度优先搜索算法":["110.0"],"算法框架":["110.2","110.5","110.8"],"控制树枝的遍历":["110.2"],"标记选择过了的元素":["110.3","110.6"],"track":["110.3","110.6"],"路径":["110.3","110.6"],"组合总和":["110.8"],"backtrack":["110.8"],"所有可能的路径":["111.0"],"graph":["111.0"],"如果图是有环的":["112.0"],"需要":["112.0"],"visited":["112.0"],"辅助":["112.0"],"图遍历框架如下":["112.0"],"记录被遍历过的节点":["112.0"],"平衡括号字符串的最少插入次数":["113.0"],"有效的括号":["114.0"],"使括号有效的最少添加":["116.0"],"括号组合的左括号数量一定":["117.0"],"等于":["117.0"],"选择排序":["119.0"],"从开始第一对到结尾的最后一对":["119.2"],"这样在最后的元素应该会是最大的数":["119.2"],"针对所有的元素重复以上的步骤":["119.2"],"除了最后一个":["119.2"],"重复步骤1":["119.2"],"直到排序完成":["119.2"],"开始时":["119.3"],"当前有序区和无序区分别为r":["119.3"],"和r":["119.3","136.0"],"该趟排序从当前无序区中":["119.3"],"选出关键字最小的记录":["119.3"],"mid":["119.4"],"再将left":["119.5"],"基准数pivot":["119.5"],"right连接起来":["119.5"],"并返回":["119.5"],"quicksort":["119.5"],"插值查找":["120.0"],"再在两边中寻找中间值":["120.2"],"持续以上操作":["120.2"],"直到找到所在位置为止":["120.2"],"binarysearch":["120.2"],"就是两个指针相向而行或者相背而行":["121.0"],"而所谓快慢指针":["121.0"],"就是两个指针同向而行":["121.0"],"一快一慢":["121.0"],"二分查找":["122.0"],"左":["122.0"],"右边界":["122.0"],"bound":["122.0","125.0"],"注意":["122.0"],"搜索插入位置":["123.0"],"分析二分查找的一个技巧是":["125.0"],"不要出现":["125.0"],"而是把所有情况用":["125.0"],"写清楚":["125.0"],"计算":["125.0"],"时需要防止溢出":["125.0"],"代码中":["125.0"],"就和":["125.0"],"的结果相同":["125.0"],"但是有效防止了":["125.0"],"太大":["125.0"],"直接相加导致溢出的情况":["125.0"],"寻找左边界的二分查找":["125.0"],"matrix":["126.0"],"void":["126.0"],"do":["126.0"],"not":["126.0"],"anything":["126.0"],"modify":["126.0"],"in":["126.0"],"place":["126.0"],"instead":["126.0"],"top":["127.0"],"bottom":["127.0"],"我们可以先将":["128.0"],"升序排序":["129.0"],"presum":["129.0","130.0","133.0"],"numarray":["129.0","133.0"],"核心思路是我们":["130.0"],"一个新的数组":["130.0"],"出来":["130.0"],"记录":["130.0","157.0"],"summatrix":["131.0"],"题意解读":["134.0"],"要去重":["134.0"],"不能打乱字符串的相对顺序":["134.0"],"要求的去重字符串中":["134.0"],"字典序最小的作为最终结果":["134.0"],"removeduplicateletters":["134.0"],"seen":["134.0"],"记录当前栈中已经存在的字符":["134.0"],"height":["135.0"],"步骤":["136.0"],"将数组由小到大排序":["136.0"],"先一层循环":["136.0"],"遍历c":["136.0"],"固定等号右边":["136.0"],"在循环内使用双指针两个指针l":["136.0"],"找到nums":["136.0"],"threesumclosest":["137.0"],"linked":["138.0","169.0","170.0","171.0","172.0","173.0","174.0"],"listnode":["138.0","169.0","170.0","171.0","173.0","177.0"],"两指针同一方向或不同方向":["139.0"],"需要一个初始指向尾部的指针":["140.0"],"将其不断地往前移动":["140.0"],"直到指向的元素小于前一个元素为止":["140.0"],"findlengthofshortestsubarray":["140.0"],"两数之和":["141.0"],"输入有序数组":["141.0"],"反转字符串":["142.0"],"character":["142.0"],"左右指针":["143.0"],"从中心往两边扩散":["143.0"],"并且分奇":["143.0"],"偶两种情况":["143.0"],"中心扩展法":["143.0"],"longestpalindrome":["143.0"],"回文子串":["144.0"],"labuladong":["145.0"],"algo":["145.0"],"删除有序数组中的重复项":["146.0"],"移除元素":["147.0"],"移动零":["148.0"],"原地":["149.0"],"根据初始数组构造差分数组":["150.0","151.0"],"差分数组":["151.0"],"difference":["151.0"],"输入一个初始数组":["151.0"],"区间操作将在这个数组上进行":["151.0"],"就是":["152.0"],"之差":["152.0"],"构造差分数组":["152.0"],"int":["152.0"],"不断将right向右移":["153.0"],"窗口大小固定的情况":["154.0"],"lengthoflongestsubstring":["156.0"],"findanagrams":["157.0"],"need":["157.0","159.0"],"用来记录t中字符出现次数":["157.0","159.0"],"方便后续的判断":["157.0","159.0"],"窗口":["157.0","160.0"],"中的相应字符的出现次数":["157.0"],"s2":["159.0"],"checkinclusion":["159.0"],"把索引左闭右开区间":["160.0"],"称为一个":["160.0"],"我们先不断地增加":["160.0"],"指针扩大窗口":["160.0"],"直到窗口中的字符串符合要求":["160.0"],"包含了":["160.0"],"t":["160.0"],"中的所有字符":["160.0"],"我们停止增加":["160.0"],"转而不断增加":["160.0"],"指针缩小窗口":["160.0"],"直到窗口中的字符串不再符合要求":["160.0"],"不包含":["160.0"],"fruits":["161.0"],"totalfruit":["161.0"],"增大窗口":["162.0"],"needs":["162.0"],"shrink":["162.0"],"缩小窗口":["162.0"],"remove":["162.0"],"时间复杂度是":["162.0"],"但滑动窗口的难点在于":["162.0"],"比如说如何向窗口中添加新元素":["162.0"],"maxheapify":["163.0"],"isheap":["163.0"],"是一个字符数组":["164.0"],"注意数组的第一个索引":["164.0"],"空着不用":["164.0"],"获取该关键字对应的值后":["165.0"],"再进行更新":["165.0"],"更新的方法是先":["165.0"],"delete":["165.0"],"该关键字":["165.0"],"然后再":["165.0"],"set":["165.0"],"重新加入到":["165.0"],"末尾":["165.0"],"put":["165.0"],"新增":["165.0"],"键值对":["165.0"],"关键字":["165.0"],"值":["165.0"],"直接":["165.0"],"新增到":["165.0"],"末尾即可":["165.0"],"更新":["165.0"],"已存在的键值对":["165.0"],"维护单调递减队列":["166.0"],"当进入滑动窗口的元素大于等于队尾的元素时":["166.0"],"不断从队尾出队":["166.0"],"直到进入滑动窗口的元素小于队尾的元素":["166.0"],"才可以入队":["166.0"],"以保证单调递减的性质":["166.0"],"cha":["167.0"],"ru":["167.0"],"shan":["167.0"],"chu":["167.0"],"he":["167.0"],"huo":["167.0"],"q":["167.0"],"languagetags":["167.0"],"重点在于":["167.0"],"想实现题目要求的":["167.0"],"时间的删除":["167.0"],"只能在数组末尾进行删除操作":["167.0"],"具体做法就是把要删除的元素和末尾的元素换个位置":["167.0"],"然后再从数组末尾删除":["167.0"],"randomizedset":["167.0"],"是很简单的一种数据结构":["168.0"],"singly":["169.0","170.0","171.0","172.0","173.0","174.0"],"删除排序链表中的重复元素":["172.0"],"链表的中间结点":["174.0"],"慢指针配合完成任务":["175.0"],"lc21":["175.0"],"合并两个有序链表":["175.0"],"虚拟头节点":["175.0"],"lc86":["175.0"],"直接看代码实现":["176.0"],"定义":["176.0"],"输入一个单链表头结点":["176.0"],"将该链表反转":["176.0"],"head":["177.0"],"记录第":["178.0"],"个节点":["178.0"],"reverse":["178.0"],"也就是说打乱结果总共有":["179.0"],"我们把它随机换到了索引":["179.0"],"上":["179.0"],"共有":["179.0"],"种可能性":["179.0"],"solution":["180.0"],"构建前缀和数组":["181.0"],"偏移一位留给":["181.0"],"构造前缀和":["181.0"]},{"0":["7.11","7.21","7.28","33.1","40.0","42.13","47.0","48.0","50.0","51.0","52.0","56.0","57.0","60.0","61.0","62.0","65.0","68.0","70.0","77.0","82.0","83.0","84.0","87.1","89.0","91.0","99.0","100.0","103.0","107.0","115.0","119.2","119.4","120.1","120.2","124.0","126.0","129.0","130.0","133.0","135.0","140.0","143.0","155.0","156.0","157.0","159.0","171.0","172.0","174.0","180.0"],"1":["0.4","1.7","2.3","2.5","7.9","16.2","20.2","22.15","22.17","24.0","24.1","26.2","30.1","36.13","36.15","38.9","40.0","40.4","43.0","64.0","68.0","74.0","81.0","86.0","88.0","94.0","109.0","110.0","119.1","124.0","130.0","131.0","133.0","135.0","138.0","140.0","151.0","157.0","159.0"],"2":["0.1","0.4","2.3","2.5","7.13","7.19","10.4","19.2","21.1","21.8","21.9","22.13","26.0","29.3","29.7","36.15","40.8","41.1","41.6","41.8","42.12","43.0","88.0","92.0","110.0","117.0","122.0","161.0","179.0"],"3":["0.11","1.6","2.8","3.4","7.6","7.16","9.2","16.1","29.7","33.5","38.13","39.2","42.11","43.0","66.0","72.0","89.0","92.0","110.0","165.0","175.0"],"4":["1.6","7.16","7.21","16.1","24.0","30.13","33.8","39.2","136.0","160.0"],"5":["1.1","1.8","7.21","9.2"],"6":["1.8","9.2","10.0","30.14","42.4","66.0"],"7":["10.0"],"8":["1.8","9.2","10.0","66.0"],"9":["72.0"],"10":["6.1"],"11":["1.10","7.10"],"12":["1.8","9.2"],"13":["9.2"],"18":["3.3"],"21":["7.9","36.17"],"22":["4.12"],"26":["134.0"],"36":["36.17"],"42":["9.2"],"50":["37.2"],"60":["0.2","0.7","1.2","22.4"],"80":["2.1","2.2","2.4","2.7","36.3"],"99":["73.0"],"200":["40.8"],"1999":["43.0"],"2018":["42.13"],"2021":["12.0"],"6265":["34.0"],"50000":["0.12"],"100048001":["0.0"],"504375454":["12.0"],"time":["0.0","1.0","36.1"],"geekbang":["0.0","1.0"],"org":["0.0","1.0"],"column":["0.0","1.0"],"intro":["0.0"],"网页的工作过程需要使用到两个引擎渲染引擎和javascript引擎":["0.0"],"它们分别负责不同的事情":["0.0"],"javascript引擎":["0.0"],"负责执行javascript代码":["0.0"],"而":["0.0","7.5","37.0"],"渲染引擎":["0.0"],"负责渲染网页":["0.0"],"javascript引擎提供调用接口被渲染引擎使用":["0.0"],"渲染引擎使用javascript引擎来处理javascript代码并获取结果":["0.0"],"js引擎":["0.0"],"简单来说就是能够提供执行javascript代码的运行环境":["0.0"],"js的引擎包括":["0.0"],"google":["0.0","36.17"],"javascriptcore等":["0.0"],"的值为":["0.1"],"undefined":["0.1","5.8","6.3","7.11","7.20","7.26","47.0","48.0","50.0","51.0","52.0","56.0","57.0","60.0","61.0","62.0","172.0","174.0"],"然后声明函数表达式":["0.1"],"编译阶段结束":["0.1"],"开始执行阶段":["0.1"],"将":["0.1","38.2","91.0"],"赋值给":["0.1"],"立即执行":["0.1"],"欲将":["0.1"],"调用栈如下":["0.2"],"img":["0.2","0.7","1.2","2.6","9.0","20.8","22.4","30.8","38.1","38.4","38.6","38.7","40.2","40.6","152.0"],"src":["0.2","0.7","1.2","2.1","2.9","7.29","9.0","20.8","22.4","30.8","36.3","38.1","38.4","40.2","40.6","128.1","152.0"],"picture":["0.2","0.7","1.2","2.1","2.9","9.0","30.8","36.3","37.2","38.1","38.4","152.0"],"pic10":["0.2"],"png":["0.2","0.7","0.8","1.2","2.1","2.2","2.4","2.9","9.0","20.8","22.4","36.3","37.2","38.9","152.0"],"width":["0.2","0.7","1.2","2.1","2.2","2.4","2.7","2.9","20.8","22.4","36.3","37.2"],"且一直保存在内存中不会被销毁的":["0.3"],"直至":["0.3"],"if":["0.4","0.12","6.1","7.4","9.0","21.3","24.3","40.0","69.0","87.2","91.0","94.0","102.0","110.3","110.6","110.8","122.0","150.0","153.0","161.0","167.0","176.0","180.0"],"true":["0.4","5.1","9.2","95.0"],"不同的变量":["0.4"],"console":["0.4","0.12","1.8","2.8","4.12","5.1","5.13","6.1","7.25","8.2","8.4","8.7","8.14","9.2","26.1","30.14","33.1"],"log":["0.4","0.12","1.8","2.8","5.1","5.13","6.1","7.25","8.4","8.14","9.2","26.1","30.14","33.1"],"级作用域就是通过":["0.4"],"词法环境":["0.4"],"cn":["0.5"],"post":["0.5","7.23","30.13"],"6844904004007247880":["0.5"],"javascript":["0.5","2.6","35.2","36.2","36.11","36.15","37.4"],"闭包变量":["0.6"],"先存在":["0.6"],"中":["0.6","0.10","15.1","33.7","44.0","105.0"],"然后在预解析器阶段在将变量复制在":["0.6"],"空间中":["0.6"],"即便外部前函数执行结束之后":["0.6","0.10"],"也不会释放该变量":["0.6","0.10"],"的策略":["0.7"],"所以我们选择":["0.7"],"栈":["0.7","114.0"],"后进先出结构":["0.7"],"来管理函数调用关系":["0.7"],"函数执行过程中":["0.7"],"栈的变化如下":["0.7"],"pic4":["0.7"],"code4":["0.8"],"pic5":["0.8","37.4"],"如果遇到函数声明":["0.9"],"那么会":["0.9"],"函数的变量":["0.10"],"正确的处理方式应该是foo":["0.10"],"函数的执行上下文虽然被销毁了":["0.10"],"但是":["0.10","34.6"],"函数引用的":["0.10"],"函数中的变量却不能被销毁":["0.10"],"v8用":["0.10"],"预解析器":["0.10"],"来实现了":["0.10"],"当遇到了一个函数":["0.10"],"预解析器会对该函数做一次快速的预解析":["0.10"],"判断当前函数是不是存在一些语法上的错误":["0.10"],"检查函数内部是否引用了外部变量":["0.10"],"如果引用了外部的变量":["0.10"],"预解析器会将栈中的变量复制到":["0.10"],"堆":["0.10"],"在下次执行到该函数的时候":["0.10"],"直接使用堆中的引用":["0.10"],"什么是v8":["0.10"],"分词":["0.11"],"词法分析":["0.11"],"这个过程是将由字符组成的字符串分解为有意义的代码块":["0.11"],"解析":["0.11"],"相关的内容都会存放在栈上":["0.12"],"如":["0.12","7.10","38.10"],"引用到的对象的":["0.12"],"地址":["0.12","42.1"],"函数的执行状态":["0.12"],"this":["0.12","4.8","11.0","20.13","20.15","30.14","47.0","48.0","49.0","52.0","56.0","57.0","60.0","61.0","62.0","130.0","169.0","172.0","174.0"],"值等都存在在栈上":["0.12"],"当一个函数执行":["0.12"],"结束":["0.12"],"那么该函数的执行上下文便会被":["0.12"],"销毁":["0.12"],"掉":["0.12"],"关于栈溢出问题":["0.12"],"栈空间的最大的特点是空间连续":["0.12"],"因此栈空间的查找效率非常高":["0.12"],"但是通常内存中":["0.12"],"很难分配到一块很大的连续空间":["0.12"],"因此":["0.12"],"对栈空间的":["0.12"],"小做了限制":["0.12"],"如果函数调用层过深":["0.12"],"那么":["0.12","5.12"],"就有可能抛出栈溢出的误":["0.12"],"function":["0.12","4.5","4.6","4.8","5.6","5.7","6.2","20.6","22.1","30.14","49.0","56.0","57.0","62.0","67.0","73.0","76.0","77.0","83.0","86.0","89.0","91.0","94.0","98.0","99.0","100.0","107.0","108.0","109.0","110.2","110.3","110.6","110.8","111.0","113.0","114.0","124.0","126.0","130.0","136.0","143.0","144.0","154.0","155.0","162.0","174.0","176.0"],"factorial":["0.12"],"n":["0.12","72.0","78.0","100.0","101.0","111.0","181.0"],"return":["0.12","3.5","7.4","9.2","20.13","26.3","54.0","58.0","59.0","76.0","78.0","90.0","93.0","98.0","101.0","113.0","116.0","119.1","119.5","123.0","138.0","141.0","142.0","147.0","148.0","167.0","170.0","173.0","177.0","181.0"],"await的事件循环例题":["1.0"],"参考链接":["1.0","5.2","22.0","33.7","37.4","177.0"],"https":["1.0","5.2","36.1","166.0","177.0"],"article":["1.0"],"文件读写完成事件":["1.1"],"以及":["1.1"],"这样的定时器回调等等":["1.1"],"ps":["1.1"],"settomeout的输出顺序":["1.1"],"使得我们可以使用":["1.2"],"同步形式":["1.2"],"的代码来编写异步调用":["1.2"],"micro":["1.2"],"微任务是基于消息队列":["1.2"],"事件循环":["1.2"],"ui":["1.2"],"主线程还有堆栈而来的":["1.2"],"会照成io阻塞":["1.3"],"当事件循环准备进入下一个阶段":["1.3"],"去取宏任务":["1.3"],"可以认为同步任务队列是第一个task":["1.4"],"global":["1.5","5.7"],"打印结果":["1.5"],"才会继续执行下一个宏任务":["1.6"],"在微任务触发新的微任务":["1.6"],"会怎么样":["1.6"],"当执行微任务时遇到微任务":["1.6"],"会将新遇到的微任务放在当前微任务的末尾":["1.6"],"等微任务队列清空之后":["1.6"],"再执行下一个宏任务":["1.6"],"在微任务中循环地触发新的微任务呢":["1.6"],"catch":["1.7"],"捕获成功或者失败的状态执行相应代码的异步编程的方法":["1.7"],"js":["1.7","3.2","4.6","5.5","5.7","7.3","7.25","15.0","15.4","20.6","20.13","22.1","22.7","22.15","30.10","33.7","39.5"],"创造promise实例":["1.7"],"it":["1.8","9.2"],"value":["1.8","3.3","5.8","9.0","34.1","42.2","119.1","119.5"],"done":["1.8","9.2"],"false":["1.8","7.4","7.28","9.2","95.0","105.0","106.0"],"作为结果的函数":["1.9"],"await是基于promise实现的":["1.9"],"它不能用于普通的回调函数":["1.9"],"await与promise一样":["1.9"],"是非阻塞的":["1.9"],"await使得异步代码看起来像同步代码":["1.9"],"这正是它的魔力所在":["1.9"],"表示这是一个async函数":["1.9"],"而await只能在这个函数里面使用":["1.9"],"会将后面的语句可以看成是一个":["1.9"],"并往下执行":["1.10"],"遇见":["1.10"],"将其放入任务队列":["1.10"],"微任务":["1.10"],"当前这一行代码执行时":["1.10"],"fn函数会立即执行的":["1.10"],"打印出3":["1.10"],"遇见第二个settimeout":["1.10"],"下面的代码需要等待返回promise":["1.10"],"成功状态":["1.10"],"才会执行":["1.10"],"所以6是不会被打印的":["1.10"],"继续往下执行":["1.10"],"遇到for循环同步代码":["1.10"],"需要等150ms":["1.10"],"遇见第三个settimeout":["1.10"],"然后打印出10":["1.10"],"值得注意的是":["1.10"],"这个定时器":["1.10"],"推迟时间0毫秒实际上达不到的":["1.10"],"根据html5标准":["1.10"],"settimeout推迟执行的时间":["1.10"],"最少是4毫秒":["1.10"],"同步代码执行完毕":["1.10"],"此时没有微任务":["1.10"],"就去执行宏任务":["1.10"],"上面提到":["1.10"],"已经到点":["1.10"],"的settimeout先执行":["1.10"],"sweep":["2.0"],"整理":["2.0"],"compact":["2.0"],"gc":["2.1","2.4"],"pic1":["2.1","20.8","36.3"],"如果此时":["2.1"],"我将另外一个对象赋给了":["2.1"],"代码如下所示":["2.1"],"此时内存布局如下":["2.1"],"pic3":["2.2"],"新加入的对象都会存放到":["2.2"],"对象":["2.2","34.7"],"区域":["2.2"],"当":["2.2"],"快被写满时":["2.2"],"就需要执行一次垃圾清理操作":["2.2"],"进行垃圾回收的":["2.3"],"算法具体步骤如下":["2.3"],"标记阶段":["2.3"],"从一组根元素开始":["2.3"],"递归遍历这组根元素":["2.3"],"在这个遍历过程中":["2.3"],"能到达的元素称为活动对象":["2.3"],"没有到达的元素就可以判断为垃圾数据":["2.3"],"垃圾清除阶段":["2.3"],"pic9":["2.4"],"concurrent":["2.5"],"要实现增量执行":["2.5"],"需要满足两点要求":["2.5"],"垃圾回收可以被随时暂停和重启":["2.5"],"暂停时需要保存当时的扫描结果":["2.5"],"等下一波垃圾回收来了之后":["2.5"],"才能继续启动":["2.5"],"是指主线程在执行":["2.6"],"的过程中":["2.6"],"辅助线程能够在后台完成执行垃圾回收的操作":["2.6"],"并发标记的流程大致如下图所示":["2.6"],"同时采用了这三种策略":["2.7"],"首先主垃圾回收器主要使用":["2.7"],"并发标记":["2.7"],"在定时器完成工作的时候":["2.8"],"手动清除定时器":["2.8"],"cleartimeout":["2.8"],"clearinterval":["2.8"],"保证及时回收":["2.8"],"脱离":["2.8"],"dom":["2.8","38.9"],"的引用":["2.8"],"refa":["2.8"],"body":["2.8"],"removechild":["2.8"],"dom删除了":["2.8"],"但是还存在引用":["2.8"],"能console出整个div":["2.8"],"没有被回收":["2.8"],"保留了dom节点的":["2.8"],"引用":["2.8"],"apply区别":["3.0"],"call":["3.2","3.4","5.10","8.10","8.13"],"相同":["3.2"],"const":["3.2","4.6","9.0","22.9","24.2","24.3","33.7","71.0","75.0","76.0","77.0","97.0","98.0","99.0","108.0","126.0","136.0","137.0","154.0","155.0","156.0","162.0","167.0"],"array":["3.2","3.5","7.7","67.0","68.0","71.0","73.0","84.0","97.0","100.0","106.0","107.0","130.0","133.0","134.0"],"window":["3.3","16.2","34.7","155.0","156.0","159.0"],"参数可以传":["3.3"],"null":["3.3","7.2","7.4","7.15","7.18","7.26","10.7","22.5","22.18","24.4","45.0","47.0","50.0","51.0","52.0","53.0","54.0","58.0","63.0","138.0","169.0","170.0","171.0","173.0"],"当为":["3.3"],"的时候":["3.3"],"视为指向":["3.3"],"let":["3.3","10.8","33.2","65.0","67.0","71.0","73.0","86.0","89.0","91.0","97.0","100.0","106.0","107.0","108.0","111.0","113.0","114.0","119.2","120.1","124.0","131.0","137.0","143.0","144.0","151.0","155.0","156.0","157.0","159.0","180.0"],"args":["3.3"],"arguments":["3.3"],"slice":["3.3","70.0","119.4"],"arguments是一种类数组结构":["3.3"],"第一个元素是this":["3.3"],"后面的才是真正意义上的参数":["3.3"],"fn":["3.3","4.6"],"把函数绑定到目标对象上":["3.3"],"result":["3.3","136.0"],"delete":["3.3"],"删除该函数":["3.3"],"test":["3.3","7.25"],"foo":["3.3"],"bar":["3.3","5.10"],"name":["3.3","5.7","5.10","8.11","34.1"],"age":["3.3","4.12","8.10","8.13","40.5"],"black":["3.3"],"设置原型链":["3.4","3.5"],"将obj的":["3.4"],"proto":["3.4"],"成员指向了person构造函数对象的prototype成员对象":["3.4"],"构造函数链接到新对象":["3.5"],"object":["3.5","4.0","5.6","8.6","8.12","10.1","21.3"],"如果函数没有返回对象类型object":["3.5"],"包含functoin":["3.5"],"date":["3.5","7.7"],"regexg":["3.5"],"error":["3.5","9.0"],"那么new表达式中的函数调用将返回该对象引用":["3.5"],"可选链":["4.0"],"箭头函数":["4.0"],"新增对象":["4.0"],"全新的方法":["4.0"],"全新的功能":["4.0"],"没有变量提升":["4.1"],"str":["4.3"],"x":["4.5","4.6","7.21","41.1","173.0"],"y":["4.6"],"sayhello":["4.8"],"bb":["4.9"],"objb":["4.9"],"dd":["4.9"],"c":["4.9","161.0"],"nan":["4.10"],"nan返回":["4.10"],"返回false":["4.10"],"判断对象某个属性是否存在":["4.12"],"异步编程":["4.13"],"es6":["4.14","10.0"],"class写法":["4.14"],"peopel":["4.14"],"constructor":["4.14","5.1","8.4","10.8"],"say":["4.14"],"没有重复的值":["4.15"],"可以通过get":["4.16"],"防止全局对象中":["4.17"],"动态作用域":["5.0"],"new":["5.1","8.8","8.9","9.0","10.0","10.8","67.0","68.0","71.0","73.0","76.0","77.0","97.0","98.0","99.0","100.0","106.0","107.0","134.0","154.0","155.0"],"prototype":["5.1","167.0","181.0"],"也就是确定当前执行代码对变量的访问权限":["5.3"],"结果是":["5.4"],"如果是":["5.4"],"静态作用域":["5.4"],"结果是1":["5.4"],"原因":["5.4"],"执行":["5.4"],"函数":["5.4"],"先从":["5.4"],"函数内部查找是否有局部变量":["5.4"],"如果没有":["5.4"],"就根据":["5.4"],"其执行上下文栈如下":["5.5"],"第一段":["5.5"],"ecstack":["5.5"],"push":["5.5","127.0"],"checkscope":["5.5"],"functioncontext":["5.5"],"f":["5.5"],"由名称和对应值":["5.6"],"函数对象":["5.6"],"组成一个变量对象的属性被创建":["5.6"],"如果变量对象已经存在相同名称的属性":["5.6"],"也就是全局对象":["5.7"],"这样由多个执行上下文的变量对象构成的链表就叫做作用域链":["5.7"],"作用域链是基于调用栈的":["5.7"],"而不是基于函数定义的位置的":["5.7"],"例题":["5.7","21.4"],"var":["5.7","7.25","8.3","8.4","8.9","8.11","10.3","30.2","30.3","58.0","59.0","67.0","73.0","74.0","76.0","77.0","78.0","83.0","86.0","91.0","94.0","95.0","98.0","99.0","100.0","101.0","108.0","109.0","110.2","110.5","110.6","111.0","112.0","113.0","114.0","116.0","130.0","136.0","141.0","144.0","154.0","155.0","162.0","166.0","170.0","176.0"],"全局":["5.7"],"type":["5.7","7.13","7.25"],"lexical":["5.8"],"environment":["5.8"],"和":["5.8","15.7","23.6","31.0","36.17","40.3","40.6","42.9","69.0","81.0"],"record":["5.8"],"其中reference与this有着密切的关系":["5.8"],"reference由3部分组成":["5.8"],"base":["5.8","81.0","84.0","102.0"],"属性所在的对象或者就是":["5.8"],"environmentrecord":["5.8"],"它的值只可能是":["5.8"],"只能在函数内部使用":["5.9"],"阮一峰":["5.9"],"shiny":["5.10"],"显示绑定":["5.10"],"apply":["5.10","11.0","30.14"],"bind":["5.10"],"com":["5.11","30.10","34.1","36.17","166.0"],"既不是":["5.12"],"函数的":["5.12"],"局部变量":["5.12"],"也不是":["5.12"],"参数":["5.12"],"a":["5.12","7.2","7.25","30.6","83.0","109.0","137.0","153.0","154.0","157.0","159.0","167.0"],"就是自由变量":["5.12"],"函数访问的自由变量":["5.12"],"不就是构成了一个":["5.12"],"即便":["5.12"],"函数执行结束了":["5.12"],"引用传递":["5.13"],"count":["6.1","26.1"],"如何在这里直接跳到最外层":["6.1"],"then":["6.2"],"number":["6.3","46.0","59.0","72.0","75.0","78.0","90.0","101.0","113.0","116.0","123.0","144.0","147.0","163.0","167.0","173.0","177.0"],"string":["6.3","7.24","10.0","116.0"],"原始类型":["7.0"],"隐式类型转换":["7.0"],"数学运算符中的隐式类型转换":["7.0"],"减":["7.0"],"乘":["7.0"],"除":["7.0","22.5"],"加法":["7.0"],"逻辑语句中的类型转换":["7.0"],"单个变量":["7.0"],"比较运算符":["7.0"],"使用":["7.0"],"b":["7.1","7.7","83.0","109.0","137.0","153.0","167.0"],"没有声明":["7.1"],"但是还会显示":["7.1"],"10n":["7.1"],"bigint":["7.1"],"nul":["7.2"],"obj":["7.2","10.3","10.4"],"日期类型":["7.3"],"查找到尽头":["7.4"],"还没找到":["7.4"],"找到相同的原型对象":["7.4"],"一般会调用内置的":["7.5"],"toprimitive":["7.5"],"方法":["7.5","9.1","23.4"],"则返回这个原始值":["7.6"],"调用这个对象的":["7.6"],"tostring":["7.6"],"如果tostring":["7.6"],"方法返回的是一个原始值":["7.6"],"1515143895500":["7.7"],"除此之外返回的都为this":["7.7"],"即对象本身":["7.7"],"对象之间的相互转换":["7.8"],"1e":["7.9"],"数组":["7.9"],"空数组":["7.9"],"转为空字符串":["7.9"],"如果数组中的元素有null或者undefined":["7.9"],"同样当做":["7.9"],"数字":["7.10"],"如11转为":["7.10"],"如果字符串中包含有效的":["7.10"],"浮点":["7.10"],"格式":["7.10"],"则将其转换为对应的浮点数值":["7.10"],"如果valueof":["7.12"],"方法返回的是原始类型":["7.12"],"则直接返回这个原始类型":["7.12"],"implicit":["7.13"],"conversion":["7.13"],"然后执行":["7.15"],"引用类型":["7.16"],"将引用类型和number类型转换成":["7.16"],"后拼接":["7.16"],"当两侧不为":["7.16"],"或":["7.16","22.18","30.10"],"while":["7.17","22.1","120.2","127.0","140.0","143.0","156.0","161.0"],"只有":["7.18"],"如果是字符串":["7.19"],"拆箱成":["7.20"],"再参考规则3":["7.20"],"同上":["7.20"],"首先":["7.20","9.2","16.2"],"转成number类型":["7.21"],"按照规则5":["7.21"],"比较变成toprimitive":["7.21"],"按照上面规则进行原始值转换":["7.21"],"会先调用valueof函数":["7.21"],"返回this":["7.21"],"不是原始值":["7.21"],"继续调用tostring方法":["7.21"],"故结果为":["7.21"],"0比较":["7.21"],"等式左边x":["7.21"],"tonumber":["7.21"],"所以结果变为":["7.21"],"比较结束":["7.21"],"例题三":["7.21"],"对于一般情况":["7.22"],"只要值相等":["7.22"],"就返回true":["7.22"],"但":["7.22"],"还涉及一些":["7.22"],"类型转换":["7.22"],"它的转换规则如下":["7.22"],"6844903877175672845":["7.23"],"但是json":["7.26"],"在对象中遇到function":["7.26"],"symbol时会自动将其":["7.26"],"parseint":["7.27"],"双剑合璧":["8.0"],"动态原型模式":["8.0"],"寄生构造函数模式":["8.0"],"稳妥构造函数模式":["8.0"],"getname":["8.1","8.2","8.4","8.7","8.14"],"showfriends":["8.3"],"这里是关键":["8.8"],"创建parent实例":["8.8"],"并将该实例赋值给child":["8.8"],"测试":["8.9","8.11"],"child1":["8.9"],"wanwan":["8.9"],"继承属性":["8.10"],"第二次调用parent":["8.10"],"继承方法":["8.10"],"构建原型链":["8.10"],"第一次调用parent":["8.10"],"person":["8.11"],"nicholas":["8.11"],"friends":["8.11"],"shelby":["8.11"],"court":["8.11"],"clone":["8.12"],"create":["8.12"],"借用构造函数继承父类this什么的属性和方法到子类实例属性上":["8.13"],"支持传参和避免篡改":["8.13"],"child":["8.13","8.14","8.15"],"colors":["8.15"],"getcolors":["8.15"],"子类":["8.15"],"fulfilled":["9.0"],"失败":["9.0"],"rejected":["9.0"],"处理中":["9.0"],"pending":["9.0","24.3","24.4"],"promise有以下两个特点":["9.0"],"对象的状态不受外界影响":["9.0"],"只有异步操作的结果":["9.0"],"可以决定当前是哪一种状态":["9.0"],"任何其他操作都无法改变这个状态":["9.0"],"一旦状态改变":["9.0"],"就不会再变":["9.0"],"任何时候都可以得到这个结果":["9.0"],"promises":["9.0"],"例子":["9.0","20.0"],"mypromise":["9.0"],"resolve":["9.0","9.1","30.8","30.12"],"reject":["9.0","9.1"],"some":["9.0"],"code":["9.0","160.0"],"异步操作成功":["9.0"],"else":["9.0","122.0"],"或者中途遇到错误调用":["9.1"],"z":["9.2"],"分析":["9.2"],"函数调用和普通函数不同":["9.2"],"它会返回一个迭代器":["9.2"],"当执行第一次":["9.2"],"时":["9.2","35.2"],"传参会被忽略":["9.2"],"并且函数暂停在":["9.2"],"处":["9.2"],"所以返回":["9.2"],"symbol":["10.0"],"bingint":["10.0"],"其中前7中为":["10.0"],"基本":["10.0"],"原始":["10.0"],"实际上还是操作原对象":["10.1"],"遍历源对象的属性并赋给新对象的属性":["10.2"],"copy":["10.3"],"deepcopy":["10.4","10.6"],"assign是一种浅拷贝":["10.5"],"但是可以通过object":["10.5"],"类型这四种类型用typeof判断结果都是":["10.7"],"isobject":["10.7","21.3"],"target":["10.7","123.0","141.0"],"typeof":["10.7","10.8","21.3"],"的typeof都会被判断为":["10.7"],"deepclone":["10.7"],"map":["10.7","84.0","131.0","180.0"],"不难看出如果用户调用该函数的间隔小于wait的情况下":["11.0"],"上一次的时间还未到就被清除了":["11.0"],"并不会执行函数":["11.0"],"将多次执行变成每隔一段时间执行":["11.0"],"拖拽场景":["11.0"],"固定时间内只执行一次":["11.0"],"防止超高频次触发位置变动":["11.0"],"缩放场景":["11.0"],"监控浏览器resize":["11.0"],"动画场景":["11.0"],"避免短时间内多次触发动画引起性能问题":["11.0"],"手机":["12.0"],"15080345224":["12.0"],"邮箱":["12.0"],"qq":["12.0"],"工作经历":["12.0"],"07":["12.0"],"至今":["12.0"],"深圳腾讯":["12.0"],"并针对未执行的代码进行case补充以提高测试效率":["12.1"],"降低线上问题发生率":["12.1"],"另外还提供覆盖率报告生成":["12.1"],"对外接口以方便其它平台进行需求验收卡点等的能力扩充":["12.1"],"代码下发等多种方式来灵活的编辑":["12.2"],"定义数据":["12.2"],"简化数据编辑和结构理解":["12.2"],"主要技术":["12.2","12.3"],"使用公司内部框架":["12.2"],"投放操作":["12.3"],"策略管理":["12.3"],"投放数据查看等操作":["12.3"],"react":["12.3","15.7","21.3"],"服务端渲染如何处理路由":["15.0"],"next":["15.0","15.4","24.3","24.6","169.0","170.0","172.0","174.0"],"服务端渲染相关面试题":["15.0"],"asp":["15.1"],"jsp等":["15.1"],"并渲染成html片段":["15.1"],"接着服务器在组装这些html片段":["15.1"],"css":["15.2","30.4","37.4","39.5"],"样式表":["15.2"],"浏览器拿到":["15.2"],"html":["15.2","15.5","30.4","37.4","38.9"],"文件后开始加载脚本和样式表":["15.2"],"并且执行脚本":["15.2"],"给页面上的元素绑定事件":["15.3"],"让页面变得可交互":["15.3"],"当用户与浏览器页面进行交互":["15.3"],"如跳转到下一个页面时":["15.3"],"浏览器会执行":["15.3"],"等":["15.4","16.0","37.4"],"在前端框架中使用服务器端渲染插件或库":["15.4"],"nuxt":["15.4"],"reactdomserver":["15.5"],"location":["15.5"],"request":["15.5","33.7"],"url":["15.5","34.7","37.4","44.0"],"这里我们通过":["15.5"],"组件将当前请求的":["15.5"],"预取机制":["15.6"],"js在路由系统中提供预取机制":["15.6"],"可以在页面渲染前预先获取异步数据":["15.6"],"vue":["15.7","16.0"],"待补充":["15.8"],"我们需要做到以下二点":["16.0"],"改变":["16.0"],"且不让浏览器像服务器发送请求":["16.0"],"可以监听到":["16.0"],"的变化":["16.0","16.2"],"通常在前端路由中":["16.0"],"可以通过使用一些开源库来实现":["16.0"],"比如":["16.0","22.10","34.1"],"router":["16.0"],"它们都提供了统一而易于使用的":["16.0"],"并为每个":["16.1"],"组件指定对应的路径和组件":["16.1"],"当用户在浏览器地址栏中输入或点击链接访问某个路由时":["16.1"],"浏览器会自动将":["16.1"],"后面的部分作为路由路径":["16.1"],"然后通过":["16.1"],"路由匹配器找到对应的组件进行渲染":["16.1"],"用户在页面中点击链接跳转到新的路由时":["16.1"],"需要在链接中指定跳转的路径":["16.1"],"同时使用":["16.1"],"通过":["16.2"],"addeventlistener":["16.2"],"popstate":["16.2"],"callback":["16.2"],"监听":["16.2"],"当浏览器的前进或后退按钮被点击时":["16.2"],"会触发":["16.2"],"梳理这两篇文章":["17.0"],"axios是对xmlhttprequest":["19.2"],"也是获取资源的接口方式":["19.2"],"commit阶段":["20.0"],"总结":["20.0"],"heavy":["20.0","20.18","22.6"],"exclamation":["20.0","20.16","20.18","22.6"],"mark":["20.0","20.18","22.6"],"react16协调器":["20.0"],"hello":["20.1","29.2","30.4"],"world":["20.1"],"应用程序":["20.2"],"但由于以下两个瓶颈会制约应用的响应速度":["20.2"],"renderer":["20.3","20.18","20.19"],"渲染器":["20.3","20.19"],"负责将变化的组件渲染到页面上":["20.3"],"包括dom节点的增":["20.3"],"删":["20.3"],"高优任务优先进入reconciler":["20.4"],"pushpin":["20.4"],"polyfill":["20.5"],"这就是":["20.5","42.12"],"workloopconcurrent":["20.6"],"perform":["20.6"],"work":["20.6"],"until":["20.6"],"renderer根据reconciler为虚拟dom打的标记":["20.7"],"会被中断":["20.8"],"协调器优先处理":["20.8"],"pictures":["20.8","22.4"],"part1":["20.8"],"会在浏览器空闲时触发回调的功能":["20.9"],"还会执行其他操作":["20.9"],"fiber":["20.10","20.12","22.0","22.8"],"react16":["20.10"],"代数效应和generator":["20.11"],"从react15到react16":["20.11"],"协调器":["20.11"],"reconciler":["20.11"],"重构的一大目的是":["20.11"],"将老的同步更新的架构变为":["20.11"],"fiber节点":["20.12","21.1"],"实现":["20.12","25.0","26.0"],"被称为":["20.12"],"静态的数据结构":["20.12"],"指向父级fiber节点":["20.13"],"key属性":["20.14"],"key":["20.14","21.2","42.2","59.0"],"保存本次更新造成的状态改变相关信息":["20.15"],"pendingprops":["20.15","22.9"],"memoizedprops":["20.15"],"导致清除上一帧画面到绘制当前帧画面之间有较长间隙":["20.17"],"就会出现白屏":["20.17"],"为了解决这个问题":["20.17"],"的":["20.18","22.0","23.2","29.3","35.2","36.2","81.0","152.0","165.0","181.0"],"rootfiber":["20.18","23.6"],"间切换来完成current":["20.18"],"fiber树指向的切换":["20.18"],"即当":["20.18"],"构建完成交给":["20.18"],"渲染在页面上后":["20.18"],"应用根节点的":["20.18"],"指针指向":["20.18"],"架构体系":["20.19"],"oldfiber":["21.0"],"都没遍历完的情况":["21.0"],"处理移动的节点":["21.0"],"effecttag":["21.0","22.16"],"它表示":["21.0"],"render阶段结束后":["21.0"],"fiber代表该dom节点对应的":["21.1"],"如果元素由div变为p":["21.2"],"react会销毁div及其子孙节点":["21.2"],"并新建p及其子孙节点":["21.2"],"开发者可以通过":["21.2"],"prop":["21.2"],"来暗示哪些子元素在不同的渲染下能保持稳定":["21.2"],"object类型":["21.3"],"可能是":["21.3"],"key不同":["21.4"],"将该fiber标记为删除":["21.4"],"deletion":["21.4"],"判断如下jsx对象对应的dom元素是否可以复用":["21.4"],"jsx":["21.4","21.7"],"习题1":["21.4"],"更新前":["21.4"],"div":["21.4","30.4"],"ka":["21.4"],"song":["21.4"],"更新后":["21.4"],"p":["21.4","103.0","115.0"],"之后":["21.5","21.7","41.6"],"但是这里却不行":["21.6"],"虽然本次更新的jsx对象":["21.6"],"newchildren为数组形式":["21.6"],"但是和newchildren中每个组件进行比较的是current":["21.6"],"当第一轮遍历结束后":["21.7"],"会有两种结果":["21.7"],"由步骤3跳出的遍历":["21.7"],"此时":["21.7"],"没有遍历完":["21.7"],"也没有遍历完":["21.7"],"如下例":["21.7"],"之前":["21.7"],"li":["21.7"],"diff结束":["21.8"],"不进行第二次遍历":["21.8"],"没遍历完":["21.8"],"没用完":["21.9"],"不需要执行删除旧节点":["21.9"],"bcd":["21.9"],"不需要执行插入新节点":["21.9"],"将剩余oldfiber":["21.9"],"保存为map":["21.9"],"当前oldfiber":["21.9"],"当前newchildren":["21.9"],"继续遍历剩余newchildren":["21.9"],"在":["21.9","22.4"],"oldfiber中存在":["21.9"],"index":["21.9","42.2"],"之前节点为":["21.9"],"所以c":["21.9"],"比较":["21.9"],"如果":["21.9"],"并将":["21.9"],"该可复用节点之前插入的位置索引小于这次更新需要插入的位置索引":["21.9"],"代表该节点需要向右移动":["21.9"],"确定更新细节":["22.0"],"在render阶段":["22.0"],"react将":["22.0"],"更新":["22.0"],"应用于通过":["22.0"],"setstate或render":["22.0"],"方法触发的组件":["22.0"],"并确定需要在用户屏幕上做哪些更新":["22.0"],"哪些节点需要插入":["22.0"],"更新或删除":["22.0"],"哪些组件需要调用其生命周期方法":["22.0"],"最终的这些更新信息被保存在一个叫":["22.0"],"list":["22.0"],"节点树上":["22.0"],"当然":["22.0","165.0"],"方法的调用":["22.1"],"这取决于本次更新是同步更新还是异步更新":["22.1"],"performsyncworkonroot会调用该方法":["22.1"],"workloopsync":["22.1"],"开始向下":["22.2"],"深度":["22.2"],"优先遍历":["22.2"],"当某个fiber节点执行完completework":["22.3"],"如果其存在兄弟fiber节点":["22.3"],"即fiber":["22.3"],"sibling":["22.3"],"reactrender":["22.4"],"fiberrootnode":["22.5","23.6"],"以外":["22.5"],"会根据":["22.5"],"组件类型":["22.5"],"类组件":["22.5"],"函数组件":["22.5"],"不同":["22.5","35.3"],"进入不同类型fiber的创建逻辑":["22.5"],"根据不同的tag":["22.5"],"他会将当前组件与该组件在上次更新时对应的fiber节点比较":["22.6"],"也就diff算法":["22.6"],"上":["22.7","23.4"],"dom需要插入到页面中":["22.7"],"根据":["22.8"],"tag":["22.8"],"renderlanes":["22.9"],"lanes":["22.9"],"newprops":["22.9"],"dom节点":["22.10"],"所以不需要生成dom节点":["22.10"],"主要工作是":["22.10"],"updatehostcomponent":["22.10"],"调用处理":["22.10"],"props":["22.10","24.0"],"onclick":["22.10","24.1"],"onchange等回调函数的注册":["22.10"],"一次fiber树寻找effecttag":["22.11"],"null的fiber节点么":["22.11"],"这显然是很低效的":["22.11"],"为了":["22.11"],"高效":["22.11"],"的找到有effecttag的节点":["22.11"],"firsteffect":["22.12"],"上保存了一条":["22.12"],"需要执行副作用":["22.12"],"的fiber节点的单向链表effectlist":["22.12"],"这些fiber节点的":["22.12"],"updatequeue":["22.12"],"中保存了变化的props":["22.12"],"一些":["22.12"],"删除后的":["22.13"],"autofocus":["22.13"],"blur逻辑":["22.13"],"调用":["22.13","22.18"],"getsnapshotbeforeupdate":["22.13"],"生命周期钩子":["22.13"],"调用不同的处理函数":["22.14"],"处理fiber":["22.14"],"对每个":["22.14"],"该方法所做的工作分为三步":["22.15"],"获取父级dom节点":["22.15"],"其中finishedwork为传入的fiber节点":["22.15"],"commitdeletion":["22.17"],"该方法会执行如下操作":["22.17"],"他会通过":["22.18"],"current":["22.18","23.5"],"区分是":["22.18"],"mount":["22.18"],"还是":["22.18","33.4"],"update":["22.18","24.2","24.3"],"componentdidmount":["22.18"],"usestate":["23.0"],"v":["23.0"],"创建update对象":["23.0"],"接下来三节详解":["23.0"],"是react响应机制的关键":["23.0"],"从fiber到root":["23.0"],"markupdatelanefromfibertoroot":["23.0"],"即从触发状态更新的fiber一直向上遍历到rootfiber":["23.0"],"并返回rootfiber":["23.0"],"ensurerootisscheduled":["23.0"],"即通知scheduler调度器根据更新的优先级":["23.0"],"决定以同步还是异步的方式调度本次更新":["23.0"],"render阶段":["23.0","23.2"],"performsyncworkonroot":["23.0"],"lane":["23.1"],"优先级相关字段":["23.1"],"suspenseconfig":["23.1"],"suspense相关":["23.1"],"暂不关注":["23.1"],"树":["23.2","38.9"],"代表正在":["23.2"],"workinprogress":["23.2","23.5"],"类似fiber节点组成fiber树":["23.2"],"fiber节点上的":["23.2"],"memoizedstate":["23.3"],"本次更新前该fiber节点的state":["23.3"],"update基于该state计算更新后的state":["23.3"],"firstbaseupdate":["23.3"],"插入到":["23.4"],"队列":["23.4"],"按顺序插入u3和u4之后的":["23.4"],"与":["23.5"],"abcd":["23.6"],"通过以上例子我们可以发现":["23.6"],"react保证最终的状态一定和用户触发的交互一致":["23.6"],"但是中间过程状态可能由于设备不同而不同":["23.6"],"reactdom":["23.6"],"render":["23.6","24.0"],"创建update":["23.6"],"从双缓存机制一节我们知道":["23.6"],"首次执行":["23.6"],"会创建":["23.6"],"其中":["23.6","29.1"],"跨组件复用":["24.0"],"其实":["24.0"],"hoc":["24.0"],"也是为了复用":["24.0"],"相比于它们":["24.0"],"hooks":["24.0"],"环状单向链表操作":["24.3","24.5"],"保存update的queue":["24.4"],"即上文介绍的queue":["24.4"],"queue":["24.4"],"模拟react开始调度更新":["24.5"],"现在我们来实现他":["24.5"],"我们用":["24.5"],"以后再触发的更新为update":["24.6"],"mount时为该usestate生成hook":["24.6"],"保存当前hook对应update的quene":["24.6"],"保存hook对应的state":["24.6"],"与下一个hook连接形成单向无环链表":["24.6"],"将hook插入fiber":["24.6"],"memoizedstate链表末尾":["24.6"],"workinprogresshook":["24.6"],"移动workinprogresshook指针":["24.6"],"时间切片":["25.0"],"就能根据宿主环境性能":["25.0"],"为每个工作单元分配一个可运行时间":["25.0"],"于是":["25.0"],"scheduler":["25.0"],"调度器":["25.0"],"产生了":["25.0"],"lane模型":["25.0"],"获取全局数据":["26.0"],"param":["26.1","45.0","53.0","54.0","58.0","59.0","63.0","72.0","75.0","78.0","90.0","101.0","116.0","138.0","167.0","170.0","171.0","173.0"],"sub":["26.1"],"reset":["26.1"],"what":["26.1"],"parentcomponent":["26.1"],"定义全局变量count":["26.1"],"以及负责抛出修改事件的dispatch":["26.1"],"dispatch":["26.1"],"请注意":["26.1"],"setcount":["26.2"],"decrement":["26.2"],"increment":["26.2","150.0"],"initialstate":["26.3"],"响应式是如何实现的":["27.0"],"h1":["29.2"],"h2":["29.2"],"good":["29.2"],"to":["29.2"],"vnode":["29.3"],"知道需要更新哪些元素":["29.3"],"执行具体宿主":["29.3"],"如浏览器":["29.3"],"vue响应式":["29.5"],"有体积优势":["29.6"],"多平台渲染能力":["29.6"],"可以多平台渲染能力":["29.6"],"但反过来":["29.6"],"不一定需要":["29.6"],"文件转换成":["29.7"],"编译优化":["29.7"],"找出模块之间的依赖关系":["30.1"],"按照一定的规则把这些模块组织合并为一个javascript文件":["30.1"],"为什么需要打包":["30.1"],"export":["30.2"],"jack":["30.2"],"在html文件中引入a":["30.2"],"js文件":["30.2"],"这时用浏览器打开index":["30.2"],"path":["30.3","36.17"],"require":["30.3"],"module":["30.3"],"css文件":["30.4"],"内容如下":["30.4"],"margin":["30.4"],"30px":["30.4"],"color":["30.4"],"blue":["30.4"],"然后在a":["30.4"],"js中引入了c":["30.4"],"在html文件中加入一个div标签":["30.4"],"class":["30.4"],"配置文件暂时保持不变":["30.4"],"import":["30.5","30.6"],"from":["30.5"],"或import":["30.5"],"导入模块":["30.5"],"runtime":["30.6"],"等效于":["30.6"],"它有几个重要的filename":["30.7"],"output":["30.8"],"dirname":["30.8","30.12"],"mode":["30.8"],"none":["30.8","36.17","40.3"],"我们执行npx":["30.8"],"webpack打包":["30.8"],"控制台显示如下":["30.8"],"webpack":["30.8","30.9"],"我们在开发时":["30.9"],"一般会用":["30.9"],"publicpath以":["30.10"],"等开头":["30.10"],"表示要访问的资源以当前页面url作为基":["30.10"],"础路径":["30.10"],"资源的访问地址是https":["30.10"],"www":["30.10"],"apple":["30.10"],"ipad":["30.10"],"它接受一个资源模块":["30.11"],"然后将其处理成webpack核心能使用的形式":["30.11"],"filename":["30.12"],"bundle":["30.12"],"rules":["30.12"],"处理或最后":["30.13"],"处理":["30.13"],"resource和issuer":["30.13"],"在webpack中被加载的模块我们称之为resource":["30.13"],"而实施加载的模块我们称之为issuer":["30.13"],"complition":["30.14"],"对象的内部数据":["30.14"],"如果异步编译插件的话":["30.14"],"数据处理完成后执行":["30.14"],"回调":["30.14"],"例如":["30.14","69.0"],"文件":["30.14"],"独立模块":["30.14"],"模块对外暴露的":["30.14"],"pluginopions":["30.14"],"pluginoptions":["30.14"],"原型定义一个":["30.14"],"并注入了":["30.14"],"挂载":["30.14"],"这里挂载的是":["30.14"],"emit":["30.14"],"事件":["30.14"],"内部进行自定义的编译操作":["30.14"],"操作":["30.14"],"这样嵌套是会超过":["31.0"],"路径的长度限制的":["31.0"],"npm3":["31.0"],"是通过铺平的扁平化的方式来管理":["31.0"],"解决了嵌套方式的部分问题":["31.0"],"同时还实现了":["31.0"],"lock":["31.0"],"来锁定依赖版本的功能":["31.0"],"但是引入了":["31.0"],"可以定位性能瓶颈":["32.0"],"onreadystatechange":["33.0"],"readystate":["33.0","33.6"],"status":["33.0","33.6"],"使用过程中的":["33.0"],"坑":["33.0"],"ajax":["33.0"],"axios":["33.0","33.7"],"case":["33.1","81.0","84.0","102.0"],"请求未初始化":["33.1"],"break":["33.1"],"opened":["33.1"],"xhr":["33.2"],"xmlhttprequest":["33.3"],"的回调函数主要有下面几种":["33.3"],"ontimeout":["33.3"],"是":["33.4","40.4"],"get":["33.4","69.0"],"然后网络进程负责资源的下载":["33.5"],"等网络进程接收到数据之后":["33.5"],"就会利用":["33.5"],"核心技术是xmlhttprequest":["33.7"],"库":["33.7"],"它是基于promise的http库":["33.7"],"可运行在":["33.7"],"浏览器端和node":["33.7"],"他有很多优秀的特性":["33.7"],"例如拦截请求和响应":["33.7"],"取消请求":["33.7"],"转换json":["33.7"],"客户端防御csrf等":["33.7"],"请求拦截":["33.7"],"interceptors":["33.7"],"use":["33.7"],"config":["33.7"],"每次发送请求之前判断vuex中是否存在token":["33.7"],"如果存在":["33.7"],"则统一在http请求的header都加上token":["33.7"],"这样后台根据token判断你的登录情况":["33.7"],"即使本地存在token":["33.7"],"也有可能token是过期的":["33.7"],"所以在响应拦截器中要对返回状态进行判断":["33.7"],"token":["33.7"],"可以对":["33.8"],"请求和响应进行拦截":["33.8"],"可以在发送请求或收到响应时对其进行处理":["33.8"],"则没有这个功能":["33.8"],"需要手动实现":["33.8"],"支持":["33.8"],"服务端请求":["33.8"],"浏览器端请求":["33.8"],"两种环境下使用":["33.8"],"同时也支持将请求":["33.8"],"响应和错误信息进行统一配置和管理":["33.8"],"可以提高代码的可维护性":["33.8"],"由":["34.0","43.0"],"rfc":["34.0"],"规范定义":["34.0"],"通常是由":["34.0"],"服务器使用响应":["34.0"],"set":["34.0","154.0","155.0"],"header":["34.0","44.0"],"设置的":["34.0"],"然后浏览器使用":["34.0"],"对此网站的所有页面可见":["34.1"],"domain":["34.1","36.17"],"控制了可访问":["34.1"],"的域":["34.1"],"document":["34.1","36.11","38.2"],"baidu":["34.1"],"所有":["34.1"],"com的主机都可以访问该cookie":["34.1"],"expires":["34.1"],"max":["34.1","40.5","74.0","82.0","88.0","90.0"],"setcookie":["34.2"],"然后浏览器再将请求头发送给服务器":["34.3"],"服务器在收到":["34.3"],"请求头数据之后":["34.3"],"就会查找请求头里面的":["34.3"],"字段信息":["34.3"],"当查找到包含":["34.3"],"的信息时":["34.3"],"服务器查询后台":["34.3"],"并判断该用户是":["34.3"],"已登录状态":["34.3"],"然后生成含有该用户信息的页面数据":["34.3"],"并把生成的数据发送给浏览器":["34.3"],"浏览器在接收到该含有当前用户的页面数据后":["34.3"],"同源":["34.5","36.1"],"当前浏览器标签页":["34.6"],"具有相同页面的另一个标签页中将会有不同的存储":["34.6"],"如果是删除数据":["34.7"],"发生数据更新的文档的":["34.7"],"storagearea":["34.7"],"发生数据更新的":["34.7"],"该事件会在所有可访问到存储对象的":["34.7"],"当用户打开某个web应用时":["34.8"],"通过set":["34.9"],"cookie设置且cookie的内容自动在请求的时候被传递到服务器":["34.9"],"最简单的token组成":["34.10"],"uid":["34.10"],"同一个进程":["35.0"],"中执行的":["35.0"],"单进程架构":["35.0"],"不仅会导致浏览器运行的不稳定":["35.0"],"还容易由于浏览器暴露出漏洞未及时修复而受到黑客攻击":["35.0"],"这种攻击是可以入侵到浏览器进程内部的":["35.0"],"可以读取和修改浏览器进程内部的任意内容":["35.0"],"还可以穿透浏览器":["35.0"],"在用户的操作系统上悄悄地安装恶意软件":["35.0"],"监听用户键盘输入信息以及读取用户硬盘上的文件内容":["35.0"],"现代浏览器的设计目标是安全":["35.0"],"渲染进程":["35.1"],"中存在系统级别的漏洞":["35.1"],"那么以上操作就有可能让恶意的站点获取到渲染进程的控制权限":["35.1"],"进而又获取操作系统的控制权限":["35.1"],"cookie":["35.2","36.11"],"数据的读写":["35.2"],"通常浏览器内核会维护一个存放所有":["35.2"],"数据库":["35.2"],"然后当渲染进程通过":["35.2"],"来读取":["35.2"],"渲染进程会通过":["35.2"],"原因就是一个标签页中可能包含了多个":["35.3"],"iframe":["35.3"],"而这些":["35.3"],"又有可能来自于":["35.3"],"一类的攻击":["35.4"],"安全沙箱的目的是隔离渲染进程和操作系统":["35.4"],"实际开发中如何解决跨域":["36.0"],"网站攻击及如何防范":["36.0"],"xss攻击":["36.0"],"什么是xss攻击":["36.0"],"存储型xss攻击":["36.0"],"反射型":["36.0"],"xss":["36.0"],"攻击":["36.0","41.4"],"基于":["36.0"],"比如下面两个url就是同源的":["36.1"],"不同源":["36.2"],"脚本对当前":["36.2"],"对象读和写的操作":["36.2"],"同源页面间可以互相操作对方的dom":["36.2"],"safe":["36.3","46.0","163.0"],"access":["36.3","36.4"],"control":["36.3","36.4"],"allow":["36.3","36.4"],"credentials":["36.3"],"该字段可选":["36.3"],"它的值是一个布尔值":["36.3"],"表示是否允许发送cookie":["36.3"],"默认情况下":["36.3"],"cookie不包括在cors请求之中":["36.3"],"服务器解析程序收到浏览器":["36.4"],"跨域请求":["36.4"],"后":["36.4"],"如果服务器认为这个请求可以接受":["36.4"],"就在":["36.4"],"headers":["36.5"],"可选":["36.5"],"自定义的头部信息":["36.5"],"多个头部以逗号分隔":["36.5"],"发送这个请求后":["36.5"],"服务器可以决定是否允许这种类型的请求":["36.5"],"服务器通过在响应中发送如下头部与浏览器进行沟通":["36.5"],"通信没有差别":["36.6"],"代码完全一样":["36.6"],"容易维护":["36.6"],"删除服务器中的资源":["36.7"],"预检请求可以防止该情况发生":["36.7"],"页面":["36.8"],"http":["36.8","36.9"],"工程化":["36.9"],"webpack相关面试题":["36.9"],"章节":["36.9"],"核心":["36.9"],"利用":["36.9"],"middleware":["36.9"],"这个http代理中间件":["36.9"],"相当于是代理服务器":["36.9"],"实现请求转发给其他服务器":["36.9"],"因为服务器和服务器之间不存在跨域问题":["36.9"],"比如新商机项目":["36.9"],"vite":["36.9"],"json":["36.9"],"server":["36.9"],"utm":["36.10"],"term":["36.10","36.16"],"zeusqyfjn":["36.10","36.16"],"窃取":["36.11"],"信息":["36.11"],"恶意":["36.11"],"可以通过":["36.11"],"获取":["36.11"],"下次请求目标页面时不用再提交xss代码":["36.12"],"当目标用户访问该页面获取数据时":["36.12"],"攻击步骤":["36.13"],"攻击者构造出":["36.13"],"特殊的":["36.13"],"其中包含恶意代码":["36.13"],"比如通过网络劫持在页面传输过程中":["36.14"],"修改":["36.14"],"我们可以通过阻止恶意":["36.15"],"脚本的注入和恶意消息的发送来实现":["36.15"],"对脚本进行过滤或转码":["36.15"],"充分利用":["36.15"],"实施严格的":["36.15"],"可以有效地防范":["36.15"],"具体来讲":["36.15"],"有如下几个功能":["36.15"],"source":["36.16"],"app":["36.16"],"gmt":["36.17"],"选项通常有":["36.17"],"strict":["36.17"],"lax":["36.17"],"三个值":["36.17"],"因为":["37.0","42.1"],"chrome":["37.0"],"微软的":["37.0"],"edge":["37.0"],"以及国内的大部分主流浏览器":["37.0"],"都是基于":["37.0","42.1"],"chromium":["37.0"],"二次开发而来":["37.0"],"一个":["37.1"],"就是一个程序的":["37.1"],"运行实例":["37.1"],"详细解释就是":["37.1"],"other":["37.2","38.1","38.4"],"pic2":["37.2"],"这会导致浏览器有":["37.2"],"gpu":["37.3"],"进程":["37.3"],"网络":["37.3","37.4"],"network":["37.3"],"多个":["37.3"],"和多个":["37.3"],"主要负责":["37.3"],"socket":["37.4"],"streams":["37.4"],"从输入":["37.4"],"到页面展示":["37.4"],"这中间发生了什么":["37.4"],"是一道经典的面试题":["37.4"],"能比较全面地考察应聘者知识的掌握程度":["37.4"],"其中涉及到了":["37.4"],"操作系统":["37.4"],"web":["37.4"],"等一系列的知识":["37.4"],"整个过程需要各个进程之间的配合":["37.4"],"浏览器进程主要负责用户交互":["37.4"],"子进程管理和文件储存等功能":["37.4"],"网络进程是面向渲染进程和浏览器进程等提供网络下载功能":["37.4"],"渲染进程的主要职责是把从网络下载的":["37.4"],"图片等资源解析为可以显示和交互的页面":["37.4"],"重绘":["38.0"],"更新元素的绘制属":["38.0"],"合成":["38.0"],"如何减少重排和重绘":["38.0"],"参考链接1":["38.0"],"参考链接2":["38.0"],"通常":["38.0"],"样式":["38.2"],"所以当渲染引擎接收到":["38.2"],"文本时":["38.2"],"会执行一个转换操作":["38.2"],"文本转换为浏览器可以理解的结构":["38.2"],"stylesheets":["38.2"],"可在浏览器控制台通过":["38.2"],"树中元素的样式":["38.3"],"只包含可见元素布局树":["38.4"],"就要计算布局树节点的坐标位置了":["38.5"],"轴排序等":["38.6"],"为了更加方便地实现这些效果":["38.6"],"渲染引擎还需要为特定的节点生成专用的图层":["38.6"],"并生成一棵对应的":["38.6"],"图层树":["38.6"],"layertree":["38.6"],"如下图所示":["38.7"],"一屏显示不完":["38.8"],"大部分不在视口内":["38.8"],"划":["38.8"],"分为图块":["38.8"],"tile":["38.8"],"summer":["38.9"],"渲染进程将":["38.9"],"内容转换为能够读懂的":["38.9"],"宽":["38.10"],"元素的":["38.11"],"颜色":["38.11"],"比如使用了":["38.12"],"table":["38.13"],"布局":["38.13"],"批量dom":["38.13"],"过程":["39.0"],"cdn缓存基本原理":["39.0"],"解决因分布":["39.1"],"带宽":["39.1"],"负载均衡设备ip地址":["39.2"],"返回用户":["39.2"],"用户向cdn的全局负载均衡设备发起url访问请求":["39.2"],"cdn全局负载均衡设备根据用户ip地址":["39.2"],"以及用户请求的内容url":["39.2"],"选择一台用户所属区域的":["39.2"],"区域负载均衡设备":["39.2"],"的核心点有两个":["39.3"],"一个是":["39.3"],"http标准协议":["39.4"],"通过http响应头中的":["39.4"],"就是像":["39.5"],"dns就是从浏览器输入域名后":["39.6"],"浏览器与dns服务器交互":["39.6"],"最终浏览器向dns解析返回的ip地址建立tcp连接的过程":["39.6"],"last":["40.0","134.0"],"modified":["40.0","40.6"],"since":["40.0"],"会随着进程的释放而释放":["40.1"],"且内存空间有限":["40.1"],"当我们访问过页面以后":["40.1"],"再次刷新页面":["40.1"],"可以发现很多数据都来自于内存缓存":["40.1"],"内存缓存在缓存资源时并不关心返回资源的http缓存头cache":["40.1"],"control是什么值":["40.1"],"同时资源的匹配也并非仅仅是对url做匹配":["40.1"],"etag":["40.3"],"match":["40.3"],"协商缓存由服务器决定是否使用缓存":["40.3"],"若协商缓存失效":["40.3"],"那么代表该请求的缓存失效":["40.3"],"缺点":["40.4","40.8"],"在发布缓存副本之前":["40.5"],"强制要求缓存把请求提交给原始服务器进行验证":["40.5"],"协商缓存验证":["40.5"],"设置缓存存储的最大周期":["40.5"],"超过这个时间缓存被认为过期":["40.5"],"单位秒":["40.5"],"store":["40.5"],"缓存不应该存储有关客户端请求或服务器响应的任何内容":["40.5"],"即使不使用任何缓存":["40.5"],"not":["40.6","142.0","148.0"],"浏览器将这个值和内容一起记录在缓存数据库中":["40.7"],"下一次请求相同的资源时":["40.7"],"浏览器会从自己的缓存中找出":["40.7"],"不确定是否过期的":["40.7"],"缓存":["40.7"],"因此在请求头中将上次的last":["40.7"],"modified的值写入到请求头的":["40.7"],"浏览器则读取本地缓存":["40.8"],"否则返回":["40.8","95.0"],"和更新后的资源及新的etag":["40.8"],"优点":["40.8"],"可以更加精确的判断资源是否被修改":["40.8"],"可以识别一秒内多次修改的情况":["40.8"],"不存在版本问题":["40.8"],"每次请求都会去服务器进行校验":["40.8"],"计算etag值需要性能损耗":["40.8"],"分布式服务器存储情况下下":["40.8"],"计算etag的算法如果不一致":["40.8"],"计算机网络体系结构分为3种":["41.0"],"osi体系结构":["41.0"],"七层":["41.0"],"tcp":["41.0","41.6","42.1","44.0"],"ip体系结构":["41.0"],"四层":["41.0"],"isn":["41.1"],"即图中的":["41.1"],"表示本报文段所发送的数据的第一个字节的序号":["41.1"],"此时客户端处于":["41.1","41.6"],"send":["41.1"],"状态":["41.1"],"sent":["41.1"],"在发送连接请求后等待匹配的连接请求":["41.1"],"第二次握手":["41.1","41.2"],"服务器收到客户端的":["41.1"],"客户端什么都不能确认":["41.2"],"服务器确认了对方发送正常":["41.2"],"自己接收正常":["41.2"],"服务器响应":["41.2"],"那他每次都在第一次握手中的":["41.3"],"syn":["41.3"],"报文中放入大量的数据":["41.3"],"其攻击的原理很简单":["41.4"],"就是用客户端在短时间内":["41.4"],"伪造大量不存在的":["41.4"],"如果未收到客户端响应的确认包":["41.5"],"也即第三次握手丢失":["41.5"],"那么服务器就会进行首次重传":["41.5"],"连接":["41.6"],"wait1":["41.6"],"等待服务端的确认":["41.6"],"wait":["41.6"],"等待远程tcp的连接中断请求":["41.6"],"或先前的连接中断请求的确认":["41.6"],"第二次挥手":["41.6"],"服务端收到":["41.6"],"会发送":["41.6"],"所以":["41.7","88.0"],"最保险的做法是等服务器发来的数据包都死翘翘再启动新的应用":["41.7"],"那":["41.7"],"照这样说一个":["41.7"],"msl":["41.7"],"浏览器首先查看查找本地":["41.8"],"hosts文件":["41.8"],"将一些常用的网址域名与其对应的ip地址建立一个关联数据库":["41.8"],"如果有则返回":["41.8"],"否则进行下一步":["41.8"],"浏览器查看":["41.8"],"本地缓存":["41.8"],"是否存在本条目的缓存":["41.8"],"如果有则直接返回":["41.8"],"并发连接":["42.0"],"域名分片":["42.0"],"提供虚拟主机的支持":["42.0"],"host请求头":["42.0"],"支持响应分块":["42.0"],"断点续传":["42.0"],"以及其他http":["42.0"],"的一个完整的请求流程如下":["42.1"],"可参考下图":["42.1"],"协议的":["42.1","42.13"],"所以客户端先要根据":["42.1"],"ip":["42.1"],"dns解析":["42.1"],"html的简单请求命令":["42.2"],"并没有其他途径告诉服务器更多的信息":["42.2"],"如文件编码":["42.2"],"文件类型等":["42.2"],"同样":["42.2"],"服务器是直接返回数据给浏览器的":["42.2"],"也没有其他途径告诉浏览器更多的关于服务器返回的文件信息":["42.2"],"所以在http":["42.2"],"引入了":["42.2"],"请求头和响应头":["42.2"],"它们都是以为":["42.2"],"形式保存的":["42.2"],"连接会一直保持":["42.4"],"目前浏览器中对于同一个域名":["42.4"],"默认允许同时建立":["42.4"],"个":["42.4"],"以降低通信延迟":["42.5"],"试图通过管线化的技术来解决":["42.5"],"请求3":["42.6"],"响应3":["42.6"],"管线化的连接消息传递是类似于":["42.6"],"的请求头中增加了":["42.7"],"transfer":["42.8"],"机制":["42.8"],"content":["42.9"],"用于":["42.9"],"请求头":["42.9"],"指定本次请求上传或下载的第一个节点的位置和最后一个节点的位置":["42.9"],"响应头":["42.9"],"指定整个实体中的一部分的插入位置":["42.9"],"他也指示了整个实体的长度":["42.9"],"cookie安全机制":["42.10"],"引入":["42.10"],"内容协商机制":["42.10"],"那么这些连接会竞争固定的带宽":["42.11"],"0使用了":["42.12"],"多路复用机制":["42.12"],"通信双方都可以给对方发送二进制帧":["42.12"],"这种二进制帧的双向传输的序列":["42.12"],"也叫做流":["42.12"],"stream":["42.12"],"用流来在一个":["42.12"],"连接上来进行多个数据帧的通信":["42.12"],"哈夫曼编码":["42.13"],"哈夫曼编码的原理就是先将所有出现的字符建立一张索引表":["42.13"],"然后让":["42.13"],"出现次数多的字符对应的索引尽可能短":["42.13"],"传输的时候也是传输这样的索引序列":["42.13"],"可以达到非常高的压缩率":["42.13"],"年就开始得到了大规模的应用":["42.13"],"虽然":["42.13"],"解决了应用层面的队头阻塞问题":["42.13"],"不过和":["42.13"],"一样":["42.13"],"依然是基于":["42.13"],"它在":["43.0"],"osi":["43.0"],"七层网络模型中处于第五层":["43.0"],"年被":["43.0"],"ietf":["43.0"],"互联网工程组":["43.0"],"更名为":["43.0"],"即传输安全层":["43.0"],"直到现在":["43.0"],"一共出现过三个版本":["43.0"],"目前最广泛使用的是":["43.0"],"用于两个通信应用程序之间提供保密性和数据完整性":["43.0"],"记录协议":["43.0"],"握手协议":["43.0"],"警告协议":["43.0"],"一般放在":["44.0"],"因此不安全":["44.0"],"放在请求体中":["44.0"],"更适合传输敏感信息":["44.0"],"本质区别":["44.0"],"请求会把请求报文一次性发出去":["44.0"],"会分为两个":["44.0"],"数据包":["44.0"],"首先发":["44.0"],"部分":["44.0"],"maxheapify":["46.0"],"isheap":["46.0"],"min":["46.0","163.0"],"integer":["46.0","163.0"],"r":["46.0","119.3","135.0","163.0"],"right":["47.0","48.0","49.0","52.0","56.0","57.0","60.0","61.0","62.0","70.0","119.4","120.2","124.0","140.0","143.0","156.0","157.0","164.0"],"left":["48.0","49.0","56.0","57.0","60.0","61.0","62.0","70.0","119.4","120.2","124.0","140.0","143.0","155.0","156.0","157.0","159.0"],"tree":["49.0"],"node":["49.0"],"treenode":["49.0","56.0","57.0","62.0"],"val":["49.0","56.0","57.0","62.0","147.0","150.0","151.0","167.0","169.0","172.0","174.0"],"root":["54.0","58.0","59.0","63.0","90.0"],"void":["54.0","142.0","148.0"],"遍历的思想":["58.0"],"deletenode":["59.0"],"partition":["64.0"],"归并排序代码框架如下":["64.0"],"先对左右子数组排序":["64.0"],"然后合并":["64.0"],"类似合并有序链表的逻辑":["64.0"],"就是二叉树的后序遍历框架":["64.0"],"定义":["64.0","73.0","85.0","132.0","158.0"],"排序":["64.0","83.0","109.0"],"m":["65.0","100.0"],"length":["65.0","67.0","71.0","77.0","89.0","91.0","94.0","97.0","99.0","100.0","106.0","111.0","119.2","120.2","124.0","126.0","129.0","130.0","133.0","135.0","137.0","161.0"],"res":["65.0","68.0","69.0","104.0","105.0","106.0","108.0","129.0","140.0","143.0","156.0","161.0"],"for":["65.0","68.0","71.0","84.0","97.0","107.0","110.6","119.1","119.2","126.0","127.0","129.0","131.0","133.0","134.0","151.0","157.0","159.0","180.0"],"i":["65.0","68.0","71.0","84.0","85.0","87.1","97.0","103.0","107.0","115.0","119.2","120.1","126.0","127.0","129.0","131.0","132.0","151.0","158.0","179.0","180.0"],"都不可能是素数了":["66.0"],"然后我们发现":["66.0"],"也是素数":["66.0"],"productexceptself":["67.0"],"len":["67.0","91.0","103.0","115.0","119.2","120.2","126.0","137.0"],"前缀乘":["67.0"],"位数":["68.0"],"fill":["68.0","73.0","84.0","106.0","131.0","133.0"],"优化点":["69.0"],"避免重复计算":["69.0"],"has":["69.0"],"math":["70.0","74.0","82.0","88.0","90.0","118.0","119.5","181.0"],"floor":["70.0","119.4","119.5"],"h":["71.0","97.0"],"h为三角形的高度":["71.0","97.0"],"初始化dp数组":["71.0","97.0"],"dp":["71.0","75.0","81.0","85.0","97.0","132.0","158.0"],"其中i为n":["72.0"],"j为完全平方数":["72.0"],"例":["72.0"],"3为完全平方数":["72.0"],"表示":["73.0"],"输入一个目标金额":["73.0"],"返回凑出目标金额":["73.0"],"所需的最少硬币数量":["73.0"],"coinchange":["73.0"],"memo":["73.0"],"要凑出金额":["73.0"],"至少要":["73.0"],"个硬币":["73.0"],"步":["74.0","138.0","160.0"],"动态规划":["74.0"],"j":["74.0","131.0","150.0","151.0"],"jump":["74.0"],"uniquepaths":["76.0","98.0"],"uniquepathswithobstacles":["77.0","99.0"],"climbstairs":["78.0","101.0"],"通过反复求解子问题来解决原问题就是动态规划":["79.0"],"如果某一问题有很多重叠子问题":["79.0"],"使用动态规划来解是比较有效的":["79.0"],"求解动态规划的核心问题是穷举":["79.0"],"动态规划和贪心的区别":["79.1"],"动态规划中每一个状态一定是由上一个状态推导出来的":["79.1"],"这一点就区分于贪心":["79.1"],"记忆化":["79.2"],"确定输出值":["79.3"],"东哥的动态规划解题思路":["79.3"],"明确":["79.3"],"stock":["80.0"],"再次买入时":["80.1"],"不操作":["80.2"],"交易次数":["80.3"],"每次交易包含买入和卖出":["80.3"],"手中没有股票":["80.4"],"今天持有股票":["80.5"],"s2":["81.0"],"长度":["81.0"],"即":["81.0"],"表示以":["82.0"],"nums":["82.0","107.0","110.1","110.3","110.4","110.7","110.8","123.0","147.0"],"这个数结尾的最长递增子序列的长度":["82.0"],"初始值":["82.0"],"状态转移方程":["82.0","85.0","88.0","132.0","158.0"],"普通写法":["83.0"],"对于复杂的测试用例会超时":["83.0"],"maxenvelopes":["83.0"],"sort":["83.0","109.0","137.0"],"并且在扩大窗口时更新答案":["85.0","132.0","158.0"],"这其实就是在穷举所有正数开头的子数组":["85.0","132.0","158.0"],"寻找子数组和最大的那个":["85.0","132.0","158.0"],"即将离开窗口的元素":["85.0","132.0","158.0"],"tmp":["85.0","132.0","158.0"],"end":["85.0","92.0","132.0","158.0"],"动归解法":["85.0","132.0","158.0"],"表示以nums":["85.0","132.0","158.0"],"结尾的最大子数组和":["85.0","132.0","158.0"],"j相邻":["86.0"],"countsubstrings":["86.0","144.0"],"子序列问题相对子串":["87.0"],"子数组问题会难一些":["87.0"],"因为子序列是":["87.0"],"因为每个房子都有抢与不抢两种选择":["88.0"],"要么最后一间房子被抢第一间不抢":["89.0"],"然后每种情况再分别按照普通的打家劫舍问题来处理即可":["89.0"],"最后返回最大的结果":["89.0"],"dpfuc":["89.0"],"rob":["90.0"],"表示强盗从第":["90.0"],"node节点的房子开始抢劫":["90.0"],"到最后一层抢到的最多的钱":["90.0"],"同理每个房子都有抢与不抢两种选择":["90.0"],"当前房子抢":["90.0"],"以此类推":["91.0"],"videostitching":["91.0"],"按照起点升序排序":["91.0"],"是在当前所有区间中结束最早的":["92.0"],"最小":["92.0"],"先升序排序":["92.0"],"把所有与":["92.0"],"区间相交的区间从区间集合":["92.0"],"中删除":["92.0"],"重复步骤":["92.0"],"贪心算法":["93.0","95.0"],"我们不需要":["93.0"],"递归地":["93.0"],"计算出所有选择的具体结果然后比较求最值":["93.0"],"而只需要做出那个最有":["93.0"],"潜力":["93.0"],"只需找到无重叠区间的个数有多少即可":["94.0"],"findminarrowshots":["94.0"],"boolean":["95.0","112.0","114.0","167.0"],"解题思路1":["95.0"],"如果能够越过最后一格":["95.0"],"返回":["95.0"],"什么是贪心选择性质呢":["96.0"],"简单说就是":["96.0"],"每一步都做出一个":["96.0"],"minpathsum":["100.0"],"初始化dp":["100.0"],"非法检查":["102.0"],"的括号字符串组合":["103.0","115.0"],"必然对于任何":["103.0","115.0"],"都有":["103.0","115.0"],"子串":["103.0","115.0","162.0"],"中左括号的数量都大于或等于右括号的数量":["103.0","115.0"],"回溯算法思路":["103.0","115.0"],"题目等同于":["103.0","115.0"],"现在有":["103.0","115.0"],"2n":["103.0","115.0"],"记录结果":["104.0"],"记录回溯的路径":["104.0"],"track":["104.0","105.0","106.0","110.2","110.5"],"记录":["104.0","159.0"],"中的路径和":["104.0"],"tracksum":["104.0"],"路径":["105.0","110.0","110.2","110.5"],"记录在":["105.0"],"选择列表":["105.0","110.0"],"中不存在于":["105.0"],"的那些元素":["105.0"],"用来标记选择过了的元素":["106.0"],"used":["106.0"],"回溯算法":["108.0","110.0"],"subsets":["108.0"],"用于记录结果":["108.0"],"用于记录回溯路径":["108.0"],"则跳过":["109.0"],"subsetswithdup":["109.0"],"就是":["110.0"],"解决一个回溯问题":["110.0"],"实际上就是一个决策树的遍历过程":["110.0"],"站在回溯树的一个节点上":["110.0"],"你只需要思考":["110.0"],"个问题":["110.0"],"也就是已经做出的选择":["110.0"],"也就是你当前可以做的选择":["110.0"],"结束条件":["110.0"],"也就是到达决策树底层":["110.0"],"无法再做选择的条件":["110.0"],"回溯算法框架":["110.0"],"避免产生重复子集":["110.2","110.5"],"backtrack":["110.2","110.3","110.5","110.6"],"满足结束条件":["110.3","110.6","110.8"],"更新结果":["110.3","110.6"],"start":["110.5","110.8","160.0"],"控制树枝的遍历":["110.5"],"中的元素都是唯一的":["110.7"],"leetcode中没有相关题目":["110.9"],"allpathssourcetarget":["111.0"],"图的节点数":["111.0"],"结果":["111.0"],"记录从起点到当前节点的路径":["112.0"],"onpath":["112.0"],"图遍历框架":["112.0"],"s":["113.0","116.0","142.0","160.0"],"mininsertions":["113.0"],"解题思路":["114.0"],"isvalid":["114.0"],"minaddtomakevalid":["116.0"],"右括号数量":["117.0"],"这个很好理解":["117.0"],"对于一个":["117.0"],"mid":["118.0","119.5","122.0"],"round":["118.0"],"归并排序":["119.0"],"当前元素的值":["119.1"],"pre":["119.1"],"表示前一个元素的下标":["119.1"],"arr":["119.2"],"k":["119.3","175.0"],"将它与无序区的第1个记录r交换":["119.3"],"使r":["119.3"],"分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区":["119.3"],"1趟结束":["119.3"],"数组有序化了":["119.3"],"树表查找":["120.0"],"对于":["121.0"],"单链表":["121.0"],"来说":["121.0"],"大部分技巧都属于快慢指针":["121.0"],"search":["124.0"],"搜索区间为":["125.0"],"搜索区间变为":["125.0"],"rotate":["126.0"],"先沿对角线":["126.0"],"左上右下方向":["126.0"],"镜像对称二维矩阵":["126.0"],"上边":["127.0"],"从左到右":["127.0"],"所以i":["127.0"],"y轴固定为top":["127.0"],"y轴由matrix":["127.0"],"中的第一个中括号决定":["127.0"],"矩阵":["128.0"],"matrix":["128.0"],"按照左上到右下的对角线进行镜像对称":["128.0"],"itemres":["129.0"],"binarysearch":["129.0"],"的累加和":["130.0"],"numarray":["130.0"],"如果后续再遇到可以直接跳过":["134.0"],"occurrence":["134.0"],"记录字符串中出现过的字符在字符串最后":["134.0"],"次出现的位置":["134.0"],"起始位置":["135.0"],"指针l":["135.0"],"循环height数组":["135.0"],"l":["135.0"],"r对应高度较小的那个先向内移动":["135.0"],"不断计算面积":["135.0"],"则将结果记录下来":["136.0"],"若nums":["136.0"],"则向前移动l":["136.0"],"则向后移动r":["136.0"],"threesum":["136.0"],"sortnums":["137.0"],"head":["138.0","173.0","176.0"],"思路1":["138.0"],"快慢指针遍历":["138.0"],"直到快指针到达最后":["138.0"],"使用两个指针变量":["138.0"],"刚开始都位于链表的第":["138.0"],"个结点":["138.0"],"一个永远一次只走":["138.0"],"对撞指针":["139.0"],"找左边界":["140.0"],"numbers":["141.0"],"思路":["141.0","146.0","147.0","169.0","173.0"],"左右指针":["141.0","144.0"],"do":["142.0","148.0"],"anything":["142.0","148.0"],"modify":["142.0","148.0"],"help":["143.0"],"解法1":["144.0"],"中心扩展法":["144.0"],"di":["145.0","177.0"],"ling":["145.0"],"zh":["145.0"],"bfe1b":["145.0"],"快慢指针":["146.0","169.0"],"让慢指针":["146.0"],"slow":["146.0"],"走在后面":["146.0"],"快指针":["146.0"],"fast":["146.0"],"in":["148.0"],"修改数组":["149.0"],"给闭区间":["150.0","151.0"],"增加":["150.0","151.0"],"可以是负数":["150.0"],"说明是对":["150.0"],"step1":["152.0"],"通过这个":["152.0"],"差分数组是可以反推出原始数组":["152.0"],"代码逻辑如下":["152.0"],"根据差分数组构造结果数组":["152.0"],"如果nums":["153.0"],"maxvowels":["154.0"],"vowels":["154.0"],"containsnearbyduplicate":["155.0"],"of":["157.0","159.0"],"统计t中字符频数":["157.0","159.0"],"窗口":["159.0"],"中的相应字符的出现次数":["159.0"],"中的所有字符了":["160.0"],"同时":["160.0"],"每次增加":["160.0"],"我们都要更新一轮结果":["160.0"],"重复第":["160.0"],"和第":["160.0"],"直到":["160.0"],"到达字符串":["160.0"],"的尽头":["160.0"],"第":["160.0"],"步相当于在寻找一个":["160.0"],"可行解":["160.0"],"然后第":["160.0"],"步在优化这个":["160.0"],"最终找到最优解":["160.0"],"是将移入窗口的字符":["161.0"],"如何缩小窗口":["162.0"],"在窗口滑动的哪个阶段更新结果":["162.0"],"即便你明白了这些细节":["162.0"],"也容易出":["162.0"],"bug":["162.0"],"找":["162.0"],"还不知道怎么找":["162.0"],"滑动窗口很多时候都是在处理":["162.0"],"子数组":["162.0"],"相关的问题":["162.0"],"下面就是一位大佬总结出来的滑动窗口代码框架":["162.0"],"有两个字符串进行比较的情况":["162.0"],"滑动窗口算法框架":["162.0"],"slidingwindow":["162.0"],"t":["162.0"],"need":["162.0"],"用来记录t中字符出现次数":["162.0"],"方便后续的判断":["162.0"],"作为整颗树的根":["164.0"],"每个节点的父节点和左右孩子的":["164.0"],"索引":["164.0"],"都可以通过简单的运算得到":["164.0"],"这就是二叉堆设计的一个巧妙之处":["164.0"],"除了基础的left":["164.0"],"parent":["164.0"],"exch":["164.0"],"先":["165.0"],"末尾的方法进行更新到最新访问状态":["165.0"],"同时还有判断是否超出缓存容量":["165.0"],"超了就得删除":["165.0"],"或更新原有键值对":["165.0"],"那么经过上述的操作":["165.0"],"一直没有被更改的":["165.0"],"即最近最少使用":["165.0"],"就会慢慢移动到了":["165.0"],"头部":["165.0"],"所以当遇到":["165.0"],"缓存队列满":["165.0"],"的情况时":["165.0"],"直接将":["165.0"],"队头":["165.0"],"当队头元素已经在滑动窗口外了":["166.0"],"移除对头元素":["166.0"],"当i大于等于k":["166.0"],"1的时候":["166.0"],"单调递减队头就是滑动窗口的最大值":["166.0"],"xiaochen1024":["166.0"],"courseware":["166.0"],"60b4f11ab1aa91002eb53b18":["166.0"],"6196ce3ac1553b002e57bf1f":["166.0"],"滑动窗口最大值":["166.0"],"swap":["167.0"],"temp":["167.0"],"先进后出的逻辑顺序":["168.0"],"符合某些问题的特点":["168.0"],"慢指针走1步":["169.0"],"快指针走两步":["169.0"],"heada":["170.0"],"headb":["170.0"],"getintersectionnode":["170.0"],"list1":["171.0"],"list2":["171.0"],"listnode":["172.0","174.0"],"新建两个链表":["173.0"],"一个用来存放小于x的节点":["173.0"],"一个用来存放大于x的节点":["173.0"],"链表的分解":["175.0"],"lc23":["175.0"],"合并":["175.0"],"个有序链表":["175.0"],"返回新的头结点":["176.0"],"reverse":["176.0"],"递归":["177.0"],"labuladong":["177.0"],"github":["177.0"],"io":["177.0"],"algo":["177.0"],"yi":["177.0"],"zhan":["177.0"],"da78c":["177.0"],"shou":["177.0"],"ba":["177.0"],"sh":["177.0"],"让反转之后的":["178.0"],"节点和后面的节点连起来":["178.0"],"因此在处理第i个元素的时候":["179.0"],"只需生成一个":["179.0"],"区间内的随机整数r":["179.0"],"然后交换nums":["179.0"],"和nums":["179.0"],"用map来记录相同元素的下标":["180.0"],"pickindex":["181.0"],"random":["181.0"],"方法生成一个":["181.0"],"的随机实数":["181.0"],"再乘上前缀和数组":["181.0"]},{"0":["4.6","7.20","49.0","69.0","75.0","76.0","86.0","98.0","104.0","110.3","110.6","113.0","116.0","119.3","134.0","136.0","137.0","141.0","144.0","154.0"],"1":["0.0","1.0","1.2","2.2","4.5","6.1","7.10","15.0","22.0","22.4","34.0","36.1","37.4","42.4","65.0","80.4","84.0","91.0","107.0","129.0","137.0","143.0","148.0","161.0","162.0","173.0"],"2":["0.0","1.0","2.9","7.1","7.2","7.7","7.9","7.22","16.2","22.0","22.4","24.0","30.1","35.2","36.6","36.13","38.2","38.9","41.7","64.0","118.0","128.0","138.0"],"3":["5.6","7.1","7.2","7.9","7.20","21.9","33.1","41.8","78.0","101.0","152.0"],"4":["2.8","3.4","7.6","7.9","9.2","10.6","33.5","175.0"],"5":["33.8","39.2"],"9":["66.0"],"12":["1.10","66.0"],"13":["1.8","1.10"],"14":["1.10"],"15":["1.10"],"18":["5.10"],"19":["34.1"],"20":["5.10"],"21":["7.10"],"24":["9.2"],"42":["1.8"],"45":["42.12"],"49":["20.8"],"50":["34.3"],"60":["30.8","38.6"],"70":["37.4","38.4","178.0"],"80":["0.8","1.5","2.3","2.9"],"100":["44.0"],"123":["7.16","7.20"],"200":["33.7"],"304":["40.3"],"2018":["12.0"],"2020":["12.0"],"2038":["34.1"],"3003":["36.9"],"123123":["7.16"],"227926":["1.0"],"256256":["38.8"],"512512":["38.8"],"其中google":["0.0"],"v8是主流浏览器的选择":["0.0"],"参考文章":["0.0","15.0"],"什么是js引擎":["0.0"],"变量提升指的是":["0.0"],"在v8执行js源码前":["0.0"],"会先进行预编译":["0.0"],"预编译期间会将":["0.0"],"变量声明":["0.0","5.6"],"与":["0.0","20.18","30.8"],"函数声明":["0.0"],"提升至其对应":["0.0"],"的最顶端":["0.0"],"变量提升只会提升变量名的声明":["0.0"],"而不会提升变量的赋值初始化":["0.0"],"函数提升的":["0.0"],"赋值给变量":["0.1"],"但在当前作用域内没有找到":["0.1"],"的声明":["0.1"],"沿着作用域链向上查找":["0.1"],"在":["0.1","0.5","30.14","42.2"],"全局作用域":["0.1"],"内找到了变量":["0.1"],"javascript":["0.2","0.10","2.4","2.5","2.7","7.23","12.3","37.3","38.0"],"会优先从当前的执行上下文中查找变量":["0.2"],"由于变量提升":["0.2"],"当前的执行上下文中就包含了变量":["0.2"],"而值是":["0.2"],"所以获取到的":["0.2"],"的值就是":["0.2"],"退出":["0.3"],"全局作用域中的对象在代码中的任何地方都能访问":["0.3"],"其生命周期伴随着页面的生命周期":["0.3"],"的栈结构来实现的":["0.4"],"而变量提升是通过":["0.4"],"变量环境":["0.4","0.12"],"来实现":["0.4"],"通过这两者的结合":["0.4"],"引擎也就同时支持了变量提升和块级作用域了":["0.4"],"函数内部通过":["0.4"],"var":["0.4","7.26","8.2","8.8","8.10","45.0","50.0","51.0","53.0","54.0","55.0","63.0","66.0","72.0","82.0","88.0","92.0","93.0","103.0","110.0","115.0","123.0","135.0","142.0","146.0","147.0","148.0","153.0","160.0","165.0","171.0","173.0","177.0","179.0"],"声明的变量":["0.4"],"在编译阶段全都被存放到":["0.4"],"里面了":["0.4"],"通过":["0.4","20.18","36.7"],"在编译阶段会被存放到":["0.4"],"中":["0.4","7.13","7.23","15.5","22.11","23.2","125.0"],"是一种":["0.5"],"弱类型的":["0.5"],"动态":["0.5"],"的语言":["0.5"],"对于":["0.6"],"赋值":["0.6"],"操作":["0.6","1.10","38.13"],"原始类型":["0.6"],"的数据直接完整地复制":["0.6"],"变量值":["0.6"],"对象数据类型":["0.6"],"函数在执行过程中":["0.7"],"其内部的临时变量会按照执行顺序被压入到栈中":["0.7"],"这种管理":["0.7"],"函数调用关系":["0.7"],"过程":["0.7"],"的栈结构称之为":["0.7"],"调用栈":["0.7"],"代码片段":["0.7"],"执行结果":["0.7"],"原因":["0.7","85.0","132.0","158.0"],"备注":["0.7"],"width":["0.8","1.5","2.3","30.8","34.3","38.4","38.6","42.12","178.0"],"当使用":["0.8"],"new":["0.8","1.7","7.2","8.3","8.4","8.10","10.7","33.2","74.0","81.0","83.0","86.0","129.0","165.0","170.0","171.0","173.0"],"时":["0.8","1.8","7.25","36.13"],"我们会在堆中分配一块空间":["0.8"],"在堆中分配空间之后":["0.8"],"会返回分配后的地址":["0.8"],"跳过":["0.9"],"函数内部的代码":["0.9"],"是一个由":["0.10"],"google":["0.10","37.0"],"开发的开源":["0.10"],"引擎":["0.10"],"目前用在":["0.10"],"chrome":["0.10"],"浏览器和":["0.10"],"node":["0.10"],"其核心功能是执行":["0.10"],"代码":["0.10","2.4"],"v8的宿主环境可以是":["0.10"],"浏览器":["0.10","20.3"],"js或者其他":["0.10"],"定制开发环境":["0.10"],"为":["0.10","105.0"],"提供基础的消息循环系统":["0.10"],"全局变量":["0.10"],"web":["0.10","33.0"],"语法分析":["0.11"],"解析器":["0.11"],"生成抽象语法树":["0.11"],"ast":["0.11"],"及作用域":["0.11"],"vm68":["0.12"],"uncaught":["0.12","30.2"],"rangeerror":["0.12"],"maximum":["0.12"],"size":["0.12"],"exceeded":["0.12"],"堆空间":["0.12"],"是一种树形的存储结构":["0.12"],"用来存储对象类型的":["0.12"],"离散":["0.12"],"的数据":["0.12"],"引类型":["0.12"],"document对象等":["0.12"],"这些都是":["0.12"],"存在":["0.12"],"还有全局上下文也是存在":["0.12"],"空间中的":["0.12"],"栈空间相关知识详解下面":["0.12"],"内存管理机制":["0.12"],"执行上下文中主要包含三部分":["0.12"],"词法环境":["0.12"],"this关键字":["0.12"],"this指向":["0.12"],"除开箭头函数的this是编辑阶段确定的之外":["0.12"],"其他this都是在代码执行阶段":["0.12"],"代码执行阶段":["0.12"],"执行上下文创建阶段":["0.12"],"确认的":["0.12"],"回调函数有两种类型":["1.0"],"同步回调和异步回调":["1.0"],"同步":["1.0","1.10"],"回调函数是在执行函数内部被执行的":["1.0"],"异步":["1.0"],"回调函数是在执行函数外部被执行的":["1.0"],"同时异步回调也有两种不同的类型":["1.0"],"跟其等待的时间也有关系":["1.1","1.10"],"等待时间越短":["1.1","1.10"],"越早输出":["1.1","1.10"],"为了让这些事件有条不紊地进行":["1.1"],"js引擎需要对之执行的顺序做一定的安排":["1.1"],"v8":["1.1","1.5","2.1","2.5"],"其实采用的是一种":["1.1"],"队列":["1.1"],"的方式来存储这些任务":["1.1"],"然后基于":["1.2"],"又可以延伸出":["1.2"],"协程":["1.2"],"generator":["1.2"],"await":["1.2"],"async":["1.2"],"等现代前端经常使用的一些技术":["1.2"],"常见的":["1.2"],"有":["1.2"],"mutationobserver":["1.2"],"提供了监视对":["1.2"],"之前":["1.3"],"会先检":["1.3"],"queue":["1.4","166.0"],"过程分析":["1.5"],"img":["1.5","2.3","15.3","23.0","33.6","34.3","35.0","36.17","40.5","41.0","42.2","42.12","128.0"],"src":["1.5","2.3","2.6","15.3","23.0","34.3","35.0","38.6","38.7","40.5","41.0","42.2","42.12"],"picture":["1.5","2.3","2.6","7.29","15.3","34.3","35.0","38.6","40.2","40.5","40.6","41.0","42.2","42.12","128.1"],"eventloop1":["1.5"],"png":["1.5","2.3","2.6","30.8","34.3","35.0","38.1","38.4","38.6","40.5","40.6","41.0","42.2","42.12","80.0"],"函数的调用":["1.5"],"会先创建":["1.5"],"函数的执行上下文":["1.5"],"并将其压入到栈中":["1.5"],"先执行同步代码":["1.5"],"打印":["1.5"],"接着执行":["1.5"],"这会触发一个":["1.5"],"微":["1.5"],"js":["1.6","4.10","7.16","21.2","22.5","22.18","30.13","34.7","110.0","119.3"],"function":["1.6","7.7","7.26","10.0","22.5","23.6","66.0","72.0","74.0","78.0","82.0","88.0","92.0","93.0","95.0","101.0","103.0","110.0","110.5","112.0","115.0","116.0","119.3","123.0","135.0","141.0","146.0","147.0","148.0","153.0","160.0","165.0","166.0","179.0"],"foo":["1.6","5.7"],"return":["1.6","2.8","8.7","10.4","10.7","26.2","33.7","45.0","50.0","51.0","52.0","53.0","55.0","63.0","72.0","82.0","110.0","118.0","160.0","165.0","171.0","179.0"],"promise":["1.6","4.13","33.7"],"resolve":["1.6","1.7","1.9"],"then":["1.6","9.0"],"当前的宏任务无法退出":["1.6"],"const":["1.7","2.8","4.14","6.1","7.21","22.7","22.15","45.0","53.0","72.0","93.0","107.0","123.0","160.0","166.0","170.0","171.0","173.0"],"true":["1.8","46.0","66.0","163.0","167.0"],"分析":["1.8"],"首先":["1.8","37.4"],"函数调用和普通函数不同":["1.8"],"它会返回一个迭代器":["1.8"],"当执行第一次":["1.8"],"来执行":["1.9"],"表示在这里":["1.9"],"await后面的操作执行完毕":["1.9"],"等待返回promise":["1.9"],"成功状态":["1.9"],"才会恢复async函数的执行":["1.9"],"执行await下一条语句":["1.9"],"并得到":["1.9"],"的值":["1.9"],"作为":["1.9","41.6"],"打印出7":["1.10"],"然后new":["1.10"],"promise的时候会立即把executor函数执行":["1.10"],"是":["1.10","37.0"],"打印出8":["1.10"],"然后在执行resolve时":["1.10"],"触发微任务":["1.10"],"于是打印出9":["1.10"],"当前宏任务执行完毕":["1.10"],"再去消息队列里面去下一个":["1.10"],"的settimeout宏任务":["1.10"],"打印出4":["1.10"],"最后执行第一个settimeout的宏任务":["1.10"],"打印出2":["1.10"],"ps":["1.10"],"settomeout的输出顺序":["1.10"],"例题二":["1.10"],"把例题一中的":["1.10"],"改成":["1.10"],"输出结果是什么":["1.10"],"当promise对象的状态变成":["1.10"],"垃圾回收算法的优化":["2.0"],"并行回收":["2.0"],"增量回收":["2.0"],"并发":["2.0"],"concurrent":["2.0"],"回收":["2.0"],"pic2":["2.1","20.8","41.0"],"此时array对象变成了垃圾数据":["2.1"],"因为我们无法访问到此对象":["2.1"],"但这个数组对象不会一直占用内存空间":["2.1"],"因为":["2.1","5.12"],"虚拟机中的":["2.1"],"垃圾回收器":["2.1"],"会帮你自动清理":["2.1"],"垃圾回收":["2.1"],"garbage":["2.1"],"collection":["2.1"],"算法":["2.1"],"大体步骤":["2.1"],"第一步":["2.1"],"scavenge算法具体步骤如下":["2.2"],"v8会把":["2.2"],"对象区":["2.2"],"中的对象做一遍检查":["2.2"],"将数据分为活动数据和垃圾数据":["2.2"],"然后把":["2.2"],"活动数据":["2.2"],"对象复制到":["2.2"],"空闲区":["2.2"],"同时它还会把这些对象有序地排列起来":["2.2"],"它和副垃圾回收器的垃圾清除过程完全不同":["2.3"],"主垃圾回收器会":["2.3"],"直接":["2.3"],"将标记为垃圾的数据清理掉":["2.3"],"你可以理解这个过程是清除掉下图中红色标记数据的过程":["2.3"],"你可参考下图大致理解下其清除过程":["2.3"],"gc":["2.3","2.6"],"pic6":["2.3","37.4","40.6"],"对垃圾数据进行标记":["2.3"],"然后清除":["2.3"],"执行垃圾标记的过程中":["2.4"],"主线程并不会同时执行":["2.4"],"采用并行回收时":["2.4"],"在暂停期间":["2.5"],"被标记好的垃圾数据如果被":["2.5"],"代码修改了":["2.5"],"那么垃圾回收器需要能够正确地处理":["2.5"],"在没有采用增量算法之前":["2.5"],"使用":["2.5","16.2"],"黑色和白色":["2.5"],"pic11":["2.6"],"我们可以看到":["2.7"],"在主线程执行":["2.7"],"辅助线程就开始执行标记操作了":["2.7"],"所以说标记是在辅助线程中完成的":["2.7"],"标记完成之后":["2.7"],"无法被gc回收":["2.8"],"解决方法":["2.8"],"null":["2.8","7.16","7.20","20.13","20.15","22.1","22.3","23.3","48.0","49.0","56.0","57.0","60.0","61.0","62.0","136.0","172.0","174.0","176.0"],"闭包":["2.8"],"注意":["2.8","126.0"],"闭包本身没有错":["2.8"],"不会引起内存泄漏":["2.8"],"而是使用错误导致":["2.8"],"closure":["2.8"],"name":["2.8","7.4","8.15","30.8"],"xianshannan":["2.8"],"split":["2.8"],"reverse":["2.8"],"join":["2.8"],"reversename":["2.8"],"在当前执行环境未结束的情况下":["2.8"],"该段代码造成了内存泄露":["2.8"],"performance":["2.9"],"用来观察内存变化趋势":["2.9"],"手写call":["3.0"],"手写apply":["3.0","3.3"],"food":["3.1"],"a":["3.2","3.5","5.8","7.1","7.26","30.3","91.0","94.0","134.0","160.0","162.0","177.0"],"b":["3.2","3.5","7.26","91.0","94.0"],"elements":["3.2"],"语法":["3.3"],"argsarray":["3.3"],"与call类似":["3.3"],"只是参数是数组的形式":["3.3"],"myapply":["3.3"],"判断是否有第二个参数":["3.3"],"else":["3.3","10.7","24.3","87.2","180.0"],"手写bind":["3.3"],"javascript深入之bind的模拟实现":["3.3"],"prototype":["3.4","23.6","165.0"],"返回新对象":["3.4"],"将初始化完毕的新对象地址":["3.4"],"保存到等号左边的变量中":["3.4"],"判断person":["3.4"],"的返回值类型":["3.4"],"test1":["3.5"],"返回对象":["3.5"],"this":["3.5","7.4","8.1","22.18","23.6","165.0","179.0"],"assign":["4.0","10.1"],"is":["4.0"],"proxy":["4.0"],"reflect":["4.0"],"封装操作对象的统一api":["4.0"],"恒量":["4.1"],"常量":["4.1"],"生成一个随机数":["4.3"],"y":["4.5","8.14","41.1"],"console":["4.6","5.7","7.21","8.1","8.9"],"log":["4.6","4.12","5.7","7.21","8.1","8.2","8.7","8.9"],"slice":["4.6","143.0"],"sayhi":["4.8"],"settimeout":["4.8"],"ee":["4.9"],"result":["4.9","110.0","150.0"],"规避了这些问题":["4.10"],"has":["4.12","167.0"],"tony":["4.14"],"类的继承":["4.14"],"set":["4.16","10.8","22.10","167.0","170.0"],"某个属性名重名":["4.17"],"执行上下文栈":["5.0"],"变量对象":["5.0"],"顺便学习一个es5的方法":["5.1"],"可以获得对象的原型":["5.1"],"object":["5.1","5.8","7.1","7.7","8.13","8.15","161.0"],"getprototypeof":["5.1"],"需要注意的三个点":["5.1"],"constructor属性":["5.1"],"github":["5.2"],"书写的":["5.4"],"位置":["5.4"],"查找上面一层的代码":["5.4"],"也就是":["5.4"],"等于":["5.4","9.2"],"结果是2":["5.4"],"pop":["5.5"],"第二段":["5.5"],"则完全替换这个属性":["5.6"],"an":["5.8"],"or":["5.8"],"this的指向在函数定义的时候是确定不了的":["5.9"],"age":["5.10","7.4","8.14","34.1"],"red":["5.10"],"mqyqingfeng":["5.11"],"其内部定义的":["5.12"],"变量也不能被销毁":["5.12"],"函数依然引用了该变量":["5.12"],"每个函数在调用时会创建新的":["5.12"],"上下文":["5.12"],"及":["5.12"],"作用域链":["5.12"],"而作用域链就是将外层":["5.12"],"上层":["5.12"],"上下文所绑定的变量对象逐一串连起来":["5.12"],"使当前函数可以获取外层上下文的变量":["5.12"],"数据等":["5.12"],"如果我们在函数中定义新的函数":["5.12"],"同时将内层函数作为值返回":["5.12"],"那么内层函数所包含的":["5.12"],"将会一起返回":["5.12"],"即使内层函数在":["5.12"],"其他上下文中执行":["5.12"],"就是传递对象的引用":["5.13"],"函数内部对参数的任何改变都会影响该对象的值":["5.13"],"因为两者引用的是同一个对象":["5.13"],"obj":["5.13"],"o":["5.13","154.0"],"普通解法":["6.1"],"来判断":["6.2"],"同时":["6.2"],"无法判断数组":["6.3"],"日期类型":["6.3"],"比较中的5条规则":["7.0"],"几道经典例题":["7.0"],"和":["7.0","16.2","33.0","37.3","87.2","92.0"],"有什么区别":["7.0"],"显示类型转换":["7.0"],"的基本类型值的字符串化规则":["7.0"],"json":["7.0"],"stringify":["7.0"],"tonumber":["7.0"],"array":["7.2","7.3","10.0","72.0","74.0","76.0","77.0","81.0","86.0","98.0","99.0","129.0"],"date":["7.2","10.0"],"student":["7.4"],"方法则会调用":["7.5"],"ordinarytoprimitive":["7.5"],"抛出typeerror异常":["7.6"],"如果preferredtype被标记为string":["7.6"],"tostring":["7.7"],"regexp":["7.7","10.0"],"这几种构造函数生成的对象":["7.7"],"通过tostring转换后会变成相应的字符串的形式":["7.7"],"因为这些构造函数上封装了自己的tostring方法":["7.7"],"空字符串":["7.9","7.28"],"处理":["7.9"],"转为1":["7.10"],"1e":["7.10"],"false":["7.11","46.0","86.0","163.0","167.0"],"方法返回的是不是原始类型或者valueof":["7.12"],"方法不存在":["7.12"],"隐式转换就是自动转换":["7.13"],"通常发生在一些数学运算中":["7.13"],"undefined":["7.15","7.18","49.0"],"将其转换成":["7.16"],"规则1":["7.16"],"for":["7.17","69.0","73.0","75.0","76.0","77.0","81.0","98.0","99.0","100.0","110.0","110.3","110.5","110.8","113.0","114.0","119.3","119.5","130.0","136.0","137.0","160.0","162.0","166.0"],"nan":["7.18","7.28"],"unicode":["7.19"],"字符索引来比较":["7.19"],"然后参考规则4":["7.20"],"string和number比较":["7.20"],"先将":["7.20"],"string":["7.20","160.0"],"转换为":["7.20"],"i":["7.21","69.0","73.0","75.0","76.0","77.0","81.0","98.0","99.0","105.0","110.3","110.6","110.8","119.1","119.5","133.0","134.0","137.0","154.0","166.0"],"if":["7.21","10.7","33.7","46.0","58.0","59.0","73.0","78.0","88.0","89.0","92.0","100.0","101.0","104.0","106.0","110.0","110.2","110.5","112.0","114.0","118.0","136.0","140.0","147.0","151.0","163.0","177.0"],"hello":["7.21"],"world":["7.21"],"可以打印":["7.21"],"当执行a":["7.21"],"两边的类型是否相同":["7.22"],"相同的话就比较值的大小":["7.22"],"例如1":["7.22"],"返回false":["7.22"],"判断的是否是null和undefined":["7.22"],"是的话就返回true":["7.22"],"但是当":["7.25"],"对象有自己的tostring方法":["7.25"],"字符串化时就会调用该方法并返回该方法的返回值":["7.25"],"忽略":["7.26"],"在数组中则会返回":["7.26"],"obj1":["7.26","10.5"],"c":["7.26","69.0","114.0","155.0","156.0","157.0","159.0"],"和parsefloat":["7.27"],"继承":["8.0"],"原型链继承":["8.0"],"借用构造函数":["8.0"],"person1":["8.3","8.4"],"person2":["8.3","8.4"],"push":["8.3","8.8","8.9","106.0","167.0"],"test":["8.4","30.12","30.13"],"getname":["8.6"],"测试":["8.8"],"child1":["8.8","8.10"],"names":["8.8"],"yayu":["8.8","8.9"],"重写child":["8.10"],"prototype的constructor属性":["8.10"],"指向自己的构造函数child":["8.10"],"constructor":["8.10"],"van":["8.11"],"anotherperson":["8.11"],"greg":["8.11"],"通过调用":["8.12"],"函数创建一个新对象":["8.12"],"create":["8.13","8.15"],"创建父类原型的一个副本":["8.13"],"增强对象":["8.13"],"弥补因重写原型而失去的默认的constructor":["8.13"],"调用父类的constructor":["8.14"],"call":["8.15"],"新增的父类":["8.15"],"success":["9.0"],"failure":["9.0"],"handleresolvedb":["9.0"],"handlerejectedb":["9.0"],"handleresolvedc":["9.0"],"handlerejectedc":["9.0"],"catch":["9.0"],"err":["9.0"],"方法可以接受两个回调函数作为参数":["9.0"],"第一个回调函数是promise对象的状态变为":["9.0"],"时调用":["9.0"],"第二个回调函数是promise对象的状态变为":["9.0"],"其中":["9.0"],"第二个函数是可选的":["9.0"],"不一定要提供":["9.0"],"这两个函数都接受promise对象传出的值作为参数":["9.0"],"每一个":["9.0"],"方法还会返回一个新生成的":["9.0"],"这个对象可被用作":["9.0"],"链式调用":["9.0"],"方法会捕获到没有捕获的异常":["9.0"],"这两者都是作为":["9.1"],"微任务":["9.1"],"当执行第二次":["9.2"],"传入的参数12就会被当作上一个yield表达式的返回值":["9.2"],"如果你不传参":["9.2"],"永远返回":["9.2"],"此时":["9.2","20.18","125.0"],"所以第二个":["9.2"],"当执行第三次":["9.2"],"传入的参数13就会被当作上一个yield表达式的返回值":["9.2"],"所以":["9.2","34.7"],"相加等于":["9.2"],"实际开发一般会配合":["9.2"],"co":["9.2"],"库去使用":["9.2"],"co是一个为node":["9.2"],"js和浏览器打造的基于生成器的流程控制工具":["9.2"],"借助于promise":["9.2"],"你可以使用更加优雅的方式编写非阻塞代码":["9.2"],"我们可以通过":["9.2"],"函数解决回调地狱的问题":["9.2"],"fetch":["9.2","36.11"],"ajax":["9.2"],"url":["9.2","36.17"],"url1":["9.2"],"数据类型":["10.0"],"object为":["10.0"],"引用类型":["10.0"],"包括":["10.0"],"类型":["10.0"],"对象的拷贝":["10.1"],"用于将所有可枚举属性的值从一个或多个源对象分配到目标对象":["10.1"],"let":["10.3","51.0","66.0","74.0","76.0","77.0","83.0","88.0","95.0","98.0","99.0","103.0","109.0","110.0","115.0","116.0","119.3","130.0","133.0","135.0","136.0","141.0","153.0","154.0","160.0","166.0","177.0"],"obj2":["10.5"],"get":["10.7","36.17"],"instanceof":["10.7"],"res":["10.8","73.0","86.0","103.0","107.0","109.0","111.0","113.0","114.0","115.0","116.0","119.4","137.0","144.0","150.0","157.0","166.0"],"origin":["10.8"],"copy":["10.8"],"vistied":["10.8"],"while":["10.8","20.6","119.4","124.0","144.0","155.0","157.0","159.0"],"length":["10.8","69.0","74.0","86.0","88.0","93.0","95.0","110.6","119.3","120.1","134.0","143.0","155.0","156.0","157.0","159.0","167.0","179.0"],"实现":["11.0"],"关于节流的实现":["11.0"],"有两种主流的实现方式":["11.0"],"一种是使用时间戳":["11.0"],"一种是设置定时器":["11.0"],"使用时间戳":["11.0"],"触发事件的时候":["11.0"],"我们取出当前的时间戳":["11.0"],"然后减去之前的时间戳":["11.0"],"最一开始值设为":["11.0"],"如果大于设置的时间周期":["11.0"],"就执行函数":["11.0"],"然后更新时间戳为当前的时间戳":["11.0"],"如果小于":["11.0"],"就不执行":["11.0"],"throttle":["11.0"],"前端开发":["12.0"],"05":["12.0"],"09":["12.0"],"北京美团":["12.0"],"前端实习":["12.0"],"教育经历":["12.0"],"主要技术":["12.1"],"使用nestjs作为基础框架进行服务搭建":["12.1"],"mongodb存储覆盖率json数据":["12.1"],"使用istanbul并进行改造":["12.1"],"类似nest":["12.2"],"作为基础框架":["12.2"],"mysql做存储搭建服务端":["12.2"],"使用react":["12.2"],"全家桶":["12.3"],"typescript":["12.3"],"antdesign":["12.3"],"lead":["14.0"],"多谢关注":["14.0"],"ssg":["15.0"],"静态页面生成":["15.0"],"组成一个完整的html":["15.1"],"最后返回给浏览器":["15.1"],"这个时候":["15.1"],"浏览器已经拿到了一个完整的被服务器动态组装出来的html文本":["15.1"],"然后将html渲染到页面中":["15.1"],"这个时候脚本请求后端服务提供的api":["15.2"],"获取数据":["15.2"],"获取完成后将数据通过js脚本动态的将数据":["15.2"],"渲染":["15.2"],"到页面中":["15.2"],"完成页面显示":["15.2"],"向后端服务器请求数据":["15.3"],"获取完数据之后再次执行":["15.3"],"代码动态渲染页面":["15.3"],"使得在服务器端也可以渲染":["15.4"],"react":["15.4","20.12"],"vue":["15.4"],"等前端框架渲染的页面并生成":["15.4"],"传递给路由器":["15.5"],"并将路由器渲染的结果插入到":["15.5"],"如果你希望在服务端和客户端之间进行同构":["15.5"],"在客户端也需要使用相同的路由器和配置":["15.5"],"对于动态路由":["15.5"],"你需要自己编写一个路由模块并将其加载到服务端应用中":["15.5"],"你可以在路由模块中根据用户请求的":["15.5"],"动态生成路由配置":["15.5"],"并使用":["15.5"],"的":["15.5","22.3","36.0","38.12"],"然后将获取到的数据注入到组件的props中":["15.6"],"这样在组件渲染时就可以直接使用数据":["15.6"],"这个机制可以加速页面渲染速度":["15.6"],"提升用户体验":["15.6"],"自动代码分割":["15.6"],"中实现服务端渲染":["15.7"],"在服务端渲染中":["15.7"],"api":["16.0","24.0","29.3","33.0","36.9","165.0"],"来根据":["16.0"],"路径进行视图的切换和状态的管理":["16.0"],"前端路由的实现主要有两种方式":["16.0"],"hash":["16.0"],"模式和":["16.0"],"history":["16.0"],"模式":["16.0"],"模式是通过":["16.0"],"的哈希值来实现路由的跳转":["16.0"],"http":["16.0"],"domain":["16.0"],"window":["16.1","160.0"],"location":["16.1"],"改变":["16.1"],"中的":["16.1"],"值":["16.1"],"从而触发路由匹配器对新路由进行渲染":["16.1"],"需要注意的是":["16.1"],"由于":["16.1"],"模式使用的是":["16.1"],"事件":["16.2","34.7"],"函数就会被调用":["16.2"],"pushstate":["16.2"],"replacestate":["16.2","23.1"],"方法":["16.2","23.6","36.17"],"的封装":["19.2"],"而fetch是一种新的获取资源的接口方式":["19.2"],"并不是对xmlhttprequest的封装":["19.2"],"架构":["20.0"],"fiber":["20.0","20.9","21.0","21.6","22.4","22.14"],"fiber架构的心智模型":["20.0"],"fiber的三层含义":["20.0"],"架构层面":["20.0"],"作为静态的数据结构":["20.0"],"root":["20.1","45.0","48.0","51.0","52.0","53.0","55.0"],"cpu瓶颈":["20.2"],"当遇到大计算量的操作或者设备性能不足使页面掉帧":["20.2"],"查":["20.3"],"改":["20.3"],"环境渲染的renderer":["20.3"],"reconciler":["20.4","20.9"],"协调器":["20.4","20.10"],"负责找出变化的组件":["20.4"],"会在浏览器空闲时触发回调的功能外":["20.5"],"scheduler":["20.6"],"asks":["20.6"],"us":["20.6"],"to":["20.6"],"yield":["20.6"],"同步执行对应的dom操作":["20.7"],"由于调度器和协调器都是在内存中进行":["20.8"],"内部采用了":["20.9"],"的架构":["20.9"],"异步可中断更新":["20.11"],"可以理解为":["20.11"],"更新在执行过程中可能会被打断":["20.11"],"浏览器时间分片用尽或有更高优任务插队":["20.11"],"当可以继续执行时恢复之前执行的中间状态":["20.11"],"每个":["20.12"],"对应一个":["20.12"],"指向子fiber节点":["20.13"],"child":["20.13"],"大部分情况同type":["20.14"],"某些情况不同":["20.14"],"比如functioncomponent使用react":["20.14"],"memo包裹":["20.14"],"updatequeue":["20.15"],"mark":["20.16"],"我们可以在":["20.17"],"内存":["20.17"],"就变为":["20.18"],"每次状态更新":["20.18"],"都会产生":["20.18"],"新":["20.18"],"的workinprogress":["20.18"],"reconciler工作的阶段被称为":["20.19"],"render阶段":["20.19"],"因为在该阶段会调用组件的render方法":["20.19"],"通知render":["21.0"],"渲染器":["21.0"],"要执行的dom操作类型":["21.0"],"保存在":["21.0"],"workinprogress":["21.1","22.0","22.1","22.5"],"如果该dom节点将在本次更新中渲染到页面中":["21.1"],"更新前":["21.2"],"div":["21.2","21.5","26.1"],"p":["21.2","47.0","117.0"],"ka":["21.2"],"element":["21.3"],"type":["21.3","40.1"],"或":["21.3","23.0"],"portal":["21.3"],"switch":["21.3","22.9"],"case":["21.3","22.9","79.3"],"习题2":["21.4"],"xxx":["21.4"],"ooo":["21.4"],"after":["21.5"],"情况1":["21.5"],"节点属性变化":["21.5"],"同级的fiber节点是由sibling指针链接形成的单链表":["21.6"],"即不支持双指针遍历":["21.6"],"即":["21.6"],"newchildren":["21.6"],"第一个节点可复用":["21.7"],"遍历到key":["21.7"],"2的节点发现key改变":["21.7"],"等待第二轮遍历处理":["21.7"],"剩下key":["21.7"],"2未遍历":["21.7"],"遍历完":["21.8"],"意味着本次更新有":["21.8"],"新节点插入":["21.8"],"第二次遍历":["21.8"],"的工作便是将剩下的newchildren为生成的workinprogress":["21.8"],"fiber依次标记":["21.8"],"在例子中":["21.9"],"则":["21.9"],"c节点位置不变":["21.9"],"bd":["21.9"],"db":["21.9"],"d":["21.9"],"所以d":["21.9"],"d节点位置不变":["21.9"],"在首次渲染时":["22.0"],"react不需要产生任何更新信息":["22.0"],"而是会给每个从render方法返回的element生成一个fiber节点":["22.0"],"最终生成一个fiber节点树":["22.0"],"后续的更新也是复用了这棵fiber树":["22.0"],"将更新作用到dom树上":["22.0"],"在这个阶段时":["22.0"],"react内部会有2个fiber树和一个list":["22.0"],"current":["22.0"],"tree":["22.0"],"表示":["22.0"],"显示内容":["22.0"],"对应的fiber树":["22.0"],"performunitofwork":["22.1"],"performconcurrentworkonroot会调用该方法":["22.1"],"为遍历到的每个fiber节点调用":["22.2"],"beginwork方法":["22.2"],"会进入其":["22.3"],"兄弟fiber":["22.3"],"阶段会依次执行":["22.4"],"rootfiber":["22.4"],"beginwork":["22.4"],"来创建当前fiber节点的第一个":["22.5"],"子fiber节点":["22.5"],"当前组件对应的fiber节点在上一次更新时的fiber节点":["22.5"],"即workinprogress":["22.5"],"alternate":["22.5"],"当前组件对应的fiber节点":["22.5"],"renderlanes":["22.5"],"详见":["22.6"],"react核心原理2":["22.6"],"diff":["22.6","65.0"],"将比较的结果生成新fiber点":["22.6"],"export":["22.7"],"placement":["22.7"],"0b00000000000010":["22.7"],"来创建其":["22.8"],"子fiber":["22.8"],"indeterminatecomponent":["22.9"],"lazycomponent":["22.9"],"simplememocomponent":["22.9"],"处理style":["22.10"],"prop":["22.10"],"处理dangerously":["22.10"],"inner":["22.10"],"html":["22.10","36.14","37.3","38.0"],"处理children":["22.10"],"在completework的上层函数":["22.11"],"completeunitofwork":["22.11"],"每个执行完completework且存在":["22.11"],"对应的dom操作":["22.12"],"一些生命周期钩子":["22.12"],"componentdidxxx":["22.12"],"某些hook":["22.12"],"useeffect":["22.12"],"都在commit阶段执行":["22.12"],"commit阶段的主要工作":["22.12"],"从reactv16开始":["22.13"],"componentwillxxx":["22.13"],"钩子前增加了":["22.13"],"unsafe":["22.13"],"前缀":["22.13"],"但提供了替代的生命周期钩子":["22.13"],"节点执行如下三个操作":["22.14"],"根据":["22.14"],"parentfiber":["22.15"],"gethostparentfiber":["22.15"],"finishedwork":["22.15"],"父级dom节点":["22.15"],"意味着该fiber节点需要":["22.16"],"递归调用":["22.17"],"fiber节点":["22.17"],"及其子孙fiber节点中fiber":["22.17"],"tag为":["22.17"],"componentdidupdate":["22.18"],"触发状态更新的":["22.18"],"setstate":["22.18","23.6"],"如果赋值了":["22.18"],"第二个参数回调函数":["22.18"],"也会在此时调用":["22.18"],"performconcurrentworkonroot":["23.0"],"commit阶段":["23.0"],"commitroot":["23.0"],"将":["23.0"],"更新机制":["23.0"],"类比":["23.0"],"代码版本控制":["23.0"],"同步更新react":["23.0"],"如果线上有个紧急bug需要修复":["23.0"],"红色节点":["23.0"],"必须先将之前的代码提交":["23.0"],"没有优先级的概念":["23.0"],"tag":["23.1"],"updatestate":["23.1"],"更新的类型":["23.1"],"包括updatestate":["23.1"],"多个update":["23.2"],"会组成":["23.2"],"并被包含在":["23.2"],"什么情况下一个fiber节点会存在多个update":["23.2"],"比如":["23.2","87.2"],"本次更新前该fiber节点已保存的update":["23.3"],"以链表形式存在":["23.3"],"链表头为firstbaseupdate":["23.3"],"链表尾为lastbaseupdate":["23.3"],"shared":["23.4"],"pending":["23.4"],"u4":["23.4"],"u3":["23.4"],"会保证始终指向最后一个插入的update":["23.4"],"更新调度完成后进入":["23.4"],"render":["23.4","23.5","24.1"],"阶段":["23.4"],"此时shared":["23.4"],"pending的环被剪开并连接在updatequeue":["23.4"],"lastbaseupdate后面":["23.4"],"当":["23.5"],"阶段被中断后重新开始时":["23.5"],"会基于":["23.5"],"是整个应用的根节点":["23.6"],"是要渲染组件所在组件树的根节点":["23.6"],"创建fiber":["23.6"],"这一步发生在":["23.6"],"updatecontainer":["23.6"],"方法中":["23.6"],"可以看到":["23.6"],"setstate内会调用":["23.6"],"updater":["23.6"],"enqueuesetstate":["23.6"],"component":["23.6"],"partialstate":["23.6"],"callback":["23.6"],"作为官方的底层":["24.0"],"最为轻量":["24.0"],"而且改造成本小":["24.0"],"不会影响原来的组件层次结构和传说中的嵌套地狱":["24.0"],"类定义更为复杂":["24.0"],"不同的生命周期会使逻辑变得分散且混乱":["24.0"],"不易维护和管理":["24.0"],"时刻需要关注this的指向问题":["24.0"],"代码复用代价高":["24.0"],"通过一些途径产生":["24.1"],"更新":["24.1"],"更新会造成组件":["24.1"],"此处更新可分为以下两种情况":["24.1"],"action":["24.2","24.6"],"更新执行的函数":["24.2"],"保存hook对应的state":["24.4"],"initialstate":["24.4"],"与下一个hook连接形成单向无环链表":["24.4"],"ismount":["24.5"],"变量指代是":["24.5"],"mount":["24.5"],"还是":["24.5"],"update时":["24.6"],"找到对应hook":["24.6"],"update执行前的初始state":["24.6"],"获取update环状单向链表中第一个update":["24.6"],"firstupdate":["24.6"],"do":["24.6","54.0"],"执行update":["24.6"],"用于控制不同":["25.0"],"优先级":["25.0"],"之间的关系与行为":["25.0"],"从源码层面讲":["25.0"],"mode是一套可控的":["25.0"],"多优先级更新架构":["25.0"],"以下是基于concurrent":["25.0"],"mode的新功能":["25.0"],"修改全局数据":["26.0"],"实现思路":["26.0"],"用react":["26.0"],"createcontext":["26.0"],"定义一个全局数据对象":["26.0"],"value":["26.1"],"是整个代码的核心":["26.1"],"把将count":["26.1"],"dispatch暴露给所有子组件":["26.1"],"provider":["26.1"],"子组件a":["26.1"],"counter":["26.2"],"counterdisplay":["26.2"],"children":["26.3"],"usecontainer":["26.3"],"当前的视图的状态":["29.1"],"see":["29.2"],"you":["29.2"],"here":["29.2"],"拆分成两个步骤是为了做到与":["29.3"],"平台无关":["29.3"],"前端框架通常会抽离出一套抽象的元素操作的":["29.3"],"例如":["29.3","38.13"],"新增":["29.3"],"删除":["29.3"],"移动元素":["29.3"],"实现了细粒度的更新":["29.5"],"的最终目的":["29.6"],"其实是用于":["29.6"],"代码压缩":["29.7"],"打包":["29.7"],"编译有两个执行时机":["29.7"],"构建时编译":["29.7"],"aot":["29.7"],"编译":["30.1"],"将浏览器无法识别的es6等高级语法编辑成浏览器可识别的es5语法":["30.1"],"会报错":["30.2"],"syntaxerror":["30.2"],"cannot":["30.2"],"use":["30.2","30.12","30.13"],"statement":["30.2"],"outside":["30.2"],"exports":["30.3","30.14"],"entry":["30.3","30.14"],"打包入口":["30.3"],"output":["30.3"],"看一下执行打包命令":["30.4"],"是什么结果":["30.4"],"果然报错了":["30.4"],"currently":["30.4"],"no":["30.4"],"loaders":["30.4"],"are":["30.4"],"configured":["30.4"],"commonjs通过module":["30.5"],"exports导出模块":["30.5"],"require":["30.5","31.0"],"webpack":["30.6"],"config":["30.6","36.9"],"path":["30.7","111.0"],"1620cdcbd73ea3873287":["30.8"],"表示本次打包的hash值":["30.8"],"因此生成的文件名就是":["30.8"],"eaf163aa8342f012d6ee":["30.8"],"表示的是chunk的名称":["30.8"],"打包过程中":["30.8"],"一个资源入代表":["30.8"],"一个chunk":["30.8"],"一个异步模块资源也代表一个chunk":["30.8"],"这里的":["30.8"],"chunk":["30.8"],"dev":["30.9","36.9"],"server":["30.9"],"开启一个本地服务器":["30.9"],"bundle":["30.10"],"3fa2":["30.10"],"dist":["30.10"],"在webpack中":["30.11"],"一切皆模块":["30.11"],"css":["30.12","30.13","37.3","38.0","38.9","38.12"],"style":["30.12","30.13"],"loader":["30.12","30.13"],"mode":["30.12"],"rules":["30.13"],"执行":["30.14"],"暴露":["30.14"],"module":["30.14"],"在上面这个插件通用代码框架里面":["30.14"],"发现了两个对象":["30.14"],"一个是":["30.14"],"是webpack最核心的两个对象":["30.14"],"compiler对象":["30.14"],"对象是":["30.14"],"的编译器对象":["30.14"],"对象会在启动":["30.14"],"的时候被一次性的初始化":["30.14"],"对象中包含了所有":["30.14"],"可自定义操作的配置":["30.14"],"的配置":["30.14"],"的配置等各种原始":["30.14"],"配置等":["30.14"],"插件中的自定义子编译流程中":["30.14"],"我们肯定会用到":["30.14"],"对象中的相关配置信息":["30.14"],"我们相当于可以通过":["30.14"],"对象拿到":["30.14"],"的主环境所有的信息":["30.14"],"compilation对象":["30.14"],"实例继承于":["30.14"],"幽灵依赖":["31.0"],"的问题":["31.0","37.2","42.5"],"也就是你明明没有声明在":["31.0"],"dependencies":["31.0"],"里的依赖":["31.0"],"但在代码里却可以":["31.0"],"进来":["31.0"],"并且同名的包只会提升一个版本的":["31.0"],"其余的版本依然会复制多次":["31.0"],"才能够针对性的解决性能问题":["32.0"],"axios的区别":["33.0"],"ajax和fetch的区别":["33.0","33.8"],"axios和fetch的区别":["33.0"],"headers":["33.1","33.7"],"received":["33.1"],"loading":["33.1"],"用来监控超时请求":["33.3"],"如果后台请求超时了":["33.3"],"该函数会被调用":["33.3"],"post":["33.4","36.17"],"和请求方式":["33.4"],"同步还是异步请求":["33.4"],"ipc":["33.5"],"来通知渲染进程":["33.5"],"渲染进程接收到消息之后":["33.5"],"会将":["33.5"],"store":["33.7"],"state":["33.7"],"authorization":["33.7"],"error":["33.7"],"响应拦截":["33.7"],"response":["33.7"],"如果返回的状态码为200":["33.7"],"说明接口请求成功":["33.7"],"可以正常拿到数据":["33.7"],"否则的话抛出错误":["33.7"],"status":["33.7"],"可以通过配置":["33.8"],"全局默认参数":["33.8"],"和实例化单个请求的方式实现不同场景下的不同请求类型":["33.8"],"只能通过手动修改参数和方法来实现相同的功能":["33.8"],"ajax和fetch都是用于向服务器发送请求并获取响应的技术":["33.8"],"它们的主要区别在于以下几点":["33.8"],"api设计":["33.8"],"ajax使用":["33.8"],"xhr":["33.8"],"将它们自动添加到":["34.0"],"几乎":["34.0"],"每个对相同域的请求中":["34.0"],"cookie的常见用处之一是身份验证":["34.0"],"登录后":["34.0"],"服务器在响应中使用":["34.0"],"来设置具有唯一":["34.0"],"会话标识符":["34.0"],"为了让":["34.1"],"浏览器关闭":["34.1"],"后仍然存在":["34.1"],"我们可以设置":["34.1"],"选项中的一个":["34.1"],"tue":["34.1"],"jan":["34.1"],"03":["34.1"],"就可以正确展示用户登录的状态信息了":["34.3"],"storage":["34.3"],"keep":["34.3"],"login":["34.3"],"简单地说":["34.3"],"如果服务器端发送的响应头内有":["34.3"],"的字段":["34.3"],"那么浏览器就会将该字段的内容":["34.3"],"保持到本地":["34.3"],"当下次客户端再往该服务器发送请求时":["34.3"],"客户端会自动在请求头中加入":["34.3"],"值后再发送出去":["34.3"],"服务器端发现客户端发送过来的":["34.3"],"的所有标签页和窗口之间共享数据":["34.5"],"它在同一标签页下的":["34.6"],"iframe":["34.6","36.17"],"对象上触发":["34.7"],"假设有两个窗口":["34.7"],"它们具有相同的页面":["34.7"],"在它们之间是共享的":["34.7"],"如果两个窗口都在监听":["34.7"],"onstorage":["34.7"],"那么每个窗口都会对另一个窗口中发生的更新作出反应":["34.7"],"在其他文档对同一存储进行更新时触发":["34.7"],"便与web服务器产生一次session":["34.8"],"大小不超过":["34.9"],"4kb":["34.9"],"用户唯一的身份标识":["34.10"],"time":["34.10"],"快速和稳定":["35.0"],"所以在设计现代浏览器的体系架构时":["35.0"],"需要解决这个问题":["35.0"],"从操作系统安全的视角来看浏览器的多进程架构":["35.0"],"如下图":["35.0"],"safe":["35.0"],"pic5":["35.0","40.5","42.12"],"这对于用户来说是非常危险的":["35.1"],"所以需要在渲染进程和操作系统之间建一道墙":["35.1"],"即便渲染进程由于存在漏洞被黑客攻击":["35.1"],"但由于这道墙":["35.1"],"将读取":["35.2"],"的信息发送给浏览器内核":["35.2"],"浏览器内核读取":["35.2"],"之后再将内容返回给渲染进程":["35.2"],"一些缓存文件的读写也是由浏览器内核实现的":["35.2"],"比如网络文件缓存的读取":["35.2"],"网络访问":["35.2"],"在渲染进程内部也是不能直接访问网络的":["35.2"],"如果要访问网络":["35.2"],"则需要通过浏览器内核":["35.2"],"浏览器内核在处理":["35.2"],"的站点":["35.3"],"这就导致了多个不同站点中的内容通过":["35.3"],"同时运行在同一个渲染进程中":["35.3"],"这将导致两个a级漏洞":["35.3"],"幽灵":["35.3"],"spectre":["35.3"],"让渲染进行没有访问操作系统的权利":["35.4"],"dom":["36.0"],"如何防范xss攻击":["36.0"],"csp":["36.0"],"httponly":["36.0"],"csrf攻击":["36.0"],"geekbang":["36.1"],"org":["36.1"],"category":["36.1"],"而不同源页面间不可以互相操作对方的dom":["36.2"],"不过在实际应用中":["36.2"],"经常需要两个不同源的":["36.2"],"之间进行通信":["36.2"],"于是浏览器中又引入了跨文档消息机制":["36.2"],"可以通过":["36.2"],"设为true":["36.3"],"即表示服务器明确许可":["36.3"],"cookie可以包含在请求中":["36.3"],"一起发给服务器":["36.3"],"这个值也只能设为true":["36.3"],"如果服务器不要浏览器发送cookie":["36.3"],"删除该字段即可":["36.3"],"需要":["36.3","113.0"],"浏览器和服务器":["36.3"],"同时支持":["36.3"],"目前":["36.3"],"所有浏览器都支持该功能":["36.3"],"整个":["36.3"],"通信过程":["36.3"],"头部中回发相同的源信息":["36.4"],"如":["36.4","38.2"],"allow":["36.5"],"methods":["36.5"],"允许的方法":["36.5"],"多个方法以逗号分隔":["36.5"],"支持所有类型的":["36.6"],"减少服务器对于是否跨域的计算量":["36.7"],"服务器会缓存预检请求的结果":["36.7"],"www":["36.8"],"host":["36.9","42.7"],"port":["36.9"],"用于开发环境下的转发请求":["36.9"],"更多请参考":["36.9"],"https":["36.9"],"vitejs":["36.9"],"source":["36.10"],"app":["36.10"],"medium":["36.10","36.16"],"然后通过":["36.11"],"xmlhttprequest":["36.11"],"或者":["36.11","103.0","115.0"],"加上":["36.11"],"cors":["36.11"],"功能将数据发送给恶意服务器":["36.11"],"恶意服务器拿到用户的":["36.11"],"xss代码会从服务器解析之后加载出来":["36.12"],"返回到浏览器做正常的html和js解析执行":["36.12"],"xss攻击就发生了":["36.12"],"用户打开带有恶意代码的":["36.13"],"网站服务端将恶意代码从":["36.13"],"页面的内容":["36.14"],"这种劫持类型很多":["36.14"],"限制加载其他域下的资源文件":["36.15"],"这样即使黑客插入了一个":["36.15"],"文件":["36.15"],"这个":["36.15","165.0"],"文件也是无法被加载的":["36.15"],"禁止向第三方域提交数据":["36.15"],"这样用户数据也不会外泄":["36.15"],"禁止执行内联脚本和未授权的脚本":["36.15"],"还提供了上报机制":["36.15"],"这样可以帮助我们尽快发现有哪些":["36.15"],"以便尽快修复问题":["36.15"],"开启csp的方式有":["36.15"],"设置":["36.15"],"geektime":["36.16"],"campaign":["36.16"],"那么浏览器会完全禁止第三方":["36.17"],"从第三方站点的链接打开和从第三方站点提交":["36.17"],"方式的表单这两种方式都会携带":["36.17"],"但如果在第三方站点中使用":["36.17"],"或者通过":["36.17"],"等标签加载的":["36.17"],"这些场景都不会携带":["36.17"],"的官方发行版":["37.0"],"特性和":["37.0"],"基本一样":["37.0"],"只存在一些产品层面差异":["37.0"],"启动一个程序的时候":["37.1"],"操作系统会为该程序创建一块内存":["37.1"],"用来存放代码":["37.1"],"运行中的数据和一个执行任务的主线程":["37.1"],"不稳定":["37.2"],"不流畅":["37.2"],"不安全":["37.2"],"早期浏览器需要借助于":["37.2"],"界面显示":["37.3"],"用户交互":["37.3"],"子进程管理":["37.3"],"同时提供存储等功能":["37.3"],"核心任务是将":["37.3"],"转换为用户可以与之交互的网页":["37.3"],"排版引擎":["37.3"],"blink":["37.3"],"运行在安全沙箱中":["37.4"],"要详细的说的话":["37.4"],"可以从下面这几个方面讲":["37.4"],"缓存":["37.4","39.3","42.0"],"强缓存":["37.4"],"协商缓存":["37.4"],"启发式缓存":["37.4"],"dns解析":["37.4"],"域名到ip地址的转换的过程":["37.4"],"如果有cdn":["37.4"],"还要加上cdn":["37.4"],"内容分发网络":["37.4"],"tcp三次握手":["37.4"],"http通信":["37.4"],"生成渲染树":["37.4"],"浏览器屏幕绘制":["37.4"],"tcp四次挥手":["37.4"],"具体过程如下":["37.4"],"在浏览器地址栏中输入url":["37.4"],"浏览器进程":["37.4"],"我们编写好":["38.0"],"等文件":["38.0"],"经过浏览器就会显示出漂亮的页面":["38.0"],"由于渲染机制过于复杂":["38.0"],"所以渲染模块在执行过程中会被划分为很多子阶段":["38.0"],"pic9":["38.1"],"构建":["38.1"],"查看stylesheets结构":["38.2"],"转换样式表中的属性值":["38.2"],"使其标准化":["38.2"],"文本中有很多属性值":["38.2"],"2em":["38.2"],"blue":["38.2"],"bold":["38.2"],"这些类型数值不容易被渲染引擎理解":["38.2"],"之后":["38.3"],"就需要计算出":["38.3"],"pic12":["38.4"],"为了构建布局树":["38.4"],"浏览器大体上完成了下面这些工作":["38.4"],"other":["38.6"],"pic13":["38.6"],"所谓":["38.8"],"结构":["38.9"],"渲染引擎将":["38.9"],"样式表转化为浏览器可以理解的":["38.9"],"stylesheets":["38.9"],"计算出":["38.9"],"高":["38.10"],"边距":["38.10"],"背景色":["38.11"],"transform":["38.12"],"createdocumentfragment":["38.13"],"或者使用框架":["38.13"],"cdn缓存策略":["39.0"],"服务器性能带来的访问延迟问题":["39.1"],"适用于站点加速":["39.1"],"告诉用户向这台设备发起请求":["39.2"],"区域负载均衡设备会为用户选择一台合适的服务器提供服务":["39.2"],"并将该":["39.2"],"服务器的ip地址":["39.2"],"返回给":["39.2"],"全局负载均衡设备":["39.2"],"选择的依据包括":["39.2"],"根据用户ip地址":["39.2"],"回源":["39.3"],"cache":["39.4","40.6"],"图片等不需要业务服务器进行计算即得的资源":["39.5"],"直播传送":["39.5"],"直播本质上是使用流媒体进行传送":["39.5"],"从输入域名到返回结果":["39.6"],"经历的每一步":["39.6"],"etag":["40.0"],"none":["40.0"],"match":["40.0"],"总结":["40.0","40.8"],"强缓存和协商缓存":["40.0","40.8"],"启发式缓存阶段":["40.0"],"还可能会对content":["40.1"],"cors等其他特征做校验":["40.1"],"disk":["40.1"],"存储在硬盘中的缓存":["40.1"],"胜在容量和存储时效性上":["40.1"],"它会根据":["40.1"],"返回200":["40.3"],"重新返回":["40.3"],"资源和缓存标识":["40.3"],"再存入浏览器缓存中":["40.3"],"生效则返回":["40.3"],"not":["40.3","54.0"],"的产物":["40.4"],"受限于本地时间":["40.4"],"如果修改了本地时间":["40.4"],"可能会造成缓存失效":["40.4"],"举个例子":["40.5"],"图中cache":["40.5"],"control指定了":["40.5"],"字段":["40.7"],"服务器会将if":["40.7"],"since的值与":["40.7"],"服务器中这个资源的最后修改时间":["40.7"],"会导致浏览器从一个服务器上获取得页面内容后到另一台服务器上进行验证时出现etag不匹配的情况":["40.8"],"对于强制缓存":["40.8"],"服务器通知浏览器一个":["40.8"],"缓存时间":["40.8"],"在缓存时间内":["40.8"],"下次请求":["40.8"],"直接用缓存":["40.8"],"不在时间内":["40.8"],"执行比较缓存策略":["40.8"],"对于协商缓存":["40.8"],"将缓存信息中的etag和last":["40.8"],"modified通过请求发送给服务器":["40.8"],"由":["40.8"],"服务器校验":["40.8"],"network":["41.0","42.2","42.12"],"报文之后":["41.1"],"会发送":["41.1"],"报文作为应答":["41.1"],"并且指定自己的初始化序列号":["41.1"],"同时会把客户端的":["41.1"],"报文给客户端":["41.2"],"客户端接收该报文":["41.2"],"客户端确认了":["41.2"],"自己发送":["41.2"],"然后":["41.3"],"疯狂重复发":["41.3"],"报文":["41.3"],"ip":["41.4"],"地址":["41.4"],"并向服务端疯狂发送syn":["41.4"],"若等待一段时间仍未收到客户确认包":["41.5"],"就进行第二次重传":["41.5"],"且把客户端的序号值":["41.6"],"报文的序列号值":["41.6"],"表明已经收到客户端的报文了":["41.6"],"此时服务端处于":["41.6"],"close":["41.6"],"等待从本地用户发来的连接中断请求":["41.6"],"此时的":["41.6"],"处于半关闭状态":["41.6"],"客户端到服务端的连接释放":["41.6"],"客户端收到服务端的确认后":["41.6"],"不就不够了吗":["41.7"],"为什么要等待":["41.7"],"将请求转发给":["41.8"],"本地域名服务器":["41.8"],"ldns来解析这个域名":["41.8"],"在本地域名服务器上查看域名":["41.8"],"是否本地解析":["41.8"],"是则本地解析返回":["41.8"],"否则在":["41.8"],"本地dns服务器的缓存":["41.8"],"中查找":["41.8"],"有则返回":["41.8"],"1特性":["42.0"],"内容协商":["42.0"],"cookie安全机制":["42.0"],"1的瓶颈":["42.0"],"端口和服务器建立":["42.1"],"连接":["42.1"],"而建立连接的过程就是":["42.1"],"协议三次握手":["42.1"],"的过程":["42.1"],"建立好连接之后":["42.1"],"会发送一个":["42.1"],"请求行的信息":["42.1"],"发送请求时":["42.2"],"会带上请求头信息":["42.2"],"服务器返回数据时":["42.2"],"会先返回响应头信息":["42.2"],"0的请求过程如下":["42.2"],"pic3":["42.2"],"持久连接":["42.4"],"在http":["42.4"],"队头阻塞":["42.5"],"分块传输编码":["42.8"],"在服务器向客户返回一个部分响应":["42.9"],"它必须描述响应覆盖的范围和整个实体长度":["42.9"],"http协议本身不支持断点上传":["42.9"],"需要自己实现":["42.9"],"用于指定第一个字节和最后一个字节的位置":["42.9"],"格式如下":["42.9"],"unit":["42.9"],"first":["42.9"],"byte":["42.9"],"pos":["42.9"],"last":["42.9"],"包括语言":["42.10"],"编码":["42.10","44.0"],"队头阻塞的问题":["42.11"],"会导致http":["42.11"],"1对":["42.11"],"带宽的利用率却并不理想":["42.11"],"的概念":["42.12"],"而":["42.13"],"最初就是为了单连接而设计的":["42.13"],"如果在数据传输的过程中":["42.13"],"有一个数据因为网络故障或者其他原因而丢包了":["42.13"],"那么整个":["42.13"],"的连接就会处于":["42.13"],"暂停状态":["42.13"],"需要等待丢失的数据包被重新传输过来":["42.13"],"把这种现象称为":["42.13"],"上的队头阻塞":["42.13"],"基于tcp协议对http":["42.13"],"0会面临以下问题":["42.13"],"tcp的队头阻塞":["42.13"],"tcp建立连接的延时":["42.13"],"tcp协议的僵化":["42.13"],"所以为了解决以上问题":["42.13"],"0选择udp协议":["42.13"],"基于":["42.13"],"udp":["42.13"],"变更密码规范协议":["43.0"],"扩展协议":["43.0"],"等几个子协议组成":["43.0"],"综合使用了":["43.0"],"身份认证":["43.0"],"等许多密码学前沿技术":["43.0"],"加密和解密的秘钥使用的是同一个":["43.0"],"因此对称加密算法要保证安全性的话":["43.0"],"密钥要做好保密":["43.0"],"只能让使用的人知道":["43.0"],"不能对外公开":["43.0"],"与对称加密算法不同":["43.0"],"非对称加密算法需要两个密钥":["43.0"],"公开密钥":["43.0"],"publickey":["43.0"],"和私有密钥":["43.0"],"privatekey":["43.0"],"公钥进行":["43.0"],"加密":["43.0"],"私钥进行":["43.0"],"解密":["43.0"],"公开密钥可供任何人使用":["43.0"],"私钥只有你自己能够知道":["43.0"],"https中":["43.0"],"作用在":["43.0"],"安全层握手协商阶段":["43.0"],"也就是红色部分":["43.0"],"如果服务器响应":["44.0"],"continue":["44.0"],"然后发":["44.0"],"body":["44.0"],"火狐浏览器除外":["44.0"],"它的":["44.0"],"请求只发一个":["44.0"],"包":["44.0"],"这会导致在传输层中出现两次tcp连接":["44.0"],"对于tcp来说":["44.0"],"通信次数越多可靠性越低":["44.0"],"能在一次连接中传输完需要的消息是最可靠的":["44.0"],"只能进行":["44.0"],"number":["45.0","50.0","52.0","53.0","82.0","165.0","179.0"],"targetsum":["45.0","53.0"],"boolean":["45.0","51.0","53.0","63.0"],"haspathsum":["45.0","53.0"],"tmp":["45.0","53.0","126.0"],"sum":["45.0","53.0"],"max":["46.0","63.0","89.0","163.0"],"sort":["46.0","91.0","94.0","136.0","163.0"],"param":["47.0","48.0","50.0","51.0","52.0","55.0","60.0","61.0","82.0","160.0","165.0","172.0","179.0"],"nums":["50.0","110.2"],"sortedarraytobst":["50.0"],"isbalanced":["51.0"],"anything":["54.0"],"modify":["54.0"],"in":["54.0","142.0"],"place":["54.0","142.0","148.0"],"instead":["54.0","142.0","148.0"],"flatten":["54.0"],"traverse":["54.0","58.0","111.0","112.0"],"遍历思想":["55.0"],"connect":["55.0"],"inverttree":["58.0"],"前序位置":["58.0"],"交换左右子节点":["58.0"],"isvalidbst":["63.0"],"isvalid":["63.0"],"infinity":["63.0","73.0","74.0","137.0"],"限定以":["63.0"],"为根的子树节点必须满足":["63.0"],"mid":["64.0","120.2","124.0"],"arr":["65.0","119.3"],"getarr":["65.0"],"也都不可能是素数了":["66.0"],"countprimes":["66.0"],"布尔数组":["66.0"],"初始时所有下标对应的值都为":["66.0"],"isprime":["66.0"],"fill":["67.0","74.0","76.0","77.0","81.0","86.0","98.0","99.0","100.0","130.0"],"后缀乘":["67.0"],"j":["68.0","82.0","87.1","119.2","126.0"],"按位相乘":["68.0"],"mul":["68.0"],"以运算符为中心":["69.0"],"分割成两个字符串":["69.0"],"分别递归计算":["69.0"],"left":["69.0","119.5","141.0","144.0","154.0"],"merge":["70.0","119.4"],"合并":["70.0"],"自底向上遍历":["71.0","97.0"],"numsquares":["72.0"],"map":["72.0","76.0","77.0","81.0","86.0","98.0","99.0","100.0","114.0","170.0"],"查备忘录":["73.0"],"防止重复计算":["73.0"],"做选择":["73.0","110.0"],"选择需要硬币最少的那个结果":["73.0"],"len":["74.0","95.0","119.3","123.0","136.0"],"最后一个格子只需要0步就能到达":["74.0"],"自底向上计算":["75.0"],"但是这类问题穷举有点特别":["79.0"],"因为这类问题存在":["79.0"],"重叠子问题":["79.0"],"如果暴力穷举的话效率会极其低下":["79.0"],"贪心没有":["79.1"],"状态推导":["79.1"],"自顶向下":["79.2"],"base":["79.3"],"需要先卖出":["80.1"],"这里我们只在买入的时候需要将":["80.3"],"code":["82.0","179.0"],"start":["82.0","179.0"],"lengthoflis":["82.0"],"dp":["83.0"],"反正遍历保证正确的转移状态":["84.0"],"为什么不是dp":["85.0","132.0","158.0"],"呢":["85.0","132.0","158.0"],"因为子数组一定是连续的":["85.0","132.0","158.0"],"所以dp":["85.0","132.0","158.0"],"有两种":["85.0","132.0","158.0"],"选择":["85.0","110.0","132.0","158.0"],"要么与前面的相邻子数组连接":["85.0","132.0","158.0"],"形成一个和更大的子数组":["85.0","132.0","158.0"],"要么不与前面的子数组连接":["85.0","132.0","158.0"],"自成一派":["85.0","132.0","158.0"],"自己作为一个子数组":["85.0","132.0","158.0"],"maxsubarray2":["85.0","132.0","158.0"],"n":["86.0","88.0","93.0","175.0"],"不连续的":["87.0"],"一般来说":["87.0"],"子序列问题都是让你求一个":["87.0"],"最值":["87.2"],"涉及":["87.2"],"两个":["87.2"],"字符串":["87.2"],"数组的子序列用这种思路多一些":["87.2"],"最长公共子序列":["87.2"],"编辑距离":["87.2"],"问题":["87.2"],"rob":["88.0"],"math":["89.0","120.2"],"初始化dp":["89.0"],"起点相同的按照终点降序排序":["91.0"],"直到":["92.0"],"为空为止":["92.0"],"之前选出的那些":["92.0"],"就是最大不相交子集":["92.0"],"eraseoverlapintervals":["92.0"],"看起来最优的选择即可":["93.0"],"jump":["93.0"],"升序排序":["94.0"],"canjump":["95.0"],"farthest":["95.0"],"局部最优":["96.0"],"的选择":["96.0"],"最终的结果就是全局最优":["96.0"],"item":["100.0"],"动归":["102.0"],"带备忘录的递归":["102.0"],"个位置":["103.0","115.0"],"每个位置可以放置字符":["103.0","115.0"],"组成的所有括号组合中":["103.0","115.0"],"有多少个是合法的":["103.0","115.0"],"组合类问题":["103.0","115.0"],"generateparenthesis":["103.0","115.0"],"track":["103.0","108.0","109.0","115.0"],"对于每个位置可以是左括号或者右括号两种选择":["103.0","115.0"],"回溯算法的核心函数":["104.0","108.0","109.0"],"用于遍历子集问题的回溯树":["104.0","108.0","109.0"],"控制树枝的遍历":["104.0","108.0","109.0"],"避免产生重复子集":["104.0","108.0","109.0"],"backtrack":["104.0","105.0","106.0","110.0"],"结束条件":["105.0"],"中的元素全都在":["105.0"],"中出现":["105.0"],"触发结束条件":["105.0","106.0"],"不能这样写res":["106.0"],"用于记录结果":["107.0"],"用于记录回溯路径":["107.0"],"满足结束条件":["110.0","110.2","110.5"],"add":["110.0"],"of":["110.0","114.0","160.0","162.0"],"中的元素都是唯一的":["110.1"],"更新结果":["110.2","110.5","110.8"],"回溯算法标准框架":["110.2","110.5","110.8"],"中的元素可以存在重复":["110.4"],"剪枝逻辑":["110.6"],"每个元素可以被使用若干次":["110.7"],"图遍历框架":["111.0"],"s":["111.0","112.0"],"void":["112.0"],"graph":["112.0"],"needright":["113.0"],"的个数":["113.0"],"的括号字符串组合":["117.0"],"快速排序":["119.0"],"为什么是len":["119.2"],"因为当前已经有i个元素被排序了":["119.2"],"splice":["119.5"],"删除mid":["119.5"],"right":["119.5","141.0","144.0","154.0","155.0","159.0"],"二叉查找树":["120.0"],"round":["120.2"],"前文":["121.0"],"单链表的六大解题套路":["121.0"],"都涵盖了":["121.0"],"比如链表环判断":["121.0"],"searchinsert":["123.0"],"因为搜索区间是":["124.0"],"所以只有当left":["124.0"],"right时":["124.0"],"所有的区间才会被覆盖到":["124.0"],"收缩右侧边界":["125.0"],"判断":["125.0"],"是否存在于":["125.0"],"比所有数都大":["125.0"],"返回":["125.0"],"判断一下":["125.0"],"是不是":["125.0"],"不是则返回":["125.0"],"寻找右边界的二分查找":["125.0"],"这里是j":["126.0"],"右边":["127.0"],"从上到下":["127.0"],"x轴固定为right":["127.0"],"x轴由matrix":["127.0"],"中的第二个中括号决定":["127.0"],"下边":["127.0"],"然后再对矩阵的每一行进行反转":["128.0"],"charcodeat":["134.0"],"从左到右扫描字符串":["134.0"],"更新最大面积":["135.0"],"当l":["135.0"],"r时":["135.0"],"循环结束":["135.0"],"maxarea":["135.0"],"area":["135.0"],"数组的长度大于3":["136.0"],"给数组排序":["136.0"],"一层循环":["136.0"],"head":["137.0","171.0","172.0"],"一个在前":["138.0"],"一个在后":["138.0"],"同时走":["138.0"],"这样当快指针走完的时候":["138.0"],"慢指针就来到了链表的中间位置":["138.0"],"思路2":["138.0"],"遍历列表":["138.0"],"记录链表长度":["138.0"],"进而计算链表中间结点的下标":["138.0"],"注意偶数结点的时候":["138.0"],"得到的是中间的第二个结点":["138.0"],"然后再遍历一次":["138.0"],"来到所要求结点的位置":["138.0"],"两指针互相靠拢":["139.0"],"找右边界":["140.0"],"twosum":["141.0"],"思路":["142.0","172.0","174.0"],"左右指针":["142.0"],"reversestring":["142.0"],"str":["143.0"],"helper":["144.0"],"wo":["145.0"],"xie":["145.0"],"le":["145.0"],"3c789":["145.0"],"走在前面探路":["146.0"],"找到一个不重复的元素就赋值给":["146.0"],"并让":["146.0"],"前进一步":["146.0"],"removeduplicates":["146.0"],"快慢指针":["147.0","148.0","172.0","174.0"],"removeelement":["147.0"],"movezeroes":["148.0"],"除了让你在有序数组":["149.0"],"及以后的整个数组都进行修改":["150.0","151.0"],"那么就不需要再给":["150.0","151.0"],"数组减":["150.0","151.0"],"了":["150.0"],"返回结果数组":["150.0"],"根据差分数组构造结果数组":["150.0"],"可以是负数":["151.0"],"increment":["151.0"],"说明是对":["151.0"],"这样构造差分数组":["152.0"],"就可以":["152.0"],"快速进行区间增减的操作":["152.0"],"如果你想对区间":["152.0"],"的元素全部加":["152.0"],"那么只需要让":["152.0"],"然后再让":["152.0"],"longestones":["153.0"],"e":["154.0"],"u":["154.0"],"是将移入窗口的字符":["155.0","156.0","157.0","159.0"],"增大窗口":["156.0","157.0","161.0"],"valid":["157.0","159.0","162.0"],"变量表示窗口中满足":["157.0","159.0"],"条件的字符个数":["157.0","159.0"],"minwindow":["160.0"],"need":["160.0"],"用来记录t中字符出现次数":["160.0"],"方便后续的判断":["160.0"],"记录":["160.0","162.0"],"中的相应字符的出现次数":["160.0","162.0"],"进行窗口内数据的一系列更新":["161.0"],"窗口":["162.0"],"统计t中字符频数":["162.0"],"交换两元素":["164.0"],"less":["164.0"],"比较两元素大小":["164.0"],"这几个基础的方法之外":["164.0"],"还有四个关键的方法":["164.0"],"swim":["164.0"],"上浮":["164.0"],"sink":["164.0"],"下沉":["164.0"],"移出":["165.0"],"即可":["165.0","179.0"],"而这只会发生在":["165.0"],"lrucache":["165.0"],"key":["165.0"],"maxslidingwindow":["166.0"],"单调队列":["166.0"],"返回结果":["166.0"],"remove":["167.0"],"比如说函数调用栈":["168.0"],"如果快指针最终为null":["169.0"],"则不存在环":["169.0"],"如果":["169.0"],"fast":["169.0"],"最终和":["169.0"],"slow":["169.0"],"相遇":["169.0"],"那肯定是":["169.0"],"超过了":["169.0"],"使用额外空间的版本":["170.0"],"用":["170.0"],"记录一个链表的所有节点":["170.0"],"然后和另一条链表对比":["170.0"],"mergetwolists":["171.0"],"当需要创造一条新链表的时候":["171.0"],"可以使用虚拟头结点简化边界情况的处理":["171.0"],"partition":["173.0"],"存放小于":["173.0"],"的链表的虚拟头结点":["173.0"],"dummy1":["173.0"],"存放大于等于":["173.0"],"两个指针":["174.0"],"寻找单链表的倒数第":["175.0"],"个节点":["175.0"],"lc19":["175.0"],"删除链表的倒数第":["175.0"],"个结点":["175.0"],"next":["176.0"],"8f30d":["177.0"],"ru":["177.0"],"he":["177.0"],"ge":["177.0"],"d591d":["177.0"],"reversekgroup":["177.0"],"反转链表的一部分":["178.0"],"lc92":["178.0"],"递归的方式没看懂":["178.0"],"用普通的指针的方式解答":["178.0"],"代码如下":["178.0"],"reversebetween":["178.0"],"r":["179.0"],"solution":["179.0"],"缓存nums数组":["179.0"],"缓存数组长度":["179.0"],"这样在":["181.0"],"区间内等概率随机选取一个值":["181.0"],"target":["181.0"],"floor":["181.0"],"获取":["181.0"],"在前缀和数组":["181.0"],"中的索引":["181.0"],"别忘了前缀和数组":["181.0"]},{"0":["3.2","5.12","7.18","21.6","42.11","67.0","72.0","74.0","78.0","88.0","92.0","93.0","95.0","101.0","106.0","117.0","119.5","123.0","142.0","146.0","147.0","148.0","166.0","178.0"],"1":["0.6","3.2","7.0","7.25","21.6","21.9","23.2","26.1","41.7","42.12","54.0","71.0","78.0","80.3","95.0","96.0","97.0","101.0","111.0","141.0","156.0","171.0"],"2":["0.2","1.2","2.2","3.2","3.5","7.0","20.2","21.5","22.15","34.0","36.11","36.17","37.4","38.10","42.0","74.0","78.0","79.2","101.0","113.0","124.0","145.0","164.0"],"3":["0.1","2.9","4.6","5.12","7.0","16.2","21.1","21.5","21.8","22.0","22.4","22.13","24.0","26.0","34.0","36.4","36.13","36.15","37.4","38.9","41.6"],"4":["3.5","4.6","7.15","7.20","21.1","22.4","33.1","37.1","38.9","38.13","41.8"],"5":["2.8","4.6","7.15","7.20","33.5","41.8","175.0"],"6":["39.2"],"7":["39.2"],"12":["7.1"],"14":["34.1"],"18":["8.10"],"22":["40.4"],"50":["23.0","42.13"],"60":["35.0"],"70":["15.3"],"80":["2.6","40.6"],"101":["44.0"],"124":["7.16"],"200":["33.1"],"216":["36.10","36.16"],"304":["33.1"],"401":["33.7"],"500":["4.8"],"2014":["12.0"],"2018":["40.4"],"2028":["12.0"],"3000":["36.9"],"3600":["34.1"],"优先级大于":["0.0"],"变量提升的":["0.0"],"即函数提升在变量提升之上":["0.0"],"注意":["0.0","41.5"],"对于":["0.0","20.14"],"来说":["0.0"],"只是将":["0.0"],"声明":["0.0"],"提升到作用域最顶端":["0.0"],"并不会把":["0.0"],"赋值":["0.0"],"也提升上来":["0.0"],"函数定义有声明式和函数字面量式":["0.0"],"只有":["0.0"],"才存在函数提升":["0.0"],"js":["0.0","0.6","1.9","5.8","7.19","10.5","20.18","21.0","22.10","23.2"],"console":["0.0","4.5","7.19","8.6","22.18","156.0","162.0"],"log":["0.0","4.5","7.19","8.6","22.18","156.0","162.0"],"x":["0.0","94.0"],"undefined":["0.0","1.8"],"赋给它":["0.1"],"接着执行立即函数调用表达式中的打印语句":["0.1"],"输出":["0.1"],"为100":["0.1"],"接着执行后面的打印语句":["0.1"],"此时":["0.1","1.8"],"的值已经由":["0.1"],"被修改为了":["0.1"],"本应销毁的变量没有被销毁":["0.2"],"foo":["0.2","0.7"],"for":["0.2","5.12","66.0","67.0","72.0","74.0","78.0","82.0","83.0","85.0","86.0","89.0","93.0","95.0","101.0","105.0","106.0","108.0","109.0","110.2","116.0","123.0","132.0","143.0","158.0"],"i":["0.2","5.12","22.18","66.0","83.0","89.0","95.0","106.0","110.2","110.5","117.0","123.0","140.0","143.0","177.0"],"函数作用域":["0.3"],"在执行该函数时创建的":["0.3"],"并且定义的变量或者函数只能在函数内部被访问":["0.3"],"当函数执行结束之后":["0.3"],"在函数的作用域块内部":["0.4"],"声明的变量并没有被存放到词法环境中":["0.4"],"词法环境和变量环境中查找变量的方式是":["0.4"],"先词法环境":["0.4"],"再变量环境":["0.4"],"例子1":["0.4"],"img":["0.4","15.1","15.2","19.2","20.1","37.0","38.0","40.0","42.13","110.0"],"src":["0.4","15.1","15.2","19.2","33.6","37.0","38.0","40.0","42.13","110.0","128.0"],"picture":["0.4","15.1","15.2","19.2","33.6","38.7","40.0","42.13","128.0"],"pic11":["0.4","38.2"],"png":["0.4","15.2","15.3","23.0","42.13","110.0","128.0","128.1"],"例子2":["0.4","21.9"],"myname":["0.4"],"极客时间":["0.4"],"的执行过程中":["0.5"],"主要有三种类型内存空间":["0.5"],"分别是":["0.5"],"代码空间":["0.5"],"的数据则是复制":["0.6"],"引用地址":["0.6"],"看下面的例子":["0.6"],"let":["0.6","0.12","50.0","58.0","59.0","72.0","78.0","82.0","90.0","93.0","94.0","101.0","123.0","142.0","146.0","147.0","148.0","165.0","171.0","172.0","173.0","176.0","179.0"],"obj":["0.6","7.25","10.6"],"a":["0.6","21.7","23.2","36.8","92.0","161.0"],"code1":["0.7"],"栈溢出的错误":["0.7"],"因为循环嵌套调用了":["0.7"],"导致栈无限增":["0.7"],"进而导致栈溢出的错误":["0.7"],"code2":["0.7"],"正常执行":["0.7"],"因为":["0.7","81.0"],"settimeout":["0.7","0.12"],"我们会把该":["0.8"],"地址保存在栈":["0.8"],"中":["0.8","9.1","64.0"],"不过堆内存虽然空间大":["0.8"],"能存放大量的数据":["0.8"],"但与此同时":["0.8"],"垃圾内存的回收会带来更大的开销":["0.8"],"在":["0.8","1.0","24.4","33.0"],"并不会为其生成":["0.9"],"ast":["0.9"],"api":["0.10","0.12","1.2","30.14"],"即浏览器提供的一套操作浏览器功能和页面元素的接口":["0.10"],"提供了不同的宿主对象和宿主的":["0.10"],"但是整个流程依然是相同的":["0.10"],"比如":["0.10","1.2","5.8"],"也会提供一套消息循环系统":["0.10"],"也会提供一个运行时的主线程":["0.10"],"而":["0.10","16.2"],"的核心是实现了":["0.10"],"ecmascript":["0.10"],"标准":["0.10"],"v8提供了":["0.10"],"定义的一些对象和一些":["0.10"],"核心的函数":["0.10"],"包括了":["0.10"],"object":["0.10","7.16","23.6"],"string":["0.10","21.3"],"除此之外":["0.10","7.20"],"v8不理解js源码":["0.11"],"需将其结构化到":["0.11"],"是便于v8理解的结构":["0.11"],"同时还会生成相关":["0.11"],"作用域":["0.11"],"词法环境被用来存储函数声明和变量":["0.12"],"和":["0.12","1.0","1.1","2.1","30.8","34.3","35.0","40.8","42.13","64.0"],"const":["0.12","1.9","21.0","48.0","50.0","51.0","135.0","138.0","141.0","143.0"],"绑定":["0.12"],"变量环境也是一个词法环境":["0.12"],"但不同的是词法环境被用来存储函数声明和变量":["0.12"],"而变量环境只用来存储":["0.12"],"var":["0.12","8.13","8.14","8.15","11.0","30.6","47.0","48.0","52.0","56.0","57.0","60.0","61.0","62.0","90.0","138.0","169.0","172.0"],"变量绑定":["0.12"],"比如在浏览器的环境中":["0.12"],"全局执行上下文":["0.12"],"中就包括了":["0.12"],"默认指向":["0.12"],"的":["0.12","5.12","22.11","22.17","34.0"],"关键字":["0.12"],"还有一些":["0.12"],"web":["0.12","34.3","36.0","37.2"],"诸如":["0.12"],"xmlhttprequest":["0.12","1.0","35.2"],"等内":["0.12"],"容":["0.12"],"词法环境中":["0.12"],"则包含了使用":["0.12"],"等变量的内容":["0.12"],"全局执行上下文在":["0.12"],"的生存周期内是不会被销毁的":["0.12"],"它会一直保存在":["0.12"],"其典型代表是":["1.0"],"函数内部封装回调消息":["1.0"],"并将回调消息添加进消息队列":["1.0"],"然后主线程从消息队列中取出回调事件":["1.0"],"并执行回调函数":["1.0"],"即":["1.1"],"先进来的先执行":["1.1"],"另外":["1.1","2.7","79.0"],"队列又分为两种":["1.1"],"普通任务队列":["1.1"],"延迟队列":["1.1"],"其中延迟队列是专门用来处理比如":["1.1"],"dom":["1.2","20.18","29.3"],"树所做更改的能力":["1.2"],"以及以":["1.2"],"为基础开发的其他技术":["1.2"],"fetch":["1.2","33.8","35.2"],"还包括":["1.2"],"queue":["1.3"],"中是否有任务":["1.3"],"取微任务队列全部任务依次执行":["1.4"],"取下一个宏任务队列里的任务执行":["1.4"],"任务":["1.5"],"会将该微任务添加进微任务队列":["1.5"],"然后执行":["1.5"],"方法":["1.5","7.9","29.2","42.12"],"该方法会触发了一个":["1.5"],"宏":["1.5"],"会将该宏任务添加进消息队列":["1.5"],"eventloop2":["1.5"],"函数调用了":["1.5"],"函数":["1.5"],"那么":["1.5"],"需要再创建":["1.5"],"并将其压入栈中":["1.5"],"也是先执行同步代码":["1.5"],"导致消息队列中其他的宏任务是无法被执行的":["1.6"],"具体体现为页面":["1.6"],"卡死":["1.6"],"但":["1.6"],"不会造成栈溢出错误":["1.6"],"因为由于":["1.6"],"v8":["1.6","2.4","37.3"],"每次执行微任务时":["1.6"],"都会退出当前foo函数的调用栈":["1.6"],"异步编程发展史":["1.6"],"some":["1.7","1.9"],"code":["1.7"],"if":["1.7","15.5","22.5","22.10","22.13","23.6","26.3","33.1","34.7","45.0","47.0","48.0","50.0","51.0","52.0","53.0","54.0","55.0","63.0","65.0","81.0","84.0","85.0","90.0","103.0","105.0","107.0","111.0","113.0","115.0","119.2","119.3","120.1","120.2","124.0","132.0","134.0","137.0","146.0","155.0","157.0","158.0","159.0","165.0","170.0","171.0","173.0","181.0"],"异步操作成功":["1.7"],"传参会被忽略":["1.8"],"并且函数暂停在":["1.8"],"处":["1.8"],"所以返回":["1.8"],"当执行第二次":["1.8"],"传入的参数12就会被当作上一个yield表达式的返回值":["1.8"],"如果你不传参":["1.8"],"永远返回":["1.8"],"表达式的运算结果":["1.9"],"如果得到promise的":["1.9"],"reject":["1.9","33.7"],"值":["1.9"],"则报错并结束该函数的执行":["1.9"],"await下一条语句不会执行":["1.9"],"fn":["1.9"],"new":["1.9","3.0","3.5","7.1","8.2","8.13","8.14","11.0","66.0","82.0","85.0","89.0","90.0","102.0","132.0","158.0","178.0"],"后":["1.10","33.2","34.3"],"才会执行await的下一句语句":["1.10"],"并且":["1.10"],"await下一句语句会被当成微任务":["1.10"],"添加到":["1.10"],"当前":["1.10"],"任务队列的末尾异步执行":["1.10"],"其他顺序不变":["1.10"],"例题3":["1.10"],"t2":["1.10"],"t":["1.10"],"t1":["1.10"],"script":["1.10"],"任务先运行":["1.10"],"首先遇到":["1.10"],"实例":["1.10"],"构造函数首先执行":["1.10"],"所以首先输出了":["1.10"],"并行":["2.0"],"增量":["2.0"],"内存泄露":["2.0"],"常见的几种内存泄露情况":["2.0"],"如何发现内存泄露":["2.0"],"通过":["2.1"],"root":["2.1","56.0","57.0","60.0","61.0","62.0"],"标记空间中":["2.1"],"活动对象":["2.1"],"非活动对象":["2.1"],"目前":["2.1"],"采用的可访问性":["2.1"],"reachability":["2.1"],"算法来判断堆中的对象是否是活动对象":["2.1"],"可通过cg":["2.1"],"root访问到的是":["2.1"],"需在内存中保留":["2.1"],"否则":["2.1","5.10"],"是非活动对象":["2.1"],"不需要保留":["2.1"],"常见的gc":["2.1"],"root有":["2.1"],"相当于完成了内存整理操作":["2.2"],"垃圾数据直接回收即可":["2.2"],"pic4":["2.2"],"清除算法":["2.3"],"该算法的缺点很明显":["2.3"],"会产生大量":["2.3"],"不连续":["2.3"],"的内存碎片":["2.3"],"为了解决碎片过多会导致大对象无法分配到足够的连续内存的问题":["2.3"],"引入了另外一种算法":["2.3"],"这个算法的标记过程仍然与标记":["2.3"],"清除算法里的是一样的":["2.3"],"先标记可回收对象":["2.3"],"但后续步骤不是直接对可回收对象进行清理":["2.3"],"而是让所有存活的对象都向一端移动":["2.3"],"垃圾回收所消耗的时间":["2.4"],"等于总体辅助线程所消耗的时间":["2.4"],"辅助线程数量乘以单个线程所消耗的时间":["2.4"],"再加上一些同步开销的时间":["2.4"],"来标记数据":["2.5"],"如果内存中的数据只有两种状态":["2.5"],"非黑即白":["2.5"],"那么当你暂停了当前的垃圾回收器之后":["2.5"],"再次恢复垃圾回收器":["2.5"],"那么垃圾回收器就不知道从哪个位置继续开始执行了":["2.5"],"为了解决这个问题":["2.5"],"采用了三色标记法":["2.5"],"除了黑色和白色":["2.5"],"width":["2.6","15.3","23.0","35.0","40.6","42.13","80.0"],"并发回收的优势非常明显":["2.6"],"主线程":["2.6"],"不会被挂起":["2.6"],"再执行":["2.7"],"清理操作":["2.7"],"主线程在执行清理操作时":["2.7"],"多个辅助线程也在执行清理操作":["2.7"],"主垃圾回收器还采用了":["2.7"],"变量是被":["2.8"],"返回的函数调用了":["2.8"],"但是返回的函数没被使用":["2.8"],"这个场景下":["2.8"],"就属于垃圾内存":["2.8"],"不是必须的":["2.8"],"但是还是占用了内存":["2.8"],"也不可被回收":["2.8"],"正确使用闭包":["2.8"],"被遗忘的事件监听器":["2.8"],"demo":["2.8"],"react":["2.8","29.2","38.13"],"fc":["2.8"],"useeffect":["2.8","22.13"],"window":["2.8","36.2","38.13"],"addeventlistener":["2.8","34.7","36.11"],"resize":["2.8"],"这里做一些操作":["2.8"],"上面的组件销毁的时候":["2.8"],"事件还是在监听中":["2.8"],"里面涉及到的内存都是没法回收的":["2.8"],"memory":["2.9"],"这个面板有3个工具":["2.9"],"手写bind":["3.0"],"new生成一个对象的过程":["3.0"],"特点":["3.3"],"会返回一个新函数":["3.3"],"当这个新函数被调用时":["3.3"],"第一个参数将作为它运行时的":["3.3"],"之后的一序列参数将会在传递的实参前传入作为它的参数":["3.3"],"不会立即执行":["3.3"],"mybind":["3.3"],"获取参数":["3.3"],"为了传给调用者":["3.3"],"array":["3.3","6.3","66.0","82.0","83.0","85.0","89.0","102.0","132.0","158.0"],"构建一个干净的函数":["3.3"],"用于保存原函数的原型":["3.3"],"tmp":["3.3","58.0","65.0","119.2","161.0"],"保持this":["3.3"],"self":["3.3"],"instanceof":["3.3"],"判断是否使用":["3.3"],"来调用":["3.3"],"resfn":["3.3"],"如果是值类型":["3.4"],"返回obj":["3.4"],"新对象":["3.4"],"如果是引用类型":["3.4"],"就返回这个引用类型的对象":["3.4"],"typeof":["3.4","23.6"],"test":["3.5","8.3","8.13","8.15"],"haha":["3.5"],"c":["3.5","113.0","116.0","153.0","160.0","162.0"],"d":["3.5"],"用于处理异步":["4.0"],"解决回调函数的地狱式嵌套问题":["4.0"],"全新的数据结构和数据类型":["4.0"],"class":["4.0","23.0","152.0"],"类":["4.0"],"set":["4.0"],"声明后不能修改内存地址":["4.1"],"可修改属性成员":["4.1"],"math":["4.3","50.0","73.0","124.0","140.0"],"asyncsay":["4.8"],"这种使用方式是深拷贝":["4.9"],"true":["4.10","6.3","7.3","7.16","24.5","45.0","51.0","53.0","65.0","86.0","112.0","155.0"],"false":["4.10","7.18"],"删除某个属性":["4.12"],"generator":["4.13","20.11"],"async":["4.13","9.2"],"在子类的sayage中调用":["4.14"],"worker":["4.14"],"has等操作map":["4.16"],"产生冲突":["4.17"],"定义私有属性":["4.17"],"作用域链":["5.0"],"从ecmascript规范解读this":["5.0"],"当获取":["5.1"],"时":["5.1","7.21","40.3"],"其实":["5.1","20.11"],"com":["5.2","16.0"],"mqyqingfeng":["5.2"],"依然是从":["5.4"],"就从":["5.4"],"调用函数的作用域":["5.4"],"函数内部查找":["5.4"],"变量":["5.4"],"再看一个例子":["5.5"],"如果变量名称跟已经声明的形式参数或函数相同":["5.6"],"则变量声明不会干扰已经存在的这类属性":["5.6"],"总结":["5.6"],"全局上下文的变量对象初始化是全局对象":["5.6"],"bar":["5.7"],"因为foo是在全局环境中声明的":["5.7"],"所以foo":["5.7"],"的执行对象是window":["5.7"],"其中的一种":["5.8"],"referenced":["5.8"],"name":["5.8"],"属性的名称":["5.8"],"strict":["5.8","34.1"],"getvalue":["5.8"],"用于从":["5.8"],"类型获取对应值":["5.8"],"只有函数执行的时候才能确定this到底指向谁":["5.9"],"new创建对象的过程如下":["5.10"],"创建一个空对象":["5.10"],"从堆内存里开辟了一块内存":["5.10"],"绑定新对象的this":["5.10"],"让构造函数中的":["5.10"],"this指向这个空对象":["5.10"],"并执行构造函数函数体":["5.10"],"设置原型链":["5.10"],"将新创建的对象的":["5.10"],"proto":["5.10"],"成员指向构造函数对象的prototype成员对象":["5.10"],"返回对象":["5.10"],"如果构造函数执行结果有返回值并且是一个对象":["5.10"],"返回执行的结果":["5.10"],"返回新创建的对象":["5.10"],"blog":["5.11"],"issues":["5.11"],"内部":["5.12"],"仍然保持着原有的数据":["5.12"],"而当前的上下文可能无法获取原先外层函数中的数据":["5.12"],"使得函数内部的作用域链被保护起来":["5.12"],"从而形成":["5.12"],"例子":["5.12","20.18"],"data":["5.12"],"whilefn":["6.1"],"return":["6.1","7.25","8.1","9.0","22.5","34.7","47.0","48.0","56.0","57.0","60.0","61.0","62.0","112.0","120.2","130.0","150.0","169.0","172.0","174.0","176.0","180.0"],"await的语法糖里判断promise对象也是通过":["6.2"],"promise":["6.2"],"有这些问题的原因是":["6.3"],"array的原型是object":["6.3"],"而instanceof的实现原理是在原型链上遍历":["6.3"],"所以":["6.3","20.8","30.2","38.2"],"toboolean":["7.0"],"附录":["7.0"],"类型转换表":["7.0"],"js有8种数据类型":["7.0"],"null":["7.0","9.0","20.6","20.14","23.1"],"nndefined":["7.0"],"date":["7.1","11.0","40.8"],"g":["7.1","7.2"],"error":["7.2","23.6"],"reg":["7.2"],"regexp":["7.2"],"teacher":["7.4"],"input":["7.5"],"preferredtype":["7.5"],"123sd":["7.7"],"nan":["7.7","7.11","7.15"],"相当于调用数组的":["7.9"],"join":["7.9"],"ps":["7.9"],"如果字符串中包含有效的十六进制格式":["7.10"],"则将其转换为相同大小的":["7.10"],"十进制数":["7.10"],"空字符串":["7.11"],"则继续调用对象的tostring":["7.12"],"如果tostring":["7.12"],"表达式中包含以下运算符时":["7.13"],"会发生":["7.13"],"逻辑运算符":["7.13"],"转换为数字是":["7.15"],"变成5":["7.15"],"规则2":["7.16"],"规则3":["7.16"],"语句时":["7.17"],"我们期望表达式是一个boolean":["7.17"],"会先变成":["7.20"],"会首先变成":["7.20"],"undefined比较结果是true":["7.20"],"undefined和其他任何结果的比较值都为false":["7.20"],"原始类型和引用类型做比较时":["7.20"],"会从左到右一步一步解析":["7.21"],"根据规则5转换":["7.21"],"number":["7.21","56.0","57.0","60.0","61.0","62.0","150.0"],"按照上面原始类型转换规则":["7.21"],"会先调用valueof方法":["7.21"],"a的valueof方法继承自object":["7.21"],"prototype":["7.21","9.0","23.4","179.0","180.0"],"返回a本身":["7.21"],"而非原始类型":["7.21"],"故会调用tostring方法":["7.21"],"因为tostring被重写":["7.21"],"所以会调用重写的tostring方法":["7.21"],"故返回1":["7.21"],"注意这里是i":["7.21"],"判断的类型是否是string和number":["7.22"],"是的话":["7.22"],"把string类型转换成number":["7.22"],"再进行比较":["7.22"],"判断其中一方是否是boolean":["7.22"],"是的话就把boolean转换成number":["7.22"],"强制类型转换主要是通过调用全局函数来实现的":["7.23"],"例如":["7.23","152.0"],"function":["7.25","10.5","20.18","142.0"],"symbol":["7.26"],"都可以将非数字转化为数字":["7.27"],"规则同":["7.27"],"这6种情况转为布尔值结果为":["7.28"],"convert":["7.29"],"经典继承":["8.0"],"组合继承":["8.0"],"person1":["8.2","8.7"],"kevin":["8.2","8.10"],"test2":["8.4"],"push":["8.4","8.10","8.11","104.0","105.0","108.0","109.0","111.0","114.0","119.4","119.5"],"hahah":["8.4"],"this":["8.6","9.0","23.2","33.1","152.0"],"hanmeimei":["8.7"],"child2":["8.8","8.9"],"yunyun":["8.9"],"black":["8.10"],"rob":["8.11"],"yetanotherperson":["8.11"],"sayhi":["8.12"],"以某种方式来增强对象":["8.12"],"alert":["8.12","34.7"],"属性":["8.13","22.6","36.15"],"constructor":["8.13","8.15","152.0"],"指定对象":["8.13"],"将新创建的对象赋值给子类的原型":["8.13"],"child1":["8.13","8.14"],"ccg":["8.14"],"新增的父类原型对象":["8.15"],"promise实例方法":["9.0"],"用于指定出错时的回调":["9.0"],"是特殊的then方法":["9.0"],"catch之后":["9.0"],"可以继续":["9.0"],"onrejected":["9.0"],"不管成功还是失败":["9.0"],"都会走到finally中":["9.0"],"并且finally之后":["9.0"],"还可以继续then":["9.0"],"并且会将值原封不动的传递给后面的then":["9.0"],"finally":["9.0"],"进入到":["9.1"],"eventloop":["9.1"],"url2":["9.2"],"result1":["9.2"],"result2":["9.2"],"result3":["9.2"],"await":["9.2"],"async本质上是generator的语法糖":["9.2"],"自带一个状态机":["9.2"],"在await的部分":["9.2"],"等待":["9.2"],"返回":["9.2"],"返回后":["9.2"],"自动":["9.2"],"执行下一步":["9.2"],"内置了执行器":["9.2"],"而且相较于promise":["9.2"],"async的优越性就是把每次异步返回的结果从then中拿到最外层的方法中":["9.2"],"不需要链式调用":["9.2"],"只要用":["9.2"],"同步":["9.2","20.9"],"的写法就可以了":["9.2"],"更加直观而且":["9.2"],"更适合处理":["9.2"],"并发":["9.2"],"调用的问题":["9.2"],"mdn":["9.2"],"的定义":["9.2"],"是一个通过异步执行并隐式":["9.2"],"作为结果的函数":["9.2"],"await是基于":["9.2"],"实现的":["9.2","30.14"],"它不能用于普通的回调函数":["9.2"],"await与promise一样":["9.2"],"是非阻塞的":["9.2"],"await使得":["9.2"],"等":["10.0","30.9","38.11"],"基本数据类型":["10.0"],"值存储在":["10.0"],"栈":["10.0"],"内存中":["10.0"],"键和值的地址存储于在":["10.0"],"内存":["10.0"],"值存储于":["10.0"],"堆":["10.0"],"在javascript中":["10.0"],"它将返回目标对象":["10.1"],"concat":["10.1"],"浅拷贝数组":["10.1"],"item":["10.3","10.8"],"stringify":["10.4"],"的方法深拷贝":["10.5"],"shift":["10.8","119.4"],"copyobj":["10.8"],"keys":["10.8","161.0"],"foreach":["10.8"],"k":["10.8","69.0","80.1","121.0"],"context":["11.0"],"previous":["11.0"],"now":["11.0","34.7"],"arguments":["11.0"],"06":["12.0"],"厦门大学":["12.0"],"计算机技术":["12.0"],"硕士":["12.0"],"贵州大学":["12.0"],"计算机科学与技术":["12.0"],"本科":["12.0"],"技能清单":["12.0"],"用于覆盖率数据处理和报告生成":["12.1"],"配合公司cdn存储生成的文件":["12.1"],"并通过公司内部机器人进行消息提示":["12.1"],"使用kafka进行报告生成消息缓存":["12.1"],"antd搭建平台前端":["12.2"],"使用monaco":["12.2"],"editor":["12.2"],"babel等编写平台可视化编辑组件":["12.2"],"个人职责":["12.3"],"参与平台需求迭代":["12.3"],"完成需求前端部分工作开发":["12.3"],"和pm":["12.3"],"ui":["12.3","24.0"],"多多指教":["14.0"],"https":["15.0","34.1","35.2"],"www":["15.0"],"modb":["15.0"],"pro":["15.0"],"过程没有任何javascript代码的参与":["15.1"],"ferender":["15.1","15.2","15.3"],"pic1":["15.1","110.0"],"优点":["15.3","40.5"],"尽量不占用前端的资源":["15.3"],"实现服务端渲染需要注意以下几点":["15.4"],"服务器环境":["15.4"],"服务端渲染需要":["15.4"],"node":["15.4","30.13"],"运行环境":["15.4"],"matchpath":["15.5"],"方法进行匹配":["15.5"],"routeresult":["15.5"],"routes":["15.5"],"find":["15.5","181.0"],"route":["15.5"],"req":["15.5"],"next":["15.5","24.4"],"js会自动将页面代码分割成小块":["15.6"],"只在必须的时候才会加载这些代码块":["15.6"],"减少了无用的代码加载":["15.6"],"从而提高页面加载速度":["15.6"],"如何处理异步数据请求":["15.7"],"如何缓存服务端渲染后的内容":["15.7"],"你是否遇到过服务端渲染的性能问题":["15.7"],"path":["16.0","30.6"],"html5":["16.0","16.1"],"中的":["16.0","36.15","36.17","42.13"],"来实现路由的切换":["16.0"],"无论是哪种方式":["16.0"],"前端路由的实现都要依赖于":["16.0"],"javascript":["16.0","16.2","33.2"],"所以即使通过链接或页面跳转到新的路由":["16.1"],"也不会向服务器发送请求":["16.1"],"而只是在客户端进行页面切换":["16.1"],"history模式":["16.1"],"这种模式充分利用了":["16.1"],"history":["16.1"],"interface":["16.1"],"中新增的":["16.1"],"pushstate":["16.1"],"来改变历史记录":["16.2"],"方法可以向浏览器历史记录栈中添加一个新的状态记录":["16.2"],"则可以替换栈顶的状态记录":["16.2"],"都不会触发页面的刷新":["16.2"],"在初始化时":["16.2"],"需要调用":["16.2"],"createbrowserhistory":["16.2"],"request":["19.2"],"作为动态的工作单元":["20.0"],"fiber架构的工作原理":["20.0"],"双缓存":["20.0"],"怎么理解双缓存":["20.0"],"调用栈":["20.1"],"导致卡顿":["20.2"],"io瓶颈":["20.2"],"reactnative渲染器":["20.3"],"渲染app原生组件":["20.3"],"reacttest渲染器":["20.3"],"渲染出纯js对象用于测试":["20.3"],"reactart渲染器":["20.3"],"renderer":["20.4"],"渲染器":["20.4"],"scheduler还提供了多种调度优先级供任务设置":["20.5"],"部分浏览器已经实现了requestidlecallback这个api":["20.5"],"workinprogress":["20.6","22.10"],"performunitofwork":["20.6"],"那么react16是如何解决中断更新时dom渲染不完全的问题呢":["20.6"],"不会执行具体的视图操作":["20.8"],"即使有被中断的更新":["20.8"],"用户也不会看到更新不完全的视图":["20.8"],"当协调器完成了某次更新的工作":["20.8"],"协调器会通知渲染器执行对应的视图操作":["20.8"],"目的是为了实现将":["20.9"],"的更新变为":["20.9"],"可中断的异步":["20.9"],"更新":["20.9","20.18","22.14","22.16","25.0"],"采用了":["20.10"],"浏览器原生就支持类似的实现":["20.11"],"这就是":["20.11"],"但是generator的一些缺陷使react团队放弃了他":["20.11"],"类似async":["20.11"],"element":["20.12"],"保存了该组件的类型":["20.12"],"函数组件":["20.12"],"类组件":["20.12"],"原生组件":["20.12"],"对应的":["20.12"],"指向右边第一个兄弟fiber节点":["20.13"],"sibling":["20.13"],"elementtype":["20.14"],"functioncomponent":["20.14","22.9","22.18"],"memoizedstate":["20.15"],"dependencies":["20.15"],"中绘制当前帧动画":["20.17"],"绘制完毕后直接用当前帧替换上一帧画面":["20.17"],"替换":["20.18"],"完成":["20.18"],"fiber树的":["20.18"],"构建":["20.18"],"分为":["20.18"],"mount时":["20.18"],"update时":["20.18"],"app":["20.18"],"renderer工作的阶段被称为":["20.19"],"commit阶段":["20.19"],"就像你完成一个需求的编码后执行git":["20.19"],"上":["21.0","68.0"],"dom需要插入到页面中":["21.0"],"export":["21.0"],"placement":["21.0","21.8"],"fiber代表该dom节点对应的fiber节点":["21.1"],"dom节点本身":["21.1"],"h3":["21.2"],"song":["21.2"],"更新后":["21.2"],"调用":["21.3","24.1"],"reconcilesingleelement":["21.3"],"处理":["21.3"],"省略其他case":["21.3"],"习题3":["21.4"],"情况2":["21.5"],"节点类型更新":["21.5"],"节点新增或减少":["21.5"],"节点位置变化":["21.5"],"与fiber比较":["21.6"],"与fiber":["21.6"],"1未遍历":["21.7"],"步骤4跳出的遍历":["21.7"],"可能newchildren遍历完":["21.7"],"或oldfiber遍历完":["21.7"],"或他们同时遍历完":["21.7"],"classname":["21.7"],"b":["21.7","23.2","92.0","161.0","177.0"],"情况1":["21.7"],"newchildren与oldfiber都遍历完":["21.7"],"插入":["21.8","164.0"],"oldfiber没遍历完":["21.8"],"所以b":["21.9"],"b节点需要":["21.9"],"向右":["21.9"],"移动":["21.9"],"第二轮遍历结束":["21.9"],"最终acd":["21.9"],"3个节点都没有移动":["21.9"],"b节点被标记为移动":["21.9"],"怎么确定b移动到哪里去呢":["21.9"],"dabc":["21.9"],"跳出遍历":["21.9"],"正在内存中构建":["22.0"],"的fiber树":["22.0"],"所有的更新计算工作都在workinprogress":["22.0"],"tree的fiber上执行":["22.0"],"当react":["22.0"],"遍历current":["22.0"],"tree时":["22.0"],"它为每个current":["22.0"],"创建一个替代":["22.0"],"alternate":["22.0"],"节点":["22.0","38.4"],"这样的alternate节点构成了workinprogress":["22.0"],"是workinprogress":["22.0"],"的子树":["22.0"],"它的作用是串联了标记具有更新的节点":["22.0"],"commit阶段会遍历effect":["22.0"],"把所有更新都commit到":["22.0"],"workloopconcurrent":["22.1"],"shouldyield":["22.1"],"如果当前浏览器帧没有剩余时间":["22.1"],"shouldyield会中止循环":["22.1"],"clap":["22.2"],"该方法会根据传入的fiber节点创建子fiber节点":["22.2"],"递":["22.3"],"如果不存在兄弟fiber":["22.3"],"会进入":["22.3"],"父级fiber":["22.3"],"lanes":["22.5"],"优先级相关":["22.5"],"如果current存在可能存在优化路径":["22.5"],"可以复用current":["22.5"],"即上一次更新的fiber节点":["22.5"],"省略":["22.5"],"复用current":["22.5"],"bailoutonalreadyfinishedwork":["22.5"],"reconcilechildfibers":["22.6"],"会为fiber节点带上":["22.6"],"effecttag":["22.6","22.8","22.13"],"dom需要更新":["22.7"],"update":["22.7","23.6","24.5"],"并为fiber节点带上":["22.8"],"forwardref":["22.9"],"fragment":["22.9"],"mode":["22.9"],"statenode":["22.10","22.15"],"update的情况":["22.10"],"的fiber节点会被保存在一条被称为":["22.11"],"单向链表":["22.11"],"最终形成一条以rootfiber":["22.11"],"即renderer的工作流程":["22.12"],"分为三部分":["22.12"],"before":["22.12"],"mutation":["22.12"],"阶段":["22.12","43.0"],"执行dom操作前":["22.12"],"调度":["22.13"],"调度useeffect":["22.13"],"contentreset":["22.14"],"重置文字节点":["22.14"],"parentstatenode":["22.15"],"调用的方法为":["22.16"],"classcomponent":["22.17"],"componentwillunmount":["22.17"],"生命周期钩子":["22.17"],"xxx":["22.18"],"am":["22.18"],"pictures":["23.0"],"git1":["23.0"],"紧急线上bug需要修复时":["23.0"],"我们暂存当前分支的修改":["23.0"],"在master分支修复bug并紧急上线":["23.0"],"然后开发分支基于修复bug的版本继续开发":["23.0"],"figure":["23.0"],"third":["23.0"],"git2":["23.0"],"forceupdate":["23.1"],"captureupdate":["23.1"],"payload":["23.1"],"更新挂载的数据":["23.1"],"onclick":["23.2","26.2"],"setstate":["23.2"],"之所以在更新产生前该fiber节点内就存在update":["23.3"],"是由于某些update优先级较低所以在上次render阶段由update计算state时被跳过":["23.3"],"lastbaseupdate":["23.3"],"shared":["23.3"],"接下来遍历":["23.4"],"链表":["23.4"],"以fiber":["23.4"],"basestate为初始state":["23.4"],"依次与遍历到的每个update计算并产生":["23.4"],"新的state":["23.4"],"该操作类比array":["23.4"],"reduce":["23.4","161.0"],"克隆出workinprogress":["23.5"],"由于":["23.5"],"throw":["23.6"],"takes":["23.6"],"an":["23.6"],"of":["23.6","113.0","116.0"],"state":["23.6"],"variables":["23.6"],"to":["23.6"],"or":["23.6"],"which":["23.6"],"高阶组件的使用经常会使整个组件树变得臃肿":["24.0"],"状态与ui隔离":["24.0"],"正是由于":["24.0"],"的特性":["24.0"],"状态逻辑会变成更小的粒度":["24.0"],"并且极容易被抽象成一个自定义":["24.0"],"组件中的状态和":["24.0"],"reactdom":["24.1"],"会产生":["24.1"],"mount":["24.1"],"挂载":["24.1"],"对于app来说":["24.2"],"点击p标签产生的update的action为num":["24.2"],"num":["24.2"],"模拟react开始调度更新":["24.3"],"schedule":["24.3"],"假如产生了两个":["24.3"],"分别称之为u0":["24.3"],"u1":["24.3"],"关于":["24.4","42.13"],"首次render时是mount":["24.5"],"最后一个update执行完后跳出循环":["24.6"],"while":["24.6","70.0","119.1","138.0","141.0","148.0","153.0","154.0","160.0","166.0","170.0","171.0","173.0"],"清空queue":["24.6"],"将update":["24.6"],"action执行完后的state作为memoizedstate":["24.6"],"batchedupdates":["25.0"],"合并多个":["25.0"],"的优化方式":["25.0"],"以优先级为依据对更新进行合并的":["25.0"],"suspense":["25.0"],"可以在组件请求数据时展示一个":["25.0"],"pending":["25.0"],"状态":["25.0","79.3"],"请求成功后渲染数据":["25.0"],"在父组件中用":["26.0"],"定义全局变量xx和负责抛出修改事件的dispatch":["26.0"],"在父组件之外":["26.0"],"定义负责具体修改全局变量的处理函数reducer":["26.0"],"根据修改xx事件类型和参数":["26.0"],"执行修改xx的值":["26.0"],"usestate":["26.1"],"usecontext":["26.1","26.3"],"copmpoenta":["26.1"],"setparam":["26.1"],"引入全局共享对象":["26.1"],"获取全局变量count":["26.1"],"以及修改count对应的dispatch":["26.1"],"inputchangehandler":["26.1"],"eve":["26.1"],"usecontainer":["26.2"],"div":["26.2"],"button":["26.2"],"span":["26.2"],"用":["26.3"],"实现":["26.3"],"获取全局数据":["26.3"],"框架内部的运行机制":["29.1"],"jsx在编译时会被babel编译为":["29.2"],"createelement":["29.2"],"template":["29.2"],"修改元素属性等原子操作":["29.3"],"不会直接操作浏览器":["29.3"],"可以开发浏览器":["29.3"],"canvas":["29.3"],"安卓":["29.3"],"是组件级应用的一种实现":["29.5"],"但刚好又可以用于多平台渲染":["29.6"],"应用级框架和组件级框架":["29.6"],"需要使用":["29.6"],"配合":["29.6"],"算法":["29.6"],"预编译":["29.7"],"可以提前进行编译":["29.7"],"用户直接运行编译后的代码":["29.7"],"可以减少首屏时间":["29.7"],"运行时编译":["29.7"],"提高渲染效率":["30.1"],"把许多零碎的文件打包成一个整体":["30.1"],"减少单页面内的衍生请求次数":["30.1"],"提高网站效率":["30.1"],"module":["30.2"],"一方面是浏览器对原始的es6模块默认引入方式不支持而报错":["30.2"],"另一方面即使使用支持的方式引入也会因本地js引入的安全问题而报错":["30.2"],"我们可以通过webpack把这两个文件打包成一个js文件来解决这个问题":["30.2"],"webpack打包后":["30.2"],"代码里就没有这种模块化语法了":["30.2"],"执行以下命令":["30.2"],"npx":["30.2"],"webpack":["30.2"],"resolve":["30.3","33.7"],"dirname":["30.3"],"webpack基于node":["30.3"],"js执行":["30.3"],"process":["30.4"],"提示我们需要安装相应的loader来处理css文件":["30.4"],"这里需要安装两个loader":["30.4"],"解析css文件":["30.4"],"包括解析":["30.4"],"import等css自身的语法":["30.4"],"style":["30.4"],"把js里的样式代码插入到html文件里":["30.4"],"原理":["30.4"],"js动态生成style标签插入到html文件的head标签里":["30.4"],"执行":["30.4"],"module通过import":["30.5"],"函数动态导入模块":["30.5"],"commonjs通过require":["30.5"],"对象":["30.6"],"又称之为多入口配置":["30.6"],"本质上打包后生成多个js文件":["30.6"],"publicpath和chunkfilename":["30.7"],"资源入口有关":["30.8"],"entry形式为":["30.8"],"字符串":["30.8"],"数组":["30.8"],"filename的":["30.8"],"值都是":["30.8"],"main":["30.8"],"这个服务器可以":["30.9"],"自动刷新和热加载":["30.9"],"webpack在进行打包的时候":["30.11"],"对所有引入的资源文件":["30.11"],"none":["30.12","34.1"],"配置loader是在webpack配置项module里进行的":["30.12"],"module是模块的意思":["30.12"],"因此用这个名字可以表示这个配置项是用来解析与处理模块的":["30.12"],"module配置项里一个重要的子项":["30.12"],"它定义了loader的处理法则":["30.12"],"rules是一个数组":["30.12"],"modules":["30.13"],"issuer":["30.13"],"指定只有src目录下的js引用的css可以被相应的loader处理":["30.13"],"对象代表了一次单一的版本":["30.14"],"构建和生成编译资源的过程":["30.14"],"当运行":["30.14"],"开发环境中间件时":["30.14"],"每当检测到一个文件变化":["30.14"],"一次新的编译将被创建":["30.14"],"从而生成一组新的编译资源以及新的":["30.14"],"一个":["30.14","87.2"],"对象包含了当前的模块资源":["30.14"],"编译生成资源":["30.14"],"变化的文件":["30.14"],"以及被跟踪依赖的状态信息":["30.14"],"以插件的形式提供了灵活强大的自定义":["30.14"],"功能":["30.14"],"提供生命周期钩子以便注册插件":["30.14"],"的插件架构主要基于":["30.14"],"tapable":["30.14"],"plugin和loader的区别":["30.14"],"loader是翻译官":["30.14"],"plugin是干活滴":["30.14"],"用来处理webpack无法处理的模块":["30.14"],"即非js":["30.14"],"json文件":["30.14"],"然后你就可以利用":["30.14"],"的打包能力":["30.14"],"对它们进行处理":["30.14"],"可以执行比转换更复杂的任务":["30.14"],"比如打包优化":["30.14"],"文件管理":["30.14"],"环境注入等":["30.14"],"开发环境配置webpack":["30.14"],"在我们平时的开发工作中":["30.14"],"如果每次修改代码后":["30.14"],"都要执行npx":["30.14"],"webpack然后手动刷新浏览器":["30.14"],"那势必会严重影响我们的开发效率":["30.14"],"因此我们需要一些提高开发效率的机制":["30.14"],"修改代码后不需要手动执行构建命令而是会进行自动构建":["30.14"],"重新构建后也不需要手动刷新浏览器而是会自动刷新等等":["30.14"],"有两种方式可以实现上述目标":["30.14"],"webpack自带的自动构建功能":["30.14"],"启动的时候带上":["30.14"],"pic2":["31.0","40.0","152.0"],"则是用了另一种方式":["31.0"],"不再是复制了":["31.0"],"而是都从":["31.0"],"全局":["31.0"],"store":["31.0"],"保证业务在快速迭代过程中的稳定性":["32.0"],"浏览器提供的一套操作浏览器功能和页面元素的接口":["33.0"],"出现之前":["33.0"],"如果服务器数据有更新":["33.0"],"依然需要重新":["33.0"],"刷新整个页面":["33.0"],"done":["33.1"],"status":["33.1"],"responsetext":["33.1"],"onerror":["33.3"],"用来监控出错信息":["33.3"],"如果后台请求出错了":["33.3"],"然后通过":["33.4"],"xhr":["33.4","33.5"],"内部属性类配置一些其他可选的请求信息":["33.4"],"的回调函数封装成任务并添加到消息队列中":["33.5"],"等主线程循环系统执行到该任务的时候":["33.5"],"就会根据相关的状态来调用对应的回调函数":["33.5"],"else":["33.7","51.0","114.0","119.4"],"服务器状态码不是2开头的的情况":["33.7"],"这里可以跟你们的后台开发人员协商好统一的错误状态码":["33.7"],"然后根据返回的状态码进行一些操作":["33.7"],"例如登录过期提示":["33.7"],"错误提示等等":["33.7"],"下面列举几个常见的操作":["33.7"],"其他需求可自行扩展":["33.7"],"switch":["33.7"],"未登录":["33.7"],"未登录则跳转登录页面":["33.7"],"并携带当前页面的路径":["33.7"],"在登录成功后返回当前页面":["33.7"],"这一步需要在登录页操作":["33.7"],"case":["33.7","63.0","85.0","86.0","104.0","132.0","158.0","177.0"],"来发送和接收数据":["33.8"],"而fetch使用":["33.8"],"进行请求和响应":["33.8"],"返回值方式":["33.8"],"使用ajax时":["33.8"],"我们需要手动处理xhr对象的状态变化和响应数据":["33.8"],"而fetch":["33.8"],"api返回了一个promise对象":["33.8"],"使得处理响应数据更加简单直接":["33.8"],"浏览器兼容性":["33.8"],"ajax可以在所有现代浏览器中运行":["33.8"],"identifier":["34.0"],"下次当请求被发送到同一个域时":["34.0"],"浏览器会使用":["34.0"],"通过网络发送":["34.0"],"所以服务器知道是谁发起了请求":["34.0"],"可以用":["34.0"],"07":["34.1"],"gmt":["34.1"],"secure":["34.1"],"表示cookie":["34.1"],"应只能被通过":["34.1"],"传输":["34.1"],"samesite":["34.1"],"选项通常有":["34.1"],"lax":["34.1"],"三个值":["34.1"],"value":["34.2","165.0"],"options":["34.2"],"会去检查究竟是从哪一个客户端发来的连接请求":["34.3"],"然后对比服务器上的记录":["34.3"],"最后得到该用户的状态信息":["34.3"],"存储对象":["34.3"],"localstorage":["34.3"],"sessionstorage":["34.3"],"允许我们在浏览器上保存键":["34.3"],"值对":["34.3"],"我们已经有了":["34.3"],"为什么还要其他存储对象呢":["34.3"],"与":["34.3"],"不同":["34.3"],"数据":["34.5","36.17"],"之间是共享的":["34.6"],"假如它们来自相同的源":["34.6"],"event":["34.7"],"也可以使用":["34.7"],"服务器使用session把用户的信息临时保存在了服务器上":["34.8"],"它的主要用途有保存登录信息":["34.9"],"比如你登录某个网站市场可以看到":["34.9"],"当前时间的时间戳":["34.10"],"sign":["34.10"],"浏览器被划分为":["35.0"],"浏览器内核":["35.0"],"渲染内核":["35.0"],"两个核心模块":["35.0"],"浏览器内核是由网络进程":["35.0"],"浏览器主进程和":["35.0"],"gpu":["35.0"],"进程组成的":["35.0"],"黑客就获取不到渲染进程之外的任何操作权限":["35.1"],"将渲染进程和操作系统隔离的这道墙就是我们要聊的安全沙箱":["35.1"],"浏览器中的":["35.1"],"url":["35.2"],"请求之前":["35.2"],"会检查渲染进程是否有权限请求该":["35.2"],"比如检查":["35.2"],"或者":["35.2"],"是否是":["35.2"],"跨站点请求":["35.2"],"或者检测":["35.2"],"的站点中是否包含了":["35.2"],"http":["35.2","36.6","36.15","37.4","40.1"],"和熔毁":["35.3"],"meltdown":["35.3"],"很难修补":["35.3"],"黑客通过这两个漏洞可以直接入侵到进程的内部":["35.3"],"如果入侵的进程没有安全沙箱的保护":["35.3"],"那么黑客还可以发起对操作系统的攻击":["35.3"],"实现了":["35.3"],"主要是利用":["35.4"],"网络资源":["35.4"],"获取用户的信息":["35.4"],"这":["35.4"],"如何防止csrf攻击":["36.0"],"samesite等":["36.0"],"浏览器安全可以分为三大块":["36.0"],"页面安全":["36.0"],"浏览器网络安全和浏览器系统安全":["36.0"],"本文先讲":["36.0"],"postmessage":["36.2"],"接口来和不同源的":["36.2"],"进行通信":["36.2"],"都是":["36.3"],"浏览器自动完成":["36.3"],"不需要用户参与":["36.3"],"对于开发者来说":["36.3"],"通信与同源的":["36.3"],"ajax":["36.3"],"通信没有差别":["36.3"],"代码完全一样":["36.3"],"浏览器一旦发现":["36.3"],"请求跨源":["36.3"],"就会自动添加一些附加的头信息":["36.3"],"有时还会多出一次附加的请求":["36.3"],"但用户不会有感觉":["36.3"],"因此":["36.3"],"如果是公共资源":["36.4"],"可回发":["36.4"],"浏览器收到服务器的响应后":["36.4"],"根据接受到的响应头里的":["36.4"],"字段与":["36.4"],"允许的头部":["36.5"],"max":["36.5","36.7"],"age":["36.5"],"应该将这个":["36.5"],"请求":["36.6","37.4"],"缺点":["36.6","40.5"],"access":["36.7"],"control":["36.7","39.4"],"cn":["36.8"],"target":["36.9","180.0"],"代理到本地node服务":["36.9"],"busniess":["36.9"],"oppty":["36.9"],"testsite":["36.9"],"woa":["36.9"],"geektime":["36.10"],"campaign":["36.10"],"信息之后":["36.11"],"就可以在其他电脑上模拟用户的登录":["36.11"],"然后进行转账等操作":["36.11"],"监听用户行为":["36.11"],"可以使用":["36.11"],"接口来监听键盘事件":["36.11"],"产生存储型xss攻击的原因是没有做好":["36.12"],"数据过滤":["36.12"],"前端提交数据至服务端时":["36.12"],"中取出":["36.13"],"拼接在":["36.13"],"html":["36.13"],"中返回给浏览器":["36.13"],"用户浏览器接收到响应后解析执行":["36.13"],"有通过":["36.14"],"wifi":["36.14"],"路由器劫持的":["36.14"],"header":["36.15"],"content":["36.15","36.16"],"security":["36.15"],"policy":["36.15"],"meta":["36.15"],"标签的方式":["36.15"],"使用":["36.15"],"由于很多":["36.15"],"攻击都是来盗用":["36.15"],"cookie":["36.15"],"end":["36.16","75.0","93.0","137.0"],"v8zhuanlankaipianci0316":["36.16"],"在任何情况下都会发送":["36.17"],"利用http请求头":["36.17"],"referer":["36.17"],"origin":["36.17"],"属性了":["36.17"],"验证请求的来源站点":["36.17"],"是":["36.17"],"请求头中的一个字段":["36.17"],"记录了该":["36.17"],"再加上":["37.0"],"是目前世界上使用率最高的浏览器":["37.0"],"参考链接":["37.0","41.0"],"chrome打开一个页面至少需要启动4个进程":["37.0"],"我们把这样的一个运行环境叫进程":["37.1"],"线程是依附于进程的":["37.1"],"而进程中使用多线程并行处理能提升运算效率":["37.1"],"进程和线程之间的关系有以下":["37.1"],"来实现诸如":["37.2"],"视频":["37.2"],"游戏等各种强大的功能":["37.2"],"但是插件是最容易出问题的模块":["37.2"],"引擎":["37.3"],"都是运行在该进程中":["37.3"],"默认情况下":["37.3"],"会为每个":["37.3"],"tab":["37.3"],"标签创建一个渲染进程":["37.3"],"因为渲染进程所有的内容都是通过网络获取的":["37.3"],"会存在一些恶意代码利用浏览器漏洞对系统进行攻击":["37.3"],"出于安全考虑":["37.3"],"渲染进程都是运行在":["37.3"],"沙箱模式":["37.3"],"通过进程间通信":["37.4"],"把url请求发送给网络进程":["37.4"],"网络进程":["37.4"],"接收到url请求后检查本地":["37.4"],"系统缓存":["37.4"],"路由器缓存":["37.4"],"是否缓存了该请求资源":["37.4"],"如果有则将该资源返回给":["37.4"],"若没有":["37.4"],"则跳到第三步操作":["37.4"],"向web服务器发起":["37.4"],"网络请求":["37.4"],"过程如下":["37.4","42.12","152.0"],"域名解析":["37.4"],"查询dns缓存":["37.4"],"解析获取相应的ip地址":["37.4"],"利用ip地址和服务器建立tcp连接":["37.4"],"输入的":["38.0"],"经过这些子阶段":["38.0"],"最后输出":["38.0"],"像素":["38.0"],"我们把这样的一个处理流程叫做渲染流水线":["38.0"],"其大致流程如下图所示":["38.0"],"树的输入内容是一个非常简单的":["38.1"],"文件":["38.1","42.1"],"然后经由":["38.1"],"需要将所有值转换为渲染引擎容易理解的":["38.2"],"标准化的计算值":["38.2"],"这个过程就是属性值标准化":["38.2"],"树中可见元素的":["38.3"],"几何位置":["38.3"],"遍历":["38.4","55.0"],"树中的所有":["38.4"],"可见":["38.4"],"并把这些节点加到布局树中":["38.4"],"浏览器的页面实际上被分成了很多图层":["38.6"],"这些图层叠加后合成了最终的页面":["38.6"],"这些图层和布局树节点之间的关系":["38.6"],"如文中图所示":["38.6"],"other":["38.7"],"是指将图块转换为位图":["38.8"],"图块是栅格化执行的最小单位":["38.8"],"渲染进程维护了一个栅格化的线程池":["38.8"],"所有的图块栅格化都是在线程池内执行的":["38.8"],"节点的样式":["38.9"],"创建":["38.9"],"布局树":["38.9"],"并计算元素的布局信息":["38.9"],"对布局树进行分层":["38.9"],"并生成":["38.9"],"分层树":["38.9"],"触发":["38.10"],"边框":["38.11"],"来实现动画效果":["38.12"],"这可以避开重排和重绘阶段":["38.12"],"直接在非主线程上执行合成动画操作":["38.12"],"debounce":["38.13"],"cdn缓存应用场景":["39.0"],"dns缓存":["39.0"],"点播":["39.1"],"直播等场景":["39.1"],"cdn就可以理解为分布在每个县城的火车票代售点":["39.1"],"判断哪一台服务器距用户最近":["39.2"],"根据用户所请求的url中携带的内容名称":["39.2"],"判断哪一台服务器上有用户所需内容":["39.2"],"查询各个服务器当前的负载情况":["39.2"],"判断哪一台服务器尚有服务能力":["39.2"],"全局负载均衡设备把查询到的服务器的ip地址返回给":["39.2"],"用户":["39.2"],"就是说我们把资源":["39.3"],"copy":["39.3","179.0"],"一份到":["39.3"],"那么cdn也是支持流媒体传送的":["39.5"],"所以直播完全可以使用cdn来提高访问速度":["39.5"],"cdn在处理流媒体的时候与处理普通静态文件有所不同":["39.5"],"都可能有缓存":["39.6"],"如果有缓存":["39.6"],"就不会进行下一步":["39.6"],"用户行为对浏览器缓存的影响":["40.0"],"如下图":["40.0"],"herder":["40.1"],"中的字段":["40.1"],"判断哪些资源需要缓存":["40.1"],"哪些资源可以不请求直接使用":["40.1"],"哪些资源已经过期需要重新请求":["40.1"],"并且即使在跨站点的情况下":["40.1"],"相同地址的资源一旦被硬盘缓存下来":["40.1"],"cache":["40.2"],"pic10":["40.2"],"继续使用缓存":["40.3"],"当请求命中":["40.3"],"强制缓存":["40.3"],"浏览器不会将本次请求发往服务器":["40.3"],"而是直接从缓存中读取内容":["40.3"],"wed":["40.4"],"oct":["40.4"],"08":["40.4"],"缓存时间为31536000秒":["40.5"],"365天":["40.5"],"也就是说":["40.5"],"在365天内再次请求这条数据":["40.5"],"都会直接获取缓存数据库中的数据":["40.5"],"直接使用":["40.5"],"解决了expires服务器和客户端相对时间的问题":["40.5"],"存在版本问题":["40.5"],"到期之前的修改客户端是不可知的":["40.5"],"协商缓存":["40.5"],"协商缓存就是":["40.5"],"失效":["40.6"],"进行对比":["40.7"],"如果没有变化":["40.7"],"这表示未修改":["40.7"],"响应304和空响应体":["40.7"],"直接从缓存中读取":["40.7"],"如果if":["40.7"],"返回304状态码时":["40.8"],"浏览器直接使用缓存":["40.8"],"启发式缓存阶段":["40.8"],"浏览器用来确定缓存过期时间的字段一个都没有":["40.8"],"那该怎么办":["40.8"],"有人可能会说下次请求直接进入协商缓存阶段":["40.8"],"不是的":["40.8"],"浏览器还有个":["40.8"],"根据响应头中2个时间字段":["40.8"],"last":["40.8","176.0"],"modified":["40.8"],"之间的时间差值":["40.8"],"取其值的10":["40.8"],"作为缓存时间周期":["40.8"],"tcp协议是":["41.0"],"传输层":["41.0"],"协议":["41.0","42.13"],"transmission":["41.0"],"作为确认号":["41.1"],"的值":["41.1"],"表示已经收到了客户端发来的的":["41.1"],"希望收到的下一个数据的第一个字节的序号是":["41.1"],"此时服务器处于":["41.1"],"revd":["41.1"],"的状态":["41.1"],"received":["41.1"],"在收到和发送一个连接请求后等待对连接请求的确认":["41.1"],"接收正常":["41.2"],"对方发送":["41.2"],"服务器确认了":["41.2"],"对方发送正常":["41.2"],"的话":["41.3"],"因为攻击者根本就不用管服务器的接收":["41.3"],"发送能力是否正常":["41.3"],"它就是要攻击你":["41.3"],"对于服务端而言":["41.4"],"会产生两个危险的后果":["41.4"],"处理大量的syn包并返回对应ack":["41.4"],"如果重传次数超过系统规定的最大重传次数":["41.5"],"则系统将该连接信息从半连接队列中删除":["41.5"],"进入fin":["41.6"],"wait2":["41.6"],"终止等待":["41.6"],"等待服务端发出的":["41.6"],"连接释放报文段":["41.6"],"从远程tcp等待连接中断请求":["41.6"],"第三次挥手":["41.6"],"如果服务端也想断开连接了":["41.6"],"没有要向客户端发出的数据":["41.6"],"和客户端的第一次挥手一样":["41.6"],"发送":["41.6"],"个":["41.7","103.0","115.0","177.0"],"确保四次挥手中主动关闭方最后的":["41.7"],"ack":["41.7"],"无则进行下一步":["41.8"],"向全球13个":["41.8"],"根域服务器发":["41.8"],"起dns请求":["41.8"],"根域名服务器返回给本地域名服务器ldns一个所查询域的":["41.8"],"主域名服务器":["41.8"],"gtld":["41.8"],"server":["41.8"],"国际顶尖域名服务器":["41.8"],"二进制分帧":["42.0"],"多路复用":["42.0"],"0其他特性":["42.0"],"设置请求优先级":["42.0"],"服务器推送":["42.0"],"如get":["42.1"],"index":["42.1","46.0","163.0","167.0"],"html用来获取":["42.1"],"服务器接收请求信息之后":["42.1"],"读取对应的":["42.1"],"并将数据以":["42.1"],"ascii":["42.1","44.0"],"是怎么通过请求头和响应头来支持多种不同类型的数据呢":["42.2"],"在发起请求时候会通过":["42.2"],"请求头告诉服务器它期待服务器返回什么类型的文件":["42.2"],"采取什么形式的压缩":["42.2"],"提供什么语言的文件以及文件的具体编码":["42.2"],"最终发送出来的请求头内容如下":["42.2"],"accept":["42.2"],"text":["42.2"],"encoding":["42.2"],"gzip":["42.2"],"deflate":["42.2"],"br":["42.2"],"charset":["42.2"],"0中默认使用短连接":["42.4"],"从http":["42.4"],"1起":["42.4"],"默认使用长连接":["42.4"],"问题":["42.5"],"相当于客户端":["42.6"],"一次性把所有的请求打包":["42.6"],"字段":["42.7"],"用来表示当前的":["42.7"],"实现大文件传输":["42.8"],"表示的是当前发送的数据的范围":["42.9"],"用于响应带有":["42.9"],"的请求":["42.9"],"服务器会将":["42.9"],"添加在响应的头部":["42.9"],"类型等":["42.10"],"并允许客户端和服务器之间约定以最合适的内容进行交换":["42.10"],"很难将带宽用满":["42.11"],"首先":["42.12"],"浏览器准备好请求数据":["42.12"],"包括了请求行":["42.12"],"请求头等信息":["42.12"],"如果是":["42.12"],"post":["42.12"],"那么还要有请求体":["42.12"],"这些数据经过二进制分帧层处理之后":["42.12"],"实现了类似于":["42.13"],"的多路数据流":["42.13"],"传输可靠性等功能":["42.13"],"我们把这套功能称为":["42.13"],"quic":["42.13"],"协议栈的比较":["42.13"],"可以参考下图":["42.13"],"network":["42.13"],"pic6":["42.13"],"协议集合了以下几点功能":["42.13"],"传输数据":["43.0"],"ca机构向浏览器开发商颁发ca证书":["43.0"],"主要作用":["43.0"],"建立一个信息安全通道":["43.0"],"来保证数据传输安全":["43.0"],"防止数据泄露":["43.0"],"确认网站的真实性":["43.0"],"对于浏览器来说":["43.0"],"数字证书有两个作用":["43.0"],"一个是通过数字证书向浏览器证明服务器的身份":["43.0"],"另一个是数字证书里面包含了服务器公钥":["43.0"],"只能接收":["44.0"],"字符":["44.0"],"没有限制":["44.0"],"传输数据大小":["44.0"],"get提交的数据大小有限制":["44.0"],"get方法提交的数据大小长度并没有限制":["44.0"],"http协议规范没有对url长度进行限制":["44.0"],"这个限制是特定的浏览器及服务器对它的限制":["44.0"],"post方法提交的数据没有限制":["44.0"],"1xx":["44.0"],"信息提示":["44.0"],"切换协议":["44.0"],"遇到叶子结点":["45.0","53.0"],"且路径和等于targetsum":["45.0","53.0"],"且路径和不等于targetsum":["45.0","53.0"],"insert":["46.0","163.0","164.0"],"key":["46.0","163.0"],"delete":["46.0","163.0"],"splice":["46.0","163.0"],"堆的其他地方都满足性质":["46.0"],"唯独跟节点":["46.0"],"q":["47.0","48.0"],"boolean":["47.0","48.0","169.0"],"issametree":["47.0"],"issymmetric":["48.0"],"fun":["48.0"],"p":["48.0","171.0"],"param":["49.0","56.0","57.0","62.0","150.0","169.0","174.0"],"buildtree":["50.0"],"arr":["50.0"],"mid":["50.0"],"flag":["51.0"],"getdepth":["51.0"],"mindepth":["52.0"],"后序遍历位置":["54.0"],"三叉树":["55.0"],"连接相邻节点":["55.0"],"traverse":["55.0"],"获得右子树最小的节点":["59.0"],"minnode":["59.0"],"getmin":["59.0"],"删除右子树最小的节点":["59.0"],"searchbst":["60.0"],"insertintobst":["61.0"],"min":["63.0","73.0","140.0"],"base":["63.0","85.0","86.0","104.0","132.0","158.0","177.0"],"后序位置":["64.0"],"合并":["64.0"],"merge":["64.0"],"序位置的代码在刚刚":["64.0"],"进入":["64.0"],"一个二叉树节点的时候执行":["64.0"],"序位置的代码在将要":["64.0"],"离开":["64.0"],"序位置的代码在一个二叉树节点左子树都遍历完":["64.0"],"j":["65.0","71.0","76.0","77.0","81.0","84.0","97.0","98.0","99.0","119.3","140.0"],"fill":["66.0","82.0","83.0","85.0","89.0","102.0","132.0","158.0"],"从下标为":["66.0"],"的数开始枚举":["66.0"],"操作的作用":["68.0"],"将字符转数字":["68.0"],"乘积在":["68.0"],"对应的索引位置":["68.0"],"p1":["68.0","173.0","174.0"],"p2":["68.0","173.0","174.0"],"叠加到":["68.0"],"substring":["69.0"],"方法返回一个字符串在开始索引到结束索引之间的一个子集":["69.0"],"或从开始索引直到字符串的末尾的一个子集":["69.0"],"right":["69.0","103.0","115.0","130.0","142.0","178.0"],"result":["70.0","151.0"],"初始化dp数组":["72.0"],"当n为0的时候":["72.0"],"length":["73.0","82.0","83.0","92.0","107.0","110.3","110.5","110.8","114.0","123.0","141.0","142.0","144.0","146.0","147.0","153.0","160.0","162.0","166.0"],"计算子问题的结果":["73.0"],"subproblem":["73.0"],"子问题无解则跳过":["73.0"],"continue":["73.0","110.6","136.0","137.0"],"把计算结果存入备忘录":["73.0"],"从倒数第二个格子开始":["74.0"],"如果格子里的数字大于等于到最后一个格子的距离":["74.0"],"优化版本":["75.0"],"滚动数组优化":["75.0"],"只维护长度为2的数组":["75.0"],"fib2":["75.0"],"初始化行":["76.0","77.0","98.0","99.0"],"dp":["78.0","89.0","101.0"],"动态规划问题一定会具备":["79.0"],"最优子结构":["79.0"],"才能通过子问题的最值得到原问题的最值":["79.0"],"而是从局部直接选最优解":["79.1"],"所以它永远是局部最优":["79.1"],"但是全局的解不一定是最优的":["79.1"],"选择":["79.3"],"手中有股票":["80.4"],"最终的最大收益是":["80.4"],"n":["80.4"],"今天买入":["80.5"],"从":["81.0"],"开始":["81.0"],"所以要减一":["81.0"],"res":["83.0","91.0","94.0","151.0","154.0","160.0"],"最长子序列":["87.0"],"因为最短子序列就是一个字符":["87.0"],"既然要用动归":["87.0"],"最值":["87.1"],"或者只涉及":["87.2"],"数组的情景":["87.2"],"回文子序列":["87.2"],"数组的子序列":["87.2"],"dp数组定义为":["87.2"],"在子数组":["87.2"],"arr1":["87.2"],"当前房子不抢":["90.0"],"map":["90.0","102.0"],"利用备忘录消除重叠子问题":["90.0"],"解决超时问题":["90.0"],"记录结果":["91.0"],"短视频的起点不为0的情况":["91.0"],"curend":["91.0"],"升序排序":["92.0"],"sort":["92.0"],"res用来记录不相交的区间的个数":["92.0","94.0"],"farthest":["93.0"],"jumps":["93.0"],"至少有一个不相交":["94.0"],"就是本身":["94.0"],"排序后":["94.0"],"第一个区间就是":["94.0"],"表示当前位置能跳到的最远距离":["95.0"],"贪心算法适用场景":["96.0"],"区间调度问题":["96.0"],"minfallingpathsum2":["102.0"],"choices":["103.0","115.0"],"trcak中左括号数量为":["103.0","115.0"],"left":["103.0","115.0","130.0","142.0","178.0","181.0"],"右括号数量为":["103.0","115.0"],"rgiht":["103.0","115.0"],"backtrack":["103.0","107.0","108.0","109.0","115.0"],"若右括号多于左括号":["103.0","115.0"],"说明不合法":["103.0","115.0"],"超过目标和":["104.0"],"停止向下遍历":["104.0"],"不能这样写res":["105.0"],"这是浅拷贝":["105.0","106.0"],"剪枝":["106.0"],"排除已经选择过了的":["106.0"],"track":["107.0"],"len":["107.0","117.0","135.0"],"前序遍历位置":["107.0","108.0","109.0"],"每个节点的值都是一个子集":["108.0"],"回溯算法标准框架":["108.0","109.0"],"撤销选择":["110.0"],"以lc46":["110.0"],"全排列为例":["110.0"],"根据题目意思":["110.0"],"以及回溯算法框架定义":["110.0"],"可以得到以下树结构":["110.0"],"pic":["110.0"],"定义的":["110.0"],"函数其实就像一个指针":["110.0"],"在这棵树上游走":["110.0"],"同时要正确维护每个节点的属性":["110.0"],"每个元素最多只能被使用一次":["110.1","110.4"],"剪枝逻辑":["110.3","110.5"],"跳过值相同的相邻树枝":["110.5"],"固定相同的元素在排列中的相对位置":["110.6"],"相比较于元素无重":["110.7"],"可复选类型的题目":["110.7"],"递归每个相邻节点":["111.0"],"经过节点":["112.0"],"标记为已遍历":["112.0"],"做选择":["112.0"],"needright":["116.0"],"需要":["116.0"],"的个数":["116.0"],"必然对于任何":["117.0"],"计数排序":["119.0"],"已经在他们正确的位置上了":["119.2"],"minindex":["119.3"],"倒数第":["121.0"],"个链表节点等问题":["121.0"],"它们都是通过一个":["121.0"],"round":["124.0"],"这里改成收缩左侧边界即可":["125.0"],"最后改成返回":["125.0"],"逐行反转二维数组":["126.0"],"从右到左":["127.0"],"y轴固定为bottom":["127.0"],"左边":["127.0"],"从下到上":["127.0"],"lc54":["128.1"],"row1":["131.0"],"col1":["131.0"],"row2":["131.0"],"ch":["134.0"],"若当前字符已经在栈中":["134.0"],"无需处理":["134.0"],"若当前字符不在栈中":["134.0"],"break":["136.0"],"如果当前数字大于0":["136.0"],"则三数之和一定大于0":["136.0"],"所以结束循环":["136.0"],"去重":["136.0"],"保证和上一次枚举的元素不相等":["137.0"],"middlenode":["138.0"],"slow":["138.0","147.0","148.0","172.0"],"fast":["138.0","148.0","172.0"],"快慢指针":["139.0","175.0"],"sum":["141.0"],"s1":["143.0"],"两数之和":["145.0"],"lc":["145.0","175.0"],"167题":["145.0"],"链表中去重":["149.0"],"了":["151.0"],"返回结果数组":["151.0"],"根据差分数组构造结果数组":["151.0"],"即可":["152.0"],"让nums数组":["152.0"],"区间的元素全部加3":["152.0"],"即i":["152.0"],"difference":["152.0"],"构造函数":["152.0"],"输入一个初始数组":["152.0"],"区间操作将在这个数组上进行":["152.0"],"即将移入窗口的数字":["153.0"],"增大窗口":["153.0","155.0","159.0","160.0"],"zerosum":["153.0"],"slice":["153.0"],"has":["154.0","155.0","165.0","170.0"],"进行窗口内数据的一系列更新":["155.0","156.0","157.0","159.0","162.0"],"add":["155.0","170.0"],"debug":["156.0","157.0","162.0"],"输出的位置":["156.0","157.0","162.0"],"统计t中字符频数":["160.0"],"valid":["160.0"],"变量表示窗口中满足":["160.0","162.0"],"条件的字符个数":["160.0","162.0"],"是将移入窗口的字符":["160.0","162.0"],"values":["161.0"],"delmax":["164.0"],"删除并返回最大元素":["164.0"],"的过程示意图":["164.0"],"先删除":["165.0"],"再set":["165.0"],"保持该":["165.0"],"循环nums":["166.0"],"get":["167.0"],"lastnum":["167.0"],"把要删除的元素和末尾的元素换个位置":["167.0"],"单调栈实际上就是栈":["168.0"],"只是利用了一些巧妙的逻辑":["168.0"],"一圈":["169.0"],"说明链表中含有环":["169.0"],"head":["169.0","174.0"],"hascycle":["169.0"],"虚拟头节点":["171.0"],"比较p1和p2两个指针":["171.0"],"deleteduplicates":["172.0"],"dummy2":["173.0"],"p1每次走一步":["174.0"],"p2每次走两步":["174.0"],"876寻找单链表的中点":["175.0"],"每当慢指针":["175.0"],"前进一步":["175.0"],"不足":["177.0"],"不需要反转":["177.0"],"pre":["178.0"],"listnode":["178.0"],"leftnode":["178.0"],"reset":["179.0"],"shuffle":["179.0"],"深拷贝数组":["179.0"],"避免修改原数组":["179.0"],"生成一个":["179.0"],"pick":["180.0"],"获取目标元素的所有下标":["180.0"],"和原始数组":["181.0"],"有一位索引偏移":["181.0"],"nums":["181.0"]},{"0":["20.18","30.4","36.1","80.3","94.0","105.0","110.0","114.0"],"1":["2.1","5.8","8.1","8.3","20.18","24.2","35.0","36.3","37.0","52.0","93.0","110.5","110.6","113.0","142.0","146.0","166.0"],"2":["0.6","2.1","7.15","15.0","35.0","36.2","38.11","50.0","54.0","119.1","181.0"],"3":["1.2","2.1","8.13","10.5","30.1","30.4","35.2","36.9","36.11","38.2","40.8","41.1","42.0","42.12","79.1","145.0","164.0"],"4":["0.11","1.8","6.1","7.0","16.2","22.0","26.0","36.4","36.13","37.4","41.6","42.12","78.0","101.0"],"5":["0.0","7.0","22.4","38.9","38.13","119.1"],"6":["2.8","7.0","22.4","30.4","38.9","41.8","175.0"],"7":["0.2","7.0","41.8"],"8":["5.11","42.2"],"10":["7.15","68.0"],"12":["7.4"],"18":["8.13"],"20":["8.13","34.0"],"31":["7.16"],"41":["40.4"],"50":["0.12","37.0"],"60":["0.10"],"70":["15.1","15.2","30.14","38.0","80.0"],"121":["80.5"],"189":["36.15"],"200":["37.4","40.7","44.0"],"204":["44.0"],"206":["44.0"],"301":["37.4"],"302":["37.4"],"344":["145.0"],"403":["33.7"],"404":["33.7"],"1000":["11.0"],"1001":["150.0"],"2048":["42.9"],"4096":["42.9"],"8859":["42.2"],"10240":["42.9"],"29765":["15.0"],"f1":["0.0"],"打印完整对象":["0.0"],"ƒ":["0.0"],"test":["0.0"],"f2":["0.0"],"function":["0.0","5.5","7.2","150.0","151.0"],"声明式":["0.0"],"因此输出":["0.1"],"最后打印结果都是":["0.2"],"因为在创建执行上下文阶段":["0.2"],"函数作用域就随之被销毁掉了":["0.3"],"v8采用":["0.3"],"词法":["0.3","5.7"],"uncaught":["0.4"],"referenceerror":["0.4"],"cannot":["0.4"],"access":["0.4"],"before":["0.4","22.15"],"initialization":["0.4"],"极客邦":["0.4"],"块作用域内":["0.4"],"let声明的变量被提升":["0.4"],"但变量只是创建被提升":["0.4"],"初始化并没有被提升":["0.4"],"在初始化之前使用变量":["0.4"],"就会形成一个":["0.4"],"栈空间":["0.5"],"和":["0.5","1.10","16.1","30.12","30.14","36.3","63.0","87.1"],"堆空间":["0.5"],"其中的代码空间主要是存储可执行代码的":["0.5"],"newobj":["0.6"],"console":["0.6","1.9","3.2","3.5","4.9","5.5","7.2","7.4","7.22","67.0","155.0","157.0","159.0","160.0"],"log":["0.6","1.9","3.5","4.9","5.5","7.2","7.4","155.0","157.0","159.0","160.0"],"会使得":["0.7"],"函数在消息队列后面的任务中执行":["0.7"],"所以不会影响到当前的栈结构":["0.7"],"涉及":["0.7"],"消息队列和事件循环系统":["0.7"],"code3":["0.7"],"页面卡死":["0.7"],"在当前这一轮任务里不停地创建微任务":["0.7"],"执行":["0.7","1.2"],"垃圾回收机制":["0.8"],"章节介绍了v8是如何进行垃圾回收的":["0.8"],"闭包":["0.8"],"bell":["0.8","0.10"],"javascript":["0.8","2.3","8.0","34.3"],"和字节码":["0.9"],"而仅仅生成顶层代码的":["0.9"],"还提供了":["0.10"],"垃圾回收器":["0.10"],"协程":["0.10"],"等基础内容":["0.10"],"不过这些功能依然需要浏览器环境的配合才能完整执行":["0.10"],"img":["0.10","0.12","1.1","20.13","22.8","24.6","30.5","39.6","40.3","42.1"],"src":["0.10","0.12","1.1","20.1","20.13","24.6","30.13","36.17","39.6","42.1"],"picture":["0.10","0.12","1.1","36.17","37.0","38.0","42.1"],"pic2":["0.10"],"png":["0.10","0.12","1.1","15.1","19.2","24.6","36.17","37.0","38.0","38.7","40.0","40.2","42.1"],"width":["0.10","0.12","15.1","15.2","19.2","37.0","38.0","40.2"],"如何执行":["0.10"],"参考链接":["0.10","2.0","36.0"],"采用混合编译执行和解释执行这两种手段":["0.10"],"我们把这种混合使用编译器和解释器的技术称为":["0.10"],"jit":["0.10","29.7"],"just":["0.10"],"in":["0.10","7.0"],"time":["0.10","2.0"],"技术来执行js代码":["0.10"],"预解释":["0.11"],"代码生成":["0.11"],"生成":["0.11"],"字节码":["0.11"],"而函数的执行上下文在函数执行结束之后就会被销毁":["0.12"],"函数执行上下文栈":["0.12"],"当":["0.12"],"调用了一个":["0.12"],"就会进入函数的执行上下文":["0.12"],"这时候全局执行上下文":["0.12"],"当前的函数执行上下文就形成了一个栈结构":["0.12"],"x":["0.12"],"show":["0.12"],"bar":["0.12"],"pic3":["0.12","20.8"],"并执行代码":["0.12"],"宿主环境":["0.12"],"浏览器":["0.12","43.0"],"node":["0.12"],"还需要为v8构造":["0.12"],"事件循环":["0.12","1.10"],"系统":["0.12"],"网络线程在执行下载的过程中":["1.0"],"会将一些中间信息和回调函数封装成新的消息":["1.0"],"并将其添加进消息队列中":["1.0"],"这样的定时器回调任务的":["1.1"],"代码":["1.1"],"执行过程":["1.1"],"code5":["1.1"],"的垃圾回收过程":["1.2"],"后面":["1.2"],"的语句会":["1.2"],"同步":["1.2"],"await后面的语句可以看成是一个":["1.2"],"来执行":["1.2","9.2"],"当promise对象的状态变成":["1.2"],"resolve":["1.2","15.5"],"才会执行await的下一句语句":["1.2"],"如果有":["1.3"],"那么会先清空这个队列":["1.3"],"再次取出微任务队列全部任务执行":["1.4"],"该微任务会被添加进微任务队列":["1.5"],"这也会触发一个":["1.5"],"宏任务同样也会被添加进消息队列":["1.5"],"eventloop3":["1.5"],"函数执行结束并退出":["1.5"],"函数的执行上下文也会从栈中弹出":["1.5"],"紧接着":["1.5"],"函数的执行上下文也随之从栈中被弹出":["1.5"],"紧接着就执行同步代码":["1.5"],"eventloop4":["1.5"],"详见":["1.6","24.6"],"javascript基础":["1.6"],"异步编程":["1.6"],"generator":["1.6"],"async":["1.6"],"await":["1.6","4.13","15.5"],"章节":["1.6"],"回调地狱":["1.6"],"是为了实现代码顺序执行而出现的一种操作":["1.6"],"value":["1.7","26.0"],"else":["1.7","1.9","9.2","10.8","22.5","47.0","70.0","74.0","102.0","113.0","116.0","119.5","124.0","136.0","165.0","171.0","173.0"],"error":["1.7","26.3"],"所以第二个":["1.8"],"等于":["1.8"],"当执行第三次":["1.8"],"传入的参数13就会被当作上一个yield表达式的返回值":["1.8"],"所以":["1.8","5.1","21.8"],"code":["1.9","9.2"],"if":["1.9","40.5","49.0","56.0","57.0","60.0","61.0","62.0","64.0","66.0","71.0","74.0","82.0","83.0","86.0","97.0","109.0","116.0","123.0","141.0","148.0","160.0","172.0"],"异步操作成功":["1.9","9.2"],"成功了":["1.9","9.2"],"出错了":["1.9","9.2"],"then":["1.9"],"res":["1.9","9.2","15.5","52.0","56.0","57.0","62.0","92.0"],"此时":["1.10"],"microtask":["1.10"],"的任务有":["1.10"],"且顺序为t2":["1.10"],"任务继续运行":["1.10"],"至此":["1.10"],"第一个宏任务执行完成":["1.10"],"执行所有的微任务":["1.10"],"先后取出":["1.10"],"分别输出":["1.10"],"代码执行完毕":["1.10"],"为什么":["1.10"],"会先执行呢":["1.10"],"理由如下":["1.10"],"方法允许调用时不带参数":["1.10"],"直接返回一个resolved":["1.10"],"状态的":["1.10"],"对象":["1.10","2.1","7.10","16.2","30.8"],"立即":["1.10"],"resolved":["1.10"],"的":["1.10","2.4","38.2","43.0"],"是在本轮":["1.10"],"event":["1.10"],"loop":["1.10"],"的结束时":["1.10"],"https":["2.0","20.0","42.0"],"geekbang":["2.0"],"org":["2.0"],"column":["2.0"],"article":["2.0"],"全局的":["2.1"],"位于每个":["2.1"],"iframe":["2.1","34.1"],"中":["2.1","24.4","87.2"],"文档":["2.1"],"dom":["2.1"],"树":["2.1","23.4"],"由可以通过遍历文档到达的所有原生":["2.1"],"节点组成":["2.1"],"存放栈上变量":["2.1"],"第二步":["2.1","43.0"],"回收非活动对象":["2.1"],"所占据的内存":["2.1"],"在标记完成后":["2.1"],"统一清理内存中所有被标记为非活动对象":["2.1"],"对象区与空闲区进行":["2.2"],"角色翻转":["2.2"],"也就是原来的对象区域变成空闲区域":["2.2"],"原来的空闲区域变成了对象区域":["2.2"],"这样就完成了一次垃圾回收":["2.2"],"如此循环":["2.2"],"pic5":["2.2"],"然后直接清理掉这一端之外的内存":["2.3"],"你可以参考下图":["2.3"],"pic7":["2.3"],"垃圾回收算法的优化":["2.3"],"由于":["2.3"],"是运行在主线程之上的":["2.3"],"因此":["2.3","34.3"],"一旦执行垃圾回收算法":["2.3"],"都需要将正在执行的":["2.3"],"所采用的就是并行策略":["2.4"],"它在执行垃圾回收的过程中":["2.4"],"启动了多个线程来负责":["2.4"],"还额外引入了灰色":["2.5"],"黑色表示这个节点被":["2.5"],"root":["2.5","49.0","50.0","64.0","110.0"],"引用到了":["2.5"],"而且该节点的子节点都已经标记完成了":["2.5"],"灰色表示这个节点被":["2.5"],"可以自由地执行":["2.6"],"在执行的同时":["2.6"],"辅助线程可以执行垃圾回收操作":["2.6"],"但是并发回收却是这三种技术中最难的一种":["2.6"],"这主要由以下两个原因导致的":["2.6"],"增量标记":["2.7"],"的方式":["2.7"],"清理的任务会穿插在各种":["2.7"],"任务之间执行":["2.7"],"内存泄露":["2.7"],"浏览器会认为这是必须的内存":["2.8"],"不是垃圾内存":["2.8"],"需在组件销毁前移除相关事件":["2.8"],"此处编写":["2.8"],"组件即将被卸载前执行的代码":["2.8"],"removeeventlistener":["2.8"],"被遗忘的es6":["2.8"],"set引用类型成员":["2.8"],"let":["2.8","10.7","52.0","54.0","92.0","104.0","138.0","169.0","170.0","174.0"],"map":["2.8","4.0","7.1","30.14"],"new":["2.8","7.0","7.4","8.15","9.1","9.2","26.3","50.0","61.0","88.0"],"set":["2.8","7.1","10.7","36.15"],"分别是堆快照":["2.9"],"内存分配情况和内存分配时间轴":["2.9"],"堆快照":["2.9"],"take":["2.9"],"heap":["2.9"],"snapshot":["2.9"],"手写new":["3.0"],"category":["3.1"],"push":["3.2","8.13","40.1","65.0","69.0","70.0","107.0","166.0"],"因为new也需要用apply":["3.3"],"所以这里需要区分两种情况下this指向":["3.3"],"如果是new":["3.3"],"传入的是object":["3.3"],"如果是bind":["3.3"],"传入的参数是function":["3.3"],"如果是":["3.3","37.4"],"来调用的话":["3.3"],"this的指向就是其实例":["3.3"],"如果不是":["3.3"],"调用的话":["3.3"],"就改变":["3.3"],"指向到指定的对象":["3.3"],"concat":["3.3"],"箭头函数没有":["3.3"],"箭头函数this永远指向它所在的作用域":["3.3"],"修改绑定函数的原型指向":["3.3"],"运算符创建一个用户定义的对象类型的实例或具有构造函数的内置对象的实例":["3.3"],"的结果是一个新对象":["3.3"],"person":["3.3"],"mdn解释":["3.4"],"创建一个新的js空对象":["3.4"],"即":["3.4"],"为步骤":["3.4"],"undefined":["3.5"],"symbol新的数据结构":["4.0"],"唯一值":["4.0"],"for":["4.0","88.0","94.0","104.0","111.0","112.0","144.0","178.0","179.0"],"of":["4.0","94.0","111.0"],"遍历":["4.0"],"最佳实践":["4.1"],"不用var":["4.1"],"random":["4.3","43.0","179.0","180.0"],"spredarr":["4.6"],"cc":["4.9"],"deleteproperty":["4.12"],"extends":["4.14"],"age":["4.14","36.7","39.4"],"super":["4.14"],"sayage":["4.14"],"外部访问不到":["4.17"],"this对象":["5.0"],"this绑定规则":["5.0"],"中并没有":["5.1"],"属性":["5.1","22.8"],"当不能读取到constructor":["5.1"],"属性时":["5.1"],"会从":["5.1"],"的原型也就是":["5.1"],"中读取":["5.1"],"正好原型中有该属性":["5.1"],"blog":["5.2"],"所以结果会打印":["5.4"],"ps":["5.4","9.1","39.2"],"bash是采用动态作用域的":["5.4"],"再看一个例子":["5.4"],"scope":["5.4"],"global":["5.4"],"checkscope":["5.4"],"local":["5.4"],"foo":["5.5","5.8","7.2"],"foo1":["5.5"],"foo2":["5.5"],"在浏览器控制台下":["5.6"],"this":["5.6"],"window":["5.6"],"true":["5.6","7.19","22.13","36.9","47.0","48.0","63.0","110.3"],"对应的作用域是全局作用域":["5.7"],"js采用的是":["5.7"],"静态":["5.7"],"作用域":["5.7"],"由函数":["5.7"],"定义":["5.7","79.3"],"的位置就决定":["5.7"],"打印name时":["5.7"],"会现在foo作用域内查找":["5.7"],"打印出":["5.7"],"打印type时":["5.7"],"var":["5.8","30.4","49.0","89.0","150.0","151.0","174.0"],"对应的reference是":["5.8"],"fooreference":["5.8"],"false":["5.8","22.5","45.0","47.0","48.0","53.0","65.0","66.0","118.0"],"实际上this的最终指向的是那个调用它的对象":["5.9"],"这说明this关键字只与函数的执行环境有关":["5.9"],"es6的this可以通过箭头函数直接绑定在该函数的执行的作用域上":["5.10"],"箭头函数中使用的":["5.10"],"其实是直接包含它的那个函数或函数表达式中的":["5.10"],"const":["5.10","6.3","7.4","9.2","20.18","25.0","56.0","57.0","62.0","129.0","142.0"],"obj":["5.10","10.5"],"getarrow":["5.10"],"return":["5.10","8.6","8.12","10.6","15.5","20.18","22.9","49.0","64.0","119.2","120.1"],"这里的":["5.10"],"是":["5.10","30.14","36.15","125.0"],"中的":["5.10"],"由":["5.10"],"的调用方式决定":["5.10"],"data0":["5.12"],"data1":["5.12"],"data2":["5.12"],"答案都是3":["5.12"],"原因":["5.12"],"函数形成了闭包":["5.12"],"是由":["5.12"],"声明的":["5.12"],"不会产生块级作用域":["5.12"],"且存在变量提升现象":["5.12"],"所以函数引用的i就是全局作用域的":["5.12"],"由于全局作用域中只有一个":["5.12"],"datan":["5.12"],"共享传递":["5.13"],"在传递对象的时候":["5.13"],"传递对象的引用的副本":["5.13"],"使用label语法":["6.1"],"funtion":["6.2"],"从":["6.3"],"react源码":["6.3"],"中获取判断变量类型的灵感":["6.3"],"gettype":["6.3"],"a":["6.3","7.4","7.19","85.0","132.0","158.0"],"prototype":["6.3","130.0","131.0","133.0"],"symbol":["7.0"],"es6":["7.0"],"bingint":["7.0"],"null":["7.1","64.0"],"func":["7.2"],"object":["7.3","7.20","157.0"],"lin":["7.4"],"input是要转换的值":["7.5"],"preferredtype是可选参数":["7.5"],"可以是number或string类型":["7.5"],"则返回这个原":["7.6"],"始值":["7.6"],"arr":["7.7","118.0","180.0"],"d":["7.7","156.0","161.0","162.0"],"也是转为":["7.9"],"0xf":["7.10"],"转为15":["7.10"],"空字符串转为0":["7.10"],"其余情况则为":["7.10"],"数组":["7.10","79.3"],"或":["7.10","20.3"],"这6种情况转为布尔值结果为":["7.11"],"如果不是原始类型":["7.12"],"逻辑与":["7.13"],"逻辑或":["7.13"],"逻辑非":["7.13"],"算术运算符":["7.13"],"true变成1":["7.15"],"首先会变成":["7.15"],"然后再变成数字":["7.15"],"所以一定伴随着隐式类型转换":["7.17"],"这几个是":["7.18"],"b":["7.19","36.8","85.0","132.0","158.0"],"引用类型":["7.20"],"会依照":["7.20"],"toprimitive规则":["7.20"],"转换为原始类型":["7.20"],"是引用类型向原始类型转变的规则":["7.20"],"它遵循先valueof后tostring的模式期望得到一个原始类型":["7.20"],"如果还是没法得到一个原始类型":["7.20"],"就会抛出":["7.20"],"typeerror":["7.20"],"对象和字符串比较":["7.20"],"对象通过":["7.20"],"tostring":["7.20"],"得到一个基本类型值":["7.20"],"而不是":["7.21"],"它会先返回i":["7.21"],"在将i":["7.21"],"故toprimitive":["7.21"],"也就是1":["7.21"],"此时i":["7.21"],"执行完a":["7.21"],"1返回true":["7.21"],"会执行a":["7.21"],"同理":["7.21"],"会调用toprimitive":["7.21"],"同上先调用valueof方法":["7.21"],"在调用tostring方法":["7.21"],"由于第一步":["7.21"],"如果其中一方为object":["7.22"],"且另一方为string":["7.22"],"number或者symbol":["7.22"],"会将object转换成字符串":["7.22"],"js":["7.22","12.0","22.11","25.0","30.4"],"number":["7.23","21.3","26.1","49.0"],"boolean":["7.23","150.0"],"数组在做字符串化时":["7.25"],"将数组所有元素字符串化再用":["7.25"],"连接":["7.25"],"mull":["7.26"],"当对象执行json":["7.26"],"方法时":["7.26"],"如果对象中存在":["7.26"],"tojson方法":["7.26"],"用它的返回值来进行序列化":["7.26"],"其他类型转为number类型":["7.27"],"其余全部为true":["7.28"],"常用于转化为布尔类型的方法有":["7.28"],"table":["7.29"],"中最常用的继承模式":["8.0"],"原型式继承":["8.0"],"寄生式继承":["8.0"],"person1":["8.1"],"kevin":["8.1"],"缺点":["8.1","10.4","15.1","15.2"],"instanceof":["8.2"],"优点":["8.3","15.2"],"原型上的方法":["8.3"],"比如":["8.3","35.2","36.15"],"可以被共享":["8.3"],"所有的实例的getname":["8.3"],"方法指向同一个":["8.3"],"peron1":["8.6"],"linda":["8.11"],"barbie":["8.11"],"alert":["8.11"],"hi":["8.12"],"返回这个对象":["8.12"],"child2":["8.13"],"child1":["8.15"],"boy":["8.15"],"white":["8.15"],"throw":["9.0","26.3"],"promise对象方法":["9.0"],"all":["9.0"],"p1":["9.0","170.0"],"p2":["9.0"],"p3":["9.0"],"只要p1":["9.0"],"p3之中有一个被rejected":["9.0"],"p的状态就变成rejected":["9.0"],"只有p1":["9.0"],"p3的状态都变成fulfilled":["9.0"],"这个位置的代码是":["9.1"],"异步代码看起来像同步代码":["9.2"],"表示这是一个async函数":["9.2"],"而await只能在这个函数里面使用":["9.2"],"会将后面的语句可以看成是一个":["9.2"],"表示在这里":["9.2"],"await后面的操作执行完毕":["9.2"],"等待返回promise":["9.2"],"成功状态":["9.2"],"才会恢复async函数的执行":["9.2"],"执行await下一条语句":["9.2"],"并得到":["9.2"],"的值":["9.2"],"作为":["9.2","41.1"],"表达式的运算结果":["9.2"],"如果得到promise的":["9.2"],"值":["9.2","33.7"],"则报错并结束该函数的执行":["9.2"],"await下一条语句不会执行":["9.2"],"fn":["9.2"],"some":["9.2"],"err":["9.2"],"等同于":["9.2"],"基础类型值的复制是直接拷贝一份新的一模一样的数据":["10.0"],"这两份数据":["10.0"],"相互独立":["10.0"],"互不影响":["10.0"],"而引用类型值":["10.0"],"object类型":["10.0"],"的复制是传递对象的引用":["10.0"],"也就是对象所在的内存地址":["10.0"],"即指向对象的指针":["10.0"],"相当于多个变量":["10.0"],"指向同一个对象":["10.0"],"那么只要其中的一个变量对这个对象进行修改":["10.0"],"其他的变量所指向的对象也会跟着修改":["10.0"],"用于连接两个或多个数组":["10.1"],"slice":["10.1"],"deepcopy":["10.5"],"只写这一个isobject的if":["10.7"],"那如果初始的target他是基本数据类型呢":["10.7"],"你也要返回他的值进行赋值吧":["10.7"],"所以要多加下面一个else":["10.7"],"target的判断":["10.7"],"判断是否是引用类型":["10.7"],"如果是引用类型的拷贝":["10.7"],"要另起一个内存空间":["10.7"],"cloneobj":["10.7"],"isarray":["10.7","21.3"],"需要记录当前这个引用类型target被拷贝过":["10.7"],"has":["10.8","90.0"],"container":["11.0"],"onmousemove":["11.0"],"getuseraction":["11.0"],"使用定时器":["11.0"],"当触发事件的时候":["11.0"],"我们设置一个定时器":["11.0"],"再触发事件的时候":["11.0"],"熟练掌握前端基础语言":["12.0"],"html":["12.0","29.2","36.8"],"css":["12.0"],"ts":["12.0"],"熟练使用":["12.0"],"react":["12.0"],"框架及相关工具以及u框架":["12.0"],"antdesign":["12.0"],"t":["12.0"],"desgin":["12.0"],"避免服务计算压力堆积":["12.1"],"编写babel插件完成代码插桩sdk":["12.1"],"用于前端项目接入":["12.1"],"个人职责":["12.1","12.2"],"参与项目日常讨论":["12.2"],"功能设计规划":["12.2"],"方向讨论":["12.2"],"日常值班反馈处理等":["12.2"],"ue":["12.3"],"qa等一起完成需求从评审到上线的流程":["12.3"],"完成平台创编模块前端重构":["12.3"],"配合合作方完成系统历史逻辑梳理":["12.3"],"vpteammembers":["14.0"],"db":["15.0"],"每次更新页面的一小的模块":["15.1"],"前后端分离":["15.2"],"开发效率高":["15.2"],"前端这块耗时少":["15.3"],"速度快":["15.3"],"有利于seo优化":["15.3"],"因为在后端有完整的html页面":["15.3"],"所以爬虫更容易爬取信息":["15.3"],"更好的安全性":["15.3"],"由于服务端渲染是在服务器端完成的":["15.3"],"构建工具":["15.4"],"需要使用":["15.4"],"webpack":["15.4"],"等工具来打包渲染的代码":["15.4"],"渲染引擎":["15.4"],"component":["15.5","26.3"],"initialprops":["15.5"],"getinitialprops":["15.5"],"promise":["15.5"],"静态文件服务":["15.6"],"js提供了静态文件服务":["15.6"],"可以为项目的资源提供有效的访问路径":["15.6"],"如何解决":["15.7"],"在使用服务端渲染时":["15.7"],"如何保证":["15.7"],"和浏览器":["16.0"],"的特性":["16.0"],"因此需要考虑浏览器兼容性和页面加载速度等问题":["16.0"],"就是指":["16.0"],"后的":["16.0"],"号以及后面的字符":["16.0"],"比如说":["16.0"],"www":["16.0"],"baidu":["16.0"],"hashhash":["16.0"],"其中":["16.0"],"replacestate":["16.1"],"方法":["16.1","22.0","34.1"],"这两个方法应用于浏览器记录栈":["16.1"],"在当前已有的":["16.1"],"back":["16.1"],"forward":["16.1"],"go":["16.1"],"基础之上":["16.1"],"它们提供了对历史记录修改的功能":["16.1"],"这些方法通常与":["16.1"],"onpopstate":["16.1"],"创建一个":["16.2"],"它是整个路由系统的核心":["16.2"],"负责管理浏览器历史记录":["16.2"],"触发导航事件等":["16.2"],"接下来需要将":["16.2"],"对象传递给":["16.2"],"组件":["16.2"],"requesttype":["19.2"],"fiber架构双缓存":["20.0"],"react源码如何调试":["20.0"],"参考资料":["20.0"],"react技术揭秘":["20.0"],"pictures":["20.1","24.6"],"发送网络请求后":["20.2"],"由于需要等待数据返回才能进一步操作导致不能快速响应":["20.2"],"react应对这两大瓶颈的办法是":["20.2"],"渲染到canvas":["20.3"],"svg":["20.3"],"vml":["20.3"],"ie8":["20.3"],"负责将变化的组件渲染到页面上":["20.4"],"可以看到":["20.4"],"但存在兼容性问题":["20.5"],"并且该方法的触发受很多因素影响":["20.5"],"reconciler与renderer不再是交替工作":["20.6"],"当scheduler将任务交给reconciler后":["20.6"],"reconciler会为变化的虚拟dom打上代表":["20.6"],"增":["20.6"],"删":["20.6"],"当高优先级的更新最终完成了渲染":["20.8"],"调度器又会开始新一轮的调度":["20.8"],"reconcile":["20.9"],"fiber架构":["20.10"],"实现了":["20.10"],"generator也是传染性的":["20.11"],"使用了generator则上下文的其他函数也需要作出改变":["20.11"],"这样心智负担比较重":["20.11"],"generator执行的中间状态是上下文关联的":["20.11"],"代数效应与fiber":["20.11"],"react内部实现的一套状态更新机制":["20.11"],"dom节点":["20.12"],"等信息":["20.12"],"动态的工作单元":["20.12"],"每个fiber节点保存了本次更新中该组件":["20.12"],"例子":["20.13"],"指函数本身":["20.14"],"对于classcomponent":["20.14","23.1"],"指class":["20.14"],"对于hostcomponent":["20.14"],"mode":["20.15"],"保存本次更新会造成的dom操作":["20.15"],"effecttag":["20.15"],"由于省去了两帧替换间的计算时间":["20.17"],"不会出现从白屏到出现画面的闪烁情况":["20.17"],"这种在内存中构建并直接替换的技术叫做双缓存":["20.17"],"num":["20.18"],"add":["20.18","110.8"],"usestate":["20.18"],"p":["20.18"],"onclick":["20.18"],"reactdom":["20.18","24.6"],"render":["20.18"],"document":["20.18"],"commit提交代码":["20.19"],"commit阶段会把render阶段提交的信息渲染在页面上":["20.19"],"render与commit阶段统称为":["20.19"],"0b00000000000010":["21.0"],"dom需要更新":["21.0"],"update":["21.0","23.2"],"0b00000000000100":["21.0","22.7"],"dom需要插入到页面中并更新":["21.0","22.7"],"jsx对象":["21.1"],"即classcomponent的render方法的返回结果":["21.1"],"或functioncomponent的调用结果":["21.1"],"jsx对象中包含描述dom节点的信息":["21.1"],"reconcilesingletextnode":["21.3"],"省略":["21.3"],"习题4":["21.4"],"sibling比较":["21.6"],"所以无法使用双指针优化":["21.6"],"基于以上原因":["21.6"],"diff":["21.6"],"aa":["21.7"],"bb":["21.7"],"情况2":["21.7"],"newchildren没遍历完":["21.7"],"oldfiber遍历完":["21.7"],"newchildren剩下":["21.7"],"未遍历":["21.7"],"意味着本次更新比之前的节点数量少":["21.8"],"有节点被删除了":["21.8"],"的工作是将剩下的oldfiber":["21.8"],"依次标记":["21.8"],"所以d节点位置不变":["21.9"],"且执行lastplacedindex":["21.9"],"abc":["21.9"],"dom树":["22.0"],"上":["22.0"],"具体如下":["22.0"],"首先会有一个pre":["22.0"],"主要是执行":["22.0"],"getsnapshotbeforeupdate":["22.0"],"可以获取当前dom的快照":["22.0"],"snap":["22.0"],"然后给需要卸载的组件执行componentwillunmount方法":["22.0"],"接着会把current":["22.0"],"替换为workinprogress":["22.0"],"最后执行dom的插入":["22.0"],"更新和删除":["22.0"],"给更新的组件执行componentdidupdate":["22.0"],"给插入的组件执行componentdidmount":["22.0"],"直到浏览器有空闲时间后再继续遍历":["22.1"],"方法会创建下一个":["22.1"],"fiber节点":["22.1"],"并赋值给":["22.1","22.6"],"并将这两个fiber节点连接起来":["22.2"],"当遍历到叶子节点":["22.2"],"即没有子组件的组件":["22.2"],"completework":["22.4"],"didreceiveupdate":["22.5"],"根据tag不同":["22.5"],"创建不同的子fiber节点":["22.5"],"switch":["22.5","36.9"],"case":["22.5","71.0","97.0"],"indeterminatecomponent":["22.5"],"不论走哪个逻辑":["22.6"],"最终他会生成":["22.6"],"新的子fiber节点":["22.6"],"workinprogress":["22.6","23.4"],"profiler":["22.9"],"contextconsumer":["22.9"],"memocomponent":["22.9"],"classcomponent":["22.9"],"type":["22.10","37.4"],"newprops":["22.10"],"rootcontainerinstance":["22.10"],"在":["22.10","23.4","23.6","34.3"],"firsteffect为起点的单向链表":["22.11"],"nexteffect":["22.11"],"rootfiber":["22.11"],"firsteffect":["22.11"],"执行dom操作":["22.12"],"layout":["22.12"],"执行dom操作后":["22.12"],"另外":["22.12"],"在before":["22.12"],"mutation之前":["22.12"],"主要做一些变量赋值":["22.12"],"passive":["22.13"],"noeffect":["22.13"],"rootdoeshavepassiveeffects":["22.13"],"schedulecallback":["22.13"],"ref":["22.14"],"分别处理":["22.14"],"获取fiber节点的dom兄弟节点":["22.15"],"gethostsibling":["22.15"],"commitwork":["22.16"],"从页面":["22.17"],"移除":["22.17"],"fiber节点对应dom节点":["22.17"],"及":["22.18"],"相关类型":["22.18"],"他会调用":["22.18"],"uselayouteffect":["22.18"],"hook":["22.18"],"的回调函数":["22.18"],"调度":["22.18"],"useeffect":["22.18"],"的销毁与回调函数":["22.18"],"git3":["23.0"],"待高优更新完成后":["23.0"],"低优更新":["23.0"],"基于":["23.0"],"高优更新的结果":["23.0"],"重新更新":["23.0"],"我们将可以":["23.0"],"触发更新的方法":["23.0"],"所隶属的组件分类":["23.0"],"不同类型组件挂载的数据不同":["23.1"],"payload为this":["23.1"],"setstate的第一个传参":["23.1"],"对于hostroot":["23.1"],"在一个classcomponent中触发this":["23.2"],"onclick方法":["23.2"],"方法内部调用了两次this":["23.2"],"这会在该fiber中产生两个":["23.2"],"fiber节点最多同时存在":["23.2"],"两个updatequeue":["23.2"],"pending":["23.3"],"触发更新时":["23.3"],"产生的update会保存在shared":["23.3"],"在遍历时如果有优先级低的update会被跳过":["23.4"],"当遍历完成后获得的state":["23.4"],"就是该fiber节点在本次更新的state":["23.4"],"源码中叫做memoizedstate":["23.4"],"state的变化在render阶段产生与上次更新不同的jsx对象":["23.4"],"通过":["23.4","36.15"],"diff算法":["23.4"],"产生effecttag":["23.4"],"commit阶段":["23.4"],"渲染在页面上":["23.4"],"渲染完成后":["23.4"],"树变为":["23.4"],"current":["23.4"],"lastbaseupdate已":["23.5"],"经保存了上一次的update":["23.5"],"所以不会丢失":["23.5"],"commit":["23.5"],"returns":["23.6"],"方法中就是我们熟悉的从":["23.6"],"到":["23.6","31.0"],"调度update":["23.6"],"的流程了":["23.6"],"inst":["23.6"],"payload":["23.6"],"变得更为清晰和隔离":["24.0"],"注意":["24.0","36.4","58.0"],"避免在":["24.0"],"循环":["24.0"],"条件判断":["24.0"],"嵌套函数":["24.0"],"中调用":["24.0"],"保证调用顺序的稳定":["24.0"],"的更新":["24.1"],"更新内容为usestate的":["24.1"],"initialvalue":["24.1"],"即0":["24.1"],"点击p标签触发":["24.1"],"会产生一次update的更新":["24.1"],"next":["24.2","111.0"],"情况如下":["24.3"],"u0":["24.3"],"的意义就是指向属于这个fiber的":["24.4"],"更新前将workinprogresshook重置为fiber保存的第一个hook":["24.5"],"workinprogresshook":["24.5"],"fiber":["24.5"],"总结":["24.6"],"react将同一个hooks的多个update通过":["24.6"],"环状单向链表":["24.6"],"关联起来":["24.6"],"并且在hooks内部是利用":["24.6"],"返回的state和setstate方法":["24.6"],"hooks":["24.6"],"dispatcher":["24.6"],"是一个包含了":["24.6"],"函数的共享对象":["24.6"],"它将基于":["24.6"],"的渲染阶段被动态地分配或清理":["24.6"],"并且它将确保用户无法在react组件外访问到hooks":["24.6"],"修改state引起重渲染原理":["24.6"],"star":["24.6"],"react核心原理3":["24.6"],"状态更新":["24.6"],"常用钩子":["24.6"],"本质上讲suspense内的组件子树比组件树的其他部分拥有更低的优先级":["25.0"],"usedeferredvalue":["25.0"],"返回一个延迟响应的值":["25.0"],"该值可能":["25.0"],"延后":["25.0"],"的最长时间为":["25.0"],"timeoutms":["25.0"],"deferredvalue":["25.0"],"xxxcontext":["26.0"],"provider":["26.0"],"xxx":["26.0","26.1"],"dispathch":["26.0"],"target":["26.1","129.0"],"dohandler":["26.1"],"若想修改全局count":["26.1"],"先获取count对应的修改抛出事件对象dispatch":["26.1"],"然后通过dispatch将修改内容抛出":["26.1"],"抛出的修改内容为":["26.1"],"即告诉count的修改事件处理函数":["26.1"],"本次修改的类型为add":["26.1"],"参数是param":["26.1"],"这里的add和param完全是根据自己实际需求自己定义的":["26.1"],"resethandler":["26.1"],"app":["26.2","30.6"],"must":["26.3"],"be":["26.3"],"wrapped":["26.3"],"宿主环境的视图":["29.1"],"这个公式说明":["29.1"],"模板":["29.2"],"它扩充的是":["29.2"],"语法":["29.2"],"例如vue中的模版":["29.2"],"ios":["29.3"],"的系统":["29.3"],"应用":["29.3"],"因为其本身不与任何平台耦合":["29.3"],"只需要提供相应的宿主":["29.3"],"就能做到跨平台使用框架":["29.3"],"不同框架":["29.3"],"主要的差异其实是在步骤一":["29.3"],"中变化的元素":["29.6"],"元素级框架":["29.6"],"如":["29.6","38.4","41.8"],"svelte":["29.6"],"由于可以直接精准的找到":["29.6"],"即时编译":["29.7"],"会消耗更多时间用于编译":["29.7"],"且应用代码体积会更大":["29.7"],"因为需要包含编译的相关逻辑":["29.7"],"使用模板的框架":["29.7"],"优化代码体积":["30.1"],"去除空格":["30.1"],"o":["30.2"],"bundle":["30.2","30.14"],"上面命令的作用":["30.2"],"从a":["30.2"],"js文件开始":["30.2"],"按照模块引入的顺序把所有代码打包到bundle":["30.2"],"js文件里":["30.2"],"path是node中的路径解析模块":["30.3"],"dirname是node的一个全局变量":["30.3"],"表示当前文件夹根目录的绝对路径":["30.3"],"npm":["30.4"],"install":["30.4"],"安装该两个loader":["30.4"],"在webpack":["30.4"],"config":["30.4"],"js文件中配置这两个loader":["30.4"],"path":["30.4"],"require":["30.4","30.6"],"ensure动态导入模块":["30.5"],"现在推荐使用import":["30.5"],"它生成的文件是在":["30.9"],"内存":["30.9"],"中而不是在电脑磁盘":["30.9"],"开头":["30.10"],"表示要访问的资源以当前页面的服务器地址作为基础路":["30.10"],"径":["30.10"],"都当作模块来处理":["30.11"],"现在的webpack":["30.11"],"数组每一项是一个js对象":["30.12"],"该对象有两个关键属性":["30.12"],"是一个正则表达式或正则表达式数组":["30.12"],"模块文件名与正则匹配的会被use里的loader处理":["30.12"],"等价于":["30.13"],"watch":["30.14"],"参数便可打开监听模式":["30.14"],"dev":["30.14"],"server开发工具":["30.14"],"即devserver":["30.14"],"其功能有":["30.14"],"支持文件监听和浏览器自动刷新":["30.14"],"模块热替换":["30.14"],"可开启本地http服务器":["30.14"],"一来可以请求处理和转发":["30.14"],"二是就不需要使用本地文件预览了":["30.14"],"支持source":["30.14"],"方便调试工作":["30.14"],"如何理解module":["30.14"],"chunk":["30.14"],"其实就是同一份逻辑代码在不同转换场景下的取了三个名字":["30.14"],"我们直接写出来的是":["30.14"],"处理时":["30.14"],"最后生成浏览器可以直接运行的结果是":["30.14"],"webpack运行过程":["30.14"],"的运行流程是一个串行的过程":["30.14"],"从启动到结束会依次执行以下流程":["30.14"],"初始化参数":["30.14"],"从配置文件和":["30.14"],"shell":["30.14"],"语句中读取与合并参数":["30.14"],"得出最终的参数":["30.14"],"开始编译":["30.14"],"用上一步得到的参数初始化":["30.14"],"加载所有配置的插件":["30.14"],"硬连接":["31.0"],"然后之间通过":["31.0"],"软链接":["31.0"],"来组织依赖关系":["31.0"],"这样不但节省磁盘空间":["31.0"],"也没有幽灵依赖问题":["31.0"],"安装速度还快":["31.0"],"从机制上来说完胜":["31.0"],"而":["33.0","38.4"],"提供了从":["33.0"],"服务器获取数据的能力":["33.0"],"如果你想要更新某条数据":["33.0"],"只需要通过":["33.0"],"ontimeout":["33.1"],"e":["33.1"],"onerror":["33.1","33.5"],"会创建一个":["33.2"],"onreadystatechange":["33.3"],"用来监控后台请求过程中的状态":["33.3"],"你可以参考文中示例代码":["33.4"],"我们通过xhr":["33.4"],"timeout":["33.4"],"如果网络请求出错了":["33.5"],"就会执行":["33.5"],"webapi":["33.6"],"break":["33.7"],"token过期":["33.7"],"登录过期对用户进行提示":["33.7"],"清除本地token和清空vuex中token对象":["33.7"],"跳转登录页面":["33.7"],"404请求不存在":["33.7"],"其他错误":["33.7"],"直接抛出错误提示":["33.7"],"default":["33.7"],"封装get方法":["33.7"],"我们通过定义一个get函数":["33.7"],"get函数有两个参数":["33.7"],"第一个参数表示我们要请求的url地址":["33.7"],"第二个参数是我们要携带的请求参数":["33.7"],"get函数返回一个promise对象":["33.7"],"当axios其请求成功时resolve服务器返回":["33.7"],"请求失败时reject错误值":["33.7"],"而fetch的兼容性较差":["33.8"],"只有最新的浏览器才支持":["33.8"],"请求和取消":["33.8"],"在使用ajax时":["33.8"],"我们可以通过xhr对象的abort":["33.8"],"方法取消正在进行的请求":["33.8"],"api没有提供类似的方法":["33.8"],"需要通过新的api来实现":["33.8"],"默认不带cookie":["33.8"],"当使用fetch":["33.8"],"api发送请求时":["33.8"],"默认情况下不会自动发送cookie":["33.8"],"需要设置请求选项才能携带cookie":["33.8"],"属性从浏览器访问":["34.0"],"限制":["34.0"],"cookie大小限制为":["34.0"],"4k":["34.0"],"每个域的":["34.0"],"总数不得超过":["34.0"],"左右":["34.0"],"具体限制取决于浏览器":["34.0"],"那么浏览器会完全禁止第三方":["34.1"],"从第三方站点的链接打开和从第三方站点提交":["34.1"],"get":["34.1","90.0"],"方式的表单这两种方式都会携带":["34.1"],"但如果在第三方站点中使用":["34.1"],"post":["34.1"],"或者通过":["34.1"],"等标签加载的":["34.1"],"url":["34.1"],"这些场景都不会携带":["34.1"],"deletecookie":["34.2"],"存储对象不会随每个请求被发送到服务器":["34.3"],"我们可以保存更多数据":["34.3"],"大多数现代浏览器都允许保存至少":["34.3"],"5mb":["34.3"],"的数据":["34.3"],"或更多":["34.3"],"并且具有用于配置数据的设置":["34.3"],"还有一点和":["34.3"],"服务器无法通过":["34.3"],"header":["34.3"],"操纵存储对象":["34.3"],"一切都是":["34.3"],"中完成的":["34.3"],"key":["34.3"],"不会过期":["34.5"],"数据在页面刷新后仍然保留":["34.6"],"但在":["34.6"],"关闭":["34.6"],"at":["34.7"],"date":["34.7"],"indexeddb":["34.7"],"是一个浏览器内建的数据库":["34.7"],"它比":["34.7"],"用户离开网站后session会被销毁":["34.8"],"记住密码":["34.9"],"这通常就是通过在":["34.9"],"签名":["34.10"],"由token的前几位":["34.10"],"渲染内核就是渲染进程":["35.0"],"该两模块工作过程如下":["35.0"],"所有的网络资源都是通过浏览器内核来下载的":["35.0"],"下载后的资源会通过":["35.0"],"ipc":["35.0"],"将其提交给渲染进程":["35.0"],"浏览器内核和渲染进程之间都是通过":["35.0"],"来通信的":["35.0"],"是利用":["35.1"],"操作系统提供的安全技术":["35.1"],"让":["35.1"],"渲染进程在执行过程中无法访问或者修改操作系统中的数据":["35.1"],"的请求":["35.2"],"用户交互":["35.2"],"通常情况下":["35.2"],"如果你要实现一个":["35.2"],"ui":["35.2"],"程序":["35.2"],"操作系统会提供一个界面给你":["35.2"],"该界面允许应用程序与用户交互":["35.2"],"允许应用程序在该界面上进行绘制":["35.2"],"windows":["35.2"],"提供的是":["35.2"],"hwnd":["35.2"],"就可以将恶意的":["35.3"],"隔离在恶意进程内部":["35.3"],"使得它无法继续访问其他":["35.3"],"和操作系统没有关系的":["35.4"],"网络安全":["35.4"],"网络安全协议":["35.4"],"如果浏览器没有安全策略的话":["36.0"],"会出现很多不可控的安全问题":["36.0"],"比如你打开了一个银行站点":["36.0"],"然后又一不小心打开了一个恶意站点":["36.0"],"如果没有安全措施":["36.0"],"恶意站点就可以做很多事情":["36.0"],"修改银行站点的":["36.0"],"浏览器默认两个相同的源之间是可以":["36.1"],"相互访问资源和操作":["36.1"],"同源策略对数据层面的影响":["36.2"],"同源策略限制了不同源的站点读取当前站点的":["36.2"],"cookie":["36.2","36.4"],"indexdb":["36.2"],"localstorage":["36.2"],"等数据":["36.2"],"实现":["36.3"],"通信的关键是":["36.3"],"服务器":["36.3","36.15","43.0"],"只要服务器实现了":["36.3"],"接口":["36.3"],"就可以跨源通信":["36.3"],"浏览器将cors请求分成两类":["36.3"],"简单请求":["36.3"],"非简单请求":["36.3"],"只要同时满足以下两大条件":["36.3"],"就属于简单请求":["36.3"],"请求方法是以下三种方法之一":["36.3"],"当前域名":["36.4"],"做匹配":["36.4"],"浏览器就会驳回请求":["36.4"],"正常情况下":["36.4"],"浏览器会处理请求":["36.4"],"请求和响应都不包含":["36.4"],"缓存多长时间":["36.5"],"以秒表示":["36.5"],"如果在缓存期内":["36.5"],"浏览器会使用缓存的预检结果来判断是否发送跨域请求":["36.5"],"一旦服务器通过":["36.5"],"存在兼容性问题":["36.6"],"特别是":["36.6"],"这个头部信息标明缓存多长时间":["36.7"],"代理到开发环境node服务":["36.9"],"changeorigin":["36.9"],"浏览器代理":["36.9"],"工具":["36.9"],"whilst":["36.9"],"omega":["36.9"],"原理与webpack":["36.9"],"proxy类似":["36.9"],"比如一组运营活动项目":["36.9"],"whistle":["36.9"],"rules如下":["36.9"],"ssr页面请求":["36.9"],"访问本地前端项目":["36.9"],"end":["36.10","65.0","73.0","94.0","96.0"],"content":["36.10"],"v8zhuanlankaipianci0316":["36.10"],"比如可以获取用户输入的信用卡等信息":["36.11"],"将其发送到恶意服务器":["36.11"],"黑客掌握了这些信息之后":["36.11"],"又可以做很多违法的事情":["36.11"],"修改":["36.11"],"伪造假的登录窗口":["36.11"],"用来欺骗用户输入用户名和密码等信息":["36.11"],"没有做好过滤":["36.12"],"服务端在接受到数据时":["36.12"],"混在其中的恶意代码也被执行":["36.13"],"恶意代码窃取用户数据并发送到攻击者的网站":["36.13"],"或者冒充用户的行为":["36.13"],"调用目标网站接口执行攻击者指定的操作":["36.13"],"有通过本地恶意软件来劫持的":["36.14"],"它们的共同点是在":["36.14"],"因此还可以通过使用":["36.15"],"属性来保护我们":["36.15"],"的安全":["36.15"],"响应头":["36.15"],"来设置的":["36.15"],"nid":["36.15"],"csrf":["36.16"],"cross":["36.16"],"site":["36.16"],"request":["36.16"],"forgery":["36.16"],"请求的来源地址":["36.17"],"也是标记了http请求的来源":["36.17"],"但不包含具体的url路径":["36.17"],"safe":["36.17","52.0"],"pic4":["36.17"],"服务器的策略是优先判断":["36.17"],"如果请求头中没有包含":["36.17"],"再根据实际情况判断是否使用":["36.17"],"other":["37.0","38.0"],"pic1":["37.0","42.1"],"至少需要":["37.0","73.0"],"个网络进程":["37.0"],"个特点":["37.1"],"进程中的任意一线程执行出错":["37.1"],"都会导致整个进程的崩溃":["37.1"],"线程":["37.1"],"所以一个插件的意外崩溃会引起整个浏览器的崩溃":["37.2"],"渲染引擎模块":["37.2"],"也是不稳定的":["37.2"],"通常一些复杂的":["37.2"],"代码就有可能引起渲染引擎模块的崩溃":["37.2"],"和插件一样":["37.2"],"下":["37.3"],"如果从一个页面打开了另一个新页面":["37.3"],"左键直接点击打开的":["37.3"],"而新页面和当前页面属于":["37.3"],"同一站点":["37.3"],"的话":["37.3"],"那么新页面会复用父页面的渲染进程":["37.3"],"的使用初衷是为了实现":["37.3"],"3d":["37.3"],"的效果":["37.3"],"构建请求头信息":["37.4"],"发送http请求":["37.4"],"服务器响应后":["37.4"],"网络进程接收响应头和响应信息":["37.4"],"并解析响应内容":["37.4"],"解析响应流程":["37.4"],"检查状态码":["37.4"],"则需要重定向":["37.4"],"从location自动中读取地址":["37.4"],"则继续处理请求":["37.4"],"200响应处理":["37.4"],"检查响应类型content":["37.4"],"如果是字节流类型":["37.4"],"则将该请求提交给下载管理器":["37.4"],"该导航流程结束":["37.4"],"不再进行后续的渲染":["37.4"],"如果是html则通知":["37.4"],"pic8":["38.0"],"流水线可分为如下几个子阶段":["38.0"],"构建":["38.0"],"解析器解析":["38.1"],"最终输出树状结构的":["38.1"],"计算出":["38.2"],"树中每个节点的具体样式":["38.2"],"现在样式的属性已被标准化了":["38.2"],"接下来就需要计算":["38.2"],"树中每个节点的样式属性":["38.2"],"这里涉及到":["38.2"],"我们把这个计算过程叫做":["38.3"],"布局":["38.3"],"不可见":["38.4"],"的节点会被布局树忽略掉":["38.4"],"pic14":["38.6"],"并不是布局树的每个节点都包含一个图层":["38.6"],"如果一个节点没有对应的层":["38.6"],"pic15":["38.7"],"栅格化过程都会使用":["38.8"],"gpu":["38.8"],"来加速生成":["38.8"],"使用":["38.8"],"为每个图层生成":["38.9"],"绘制列表":["38.9"],"并将其提交到合成线程":["38.9"],"合成线程将图层分成":["38.9"],"图块":["38.9"],"并在":["38.9"],"重新布局":["38.10"],"解析之后的一系列子阶段":["38.10"],"布局阶段不会执行":["38.11"],"这样的效率是最高的":["38.12"],"因为是在非主线程上合成":["38.12"],"resize":["38.13"],"事件":["38.13"],"对":["38.13"],"dns是什么":["39.0"],"用户在浏览网站的时候":["39.1"],"cdn会选择一个离用户最近的cdn边缘节点来响应用户的请求":["39.1"],"用户向服务器发起请求":["39.2"],"服务器响应用户请求":["39.2"],"将用户所需内容传送到用户终端":["39.2"],"如果这台缓存服务器上并没有用户想要的内容":["39.2"],"而区域均衡设备依然将它分配给了用户":["39.2"],"那么这台服务器就要向它的上一级缓存服务器请求内容":["39.2"],"直至追溯到网站的源服务器将内容拉到本地":["39.2"],"负载均衡":["39.2"],"服务器上这个过程":["39.3"],"就是说":["39.3"],"max":["39.4","52.0","95.0","153.0","154.0","161.0"],"普通文件如果在边缘节点没有找到的话":["39.5"],"就会去上一层接着寻找":["39.5"],"但是流媒体本身数据量就非常大":["39.5"],"直到达到全球只有13台的跟域名服务器":["39.6"],"其实缓存有很多种":["40.0"],"包括":["40.0"],"浏览器缓存":["40.0"],"dns缓存":["40.0"],"cdn缓存等等":["40.0"],"从输入域名到返回结果":["40.0"],"经历的每一步":["40.0"],"都可能有缓存":["40.0"],"如果有缓存":["40.0"],"就不会再次去请求数据":["40.1"],"当以上三种缓存都没有命中时":["40.1"],"它才会被使用":["40.1"],"它只在会话":["40.1"],"session":["40.1"],"中存在":["40.1"],"在chrome中打开控制台":["40.3"],"在network中显示的是":["40.3"],"memory":["40.3"],"cache":["40.3","40.8"],"或者是":["40.3"],"disk":["40.3","40.8"],"00":["40.4"],"gmt":["40.4"],"表示资源会在":["40.4"],"强制缓存失效":["40.5"],"后":["40.5"],"浏览器携带缓存标识向服务器发起请求":["40.5"],"由服务器根据缓存标识决定是否使用缓存的过程":["40.5"],"而整个过程是需要发出请求的":["40.5"],"协商缓存由":["40.5"],"2组字段":["40.5"],"不是2个":["40.5"],"控制协商缓存的字段有":["40.5"],"last":["40.5","41.6"],"modified":["40.5"],"请求结果":["40.6"],"小于":["40.7"],"最后修改时间":["40.7"],"则表示修改了":["40.7"],"响应":["40.7"],"状态码":["40.7"],"并返回数据":["40.7"],"这就是启发式缓存阶段":["40.8"],"这个阶段很容让人忽视":["40.8"],"但实际上每时每刻都在发挥着作用":["40.8"],"用户行为对浏览器缓存的影响":["40.8"],"所谓用户行为对浏览器缓存的影响":["40.8"],"指的就是用户在浏览器如何操作时":["40.8"],"会触发怎样的缓存策略":["40.8"],"主要有":["40.8"],"种":["40.8"],"打开网页":["40.8"],"地址栏输入地址":["40.8"],"查找":["40.8"],"中是否有匹配":["40.8"],"如有则使用":["40.8"],"control":["41.0"],"protocol":["41.0"],"传输控制协议":["41.0"],"是面向连接的协议":["41.0"],"也就是说":["41.0"],"在收发数据前":["41.0"],"必须和对方建立可靠的连接":["41.0"],"第三次握手":["41.1","41.2"],"客户端收到服务器端响应的":["41.1"],"会发送一个":["41.1"],"也是一样把服务器的":["41.1"],"表示已经收到了服务端发来的的":["41.1"],"ack":["41.2"],"这会让服务器花费很多时间":["41.3"],"内存空间来接收这些报文":["41.3"],"简单的记忆就是":["41.3"],"势必有大量连接处于syn":["41.4"],"rcvd状态":["41.4"],"从而占满整个半连接队列":["41.4"],"无法处理正常的请求":["41.4"],"每次重传等待的时间不一定相同":["41.5"],"一般会是指数增长":["41.5"],"例如间隔时间为":["41.5"],"且指定一个序列号":["41.6"],"的状态":["41.6"],"等待客户端的确认":["41.6"],"等待原来发向远程tcp的连接中断请求的确认":["41.6"],"第四次挥手":["41.6"],"客户端收到":["41.6"],"一样发送一个":["41.6"],"报文作为应答":["41.6"],"w":["41.6"],"报文最终能达到对端":["41.7"],"com":["41.8"],"cn":["41.8","42.2"],"org等":["41.8"],"地址":["41.8"],"此时本地域名服务器ldns再发送dns请求给":["41.8"],"主域名服务器gtld":["41.8"],"接受请求的gtld查找并返回这个域名对应的":["41.8"],"name":["41.8"],"头部压缩":["42.0"],"的发展":["42.0"],"from":["42.0"],"mdn":["42.0"],"字符流返回给客户端":["42.1"],"文档传输完成后":["42.1"],"断开连接":["42.1"],"network":["42.1"],"iso":["42.2"],"utf":["42.2"],"language":["42.2"],"zh":["42.2"],"服务器接收到浏览器发送过来的请求头信息之后":["42.2"],"会根据请求头的信息来准备响应数据":["42.2"],"不过有时候会有一些意外情况发生":["42.2"],"比如浏览器请求的压缩类型是":["42.2"],"但是服务器不支持":["42.2"],"会在响应头加入这行代码":["42.4"],"connection":["42.4"],"keep":["42.4"],"alive":["42.4"],"如果":["42.5"],"tcp":["42.5"],"发送给服务端":["42.6"],"同时服务端也一次性打包将所有的返回回传回来":["42.6"],"只有get和head请求可以进行管线化":["42.6"],"域名地址":["42.7"],"这样服务器就可以根据不同的":["42.7"],"服务器会将数据分割成若干个任意大小的数据块":["42.8"],"每个数据块发送时会附上上个数据块的长度":["42.8"],"bytes":["42.9"],"这里边":["42.9"],"表示当前发送的数据范围":["42.9"],"表示文件总大小":["42.9"],"举个":["42.9"],"提供了":["42.10"],"缓存机制":["42.10"],"用来缓存已经下载过的数据":["42.10"],"0在http":["42.11"],"0的基础上":["42.11"],"做了以下几点优化":["42.11"],"会被转换为一个个带有请求":["42.12"],"id":["42.12"],"编号的帧":["42.12"],"通过协议栈将这些帧发送给服务器":["42.12"],"所以这些帧是可以":["42.12"],"交错传输":["42.12"],"服务器接收到所有帧之后":["42.12"],"会将所有相同":["42.12"],"的帧合并为一条完整的请求信息":["42.12"],"然后服务器处理该条请求":["42.12"],"实现了类似":["42.13"],"的流量控制":["42.13"],"传输可靠性的功能":["42.13"],"不提供可靠性的传输":["42.13"],"但":["42.13"],"的基础之上增加了一层来保证数据可靠性传输":["42.13"],"它提供了数据包重传":["42.13"],"拥塞控制以及其他一些":["42.13"],"中存在的特性":["42.13"],"集成了":["42.13"],"tls":["42.13"],"加密功能":["42.13"],"目前":["42.13"],"使用的是":["42.13"],"tls1":["42.13"],"相较于早期版本":["42.13"],"第一步":["43.0"],"浏览器发起hello":["43.0"],"浏览器向服务器发送以下内容":["43.0"],"对称加密套件列表":["43.0"],"客户端支持的ssl":["43.0"],"tls协议版本列表":["43.0"],"非对称加密套件":["43.0"],"算法":["43.0"],"列表":["43.0"],"随机数":["43.0"],"client":["43.0"],"服务器回应hello":["43.0"],"保存":["43.0"],"浏览器随机数":["43.0"],"并向浏览器发送":["43.0"],"对称加密套件":["43.0"],"tls版本":["43.0"],"选择双方都支持的最安全的":["43.0"],"非对称加密算法":["43.0"],"含有服务端的":["43.0"],"公钥":["43.0"],"服务器根据客户端的请求切换协议":["44.0"],"2xx":["44.0"],"成功":["44.0"],"ok":["44.0"],"请求已成功被服务器接收":["44.0"],"理解":["44.0"],"并接受":["44.0"],"服务器成功处理了请求":["44.0"],"但没返回任何内容":["44.0"],"预检请求":["44.0"],"返回的响应代码":["44.0"],"服务器已经成功处理了":["44.0"],"请求":["44.0"],"类似于":["44.0"],"flashget":["44.0"],"或者迅雷这类的":["44.0"],"http下载工具都是使用此类响应实现":["44.0"],"重构堆性质":["46.0","163.0"],"param":["46.0","163.0"],"求左右节点中较大的序号":["46.0","163.0"],"maxdepth":["49.0"],"floor":["50.0","68.0","179.0","180.0"],"leftdep":["51.0"],"rightdep":["51.0"],"math":["51.0","68.0","93.0","95.0","135.0","153.0","161.0","179.0","180.0"],"abs":["51.0"],"integer":["52.0"],"左右子树已经被拉平成一条链表":["54.0"],"将左子树作为右子树":["54.0"],"node1":["55.0"],"node2":["55.0"],"preordertraversal":["56.0"],"preorder":["56.0","57.0"],"postordertraversal":["57.0"],"分解思想":["58.0"],"将以":["58.0"],"为根的这棵二叉树翻转":["58.0"],"返回翻转后的二叉树的根节点":["58.0"],"这里不能直接return":["58.0"],"需return":["58.0"],"用右子树最小的节点替换":["59.0"],"节点":["59.0"],"inordertraversal":["62.0"],"inorder":["62.0"],"若":["63.0"],"不符合":["63.0"],"的限制":["63.0"],"说明不是合法":["63.0"],"bst":["63.0"],"即将开始遍历右子树的时候执行":["64.0"],"二叉树题目的递归解法可以分两类思路":["64.0"],"第一类是":["64.0"],"一遍二叉树得出答案":["64.0"],"回溯算法":["64.0"],"第二类是通过":["64.0"],"分解":["64.0"],"问题计算出答案":["64.0"],"动态规划":["64.0","79.2"],"框架":["64.0"],"traverse":["64.0","110.0"],"treenode":["64.0"],"在此操作":["64.0"],"获取子数组并排序":["65.0"],"若该下标对应的数为素数":["66.0"],"则将其倍数的下标对应的值全部变为":["66.0"],"j":["66.0","69.0","83.0"],"sum":["68.0","136.0","137.0"],"结果前缀可能存的":["68.0"],"未使用的位":["68.0"],"shift":["70.0"],"base":["71.0","97.0"],"最坏的情况":["72.0"],"例dp":["72.0"],"解法二":["73.0"],"数组的迭代解法":["73.0"],"当目标金额为":["73.0"],"时":["73.0"],"枚硬币凑出":["73.0"],"状态转移方程":["73.0"],"coin":["73.0"],"一步就能跳过去":["74.0"],"如果一步跳不过去":["74.0"],"就从能跳到的最大位置依次尝试":["74.0"],"滚动数组":["75.0"],"只和dp":["75.0"],"初始化列":["76.0","77.0","98.0","99.0"],"i":["78.0","91.0","93.0","101.0","104.0","108.0","110.0","144.0","153.0","178.0"],"虽然动态规划的核心思想就是穷举求最值":["79.0"],"但是问题可以千变万化":["79.0"],"穷举所有可行解其实并不是一件容易的事":["79.0"],"只有列出":["79.0"],"动态规划和递归的区别":["79.1"],"递归和回溯可能存在非常多的重复计算":["79.1"],"dp":["79.3"],"0才能进行交易":["80.1"],"不持有股票":["80.3"],"最大利润就是这俩种情况的最大值":["80.5"],"leetcode例题":["80.5"],"买卖股票的最佳时机":["80.5"],"easy":["80.5"],"限定交易次数":["80.5"],"要把当前在最长公共子序列中的字符剔除":["81.0"],"所以是dp":["81.0"],"和dp":["84.0"],"一定在序列中":["84.0"],"sort":["85.0","132.0","158.0"],"pop":["85.0","114.0","132.0","158.0","166.0","167.0"],"前缀和解法":["85.0","132.0","158.0"],"presum":["85.0","132.0","158.0"],"表示i位置结尾的前缀和":["85.0","132.0","158.0"],"min":["85.0","132.0","135.0","158.0"],"maxsubarray3":["85.0","132.0","158.0"],"相邻":["86.0"],"那么就要定义":["87.0"],"dp数组":["87.0"],"找":["87.0"],"最长递增子序列":["87.1"],"最大子数组":["87.1"],"都可以用这个套路":["87.1"],"arr2":["87.2"],"我们要求的子序列长度为":["87.2"],"初始化dp":["88.0"],"array":["88.0"],"fill":["88.0","150.0"],"rob":["89.0"],"抢":["90.0"],"然后去下下家":["90.0"],"do":["90.0"],"it":["90.0"],"nextend":["91.0"],"while":["91.0","129.0","134.0","135.0","136.0","137.0","142.0","146.0","147.0","169.0","172.0","174.0","181.0"],"在第":["91.0"],"个视频的区间内贪心选择下一个视频":["91.0"],"比较所有起点小于":["91.0"],"至少有一个不相交":["92.0"],"就是本身":["92.0"],"排序后":["92.0"],"第一个区间就是":["92.0"],"point":["94.0"],"不断计算能跳到的最远距离":["95.0"],"给你很多形如":["96.0"],"start":["96.0"],"最上面":["102.0"],"最左边":["102.0"],"数量大于":["103.0","115.0"],"肯定是不合法的":["103.0","115.0"],"当所有左右括号都等于n时":["103.0","115.0"],"得到一个合法的括号组合":["103.0","115.0"],"回溯算法标准框架":["104.0","107.0"],"length":["104.0","108.0","109.0","110.2","148.0","154.0"],"做选择":["104.0","105.0","108.0","110.2","110.3","110.8"],"排除已经选择过了的":["105.0"],"continue":["105.0","106.0","110.3"],"固定相同的元素在排列中的相对位置":["106.0"],"如果前面的相邻相等元素没有用过":["106.0"],"则跳过":["106.0"],"剪枝逻辑":["109.0"],"值相同的相邻树枝":["109.0"],"只遍历第一条":["109.0"],"每当走到树的底层叶子节点":["110.0"],"其":["110.0"],"就是一个全排列":["110.0"],"再进一步":["110.0"],"如何遍历一棵树":["110.0"],"各种搜索问题其实都是树的遍历问题":["110.0"],"而多叉树的遍历框架就是这样":["110.0"],"addlast":["110.2"],"其关键在于":["110.4"],"只要":["110.7"],"track":["110.8"],"标记节点":["112.0"],"在路径上":["112.0"],"多了一个":["113.0"],"tmp":["114.0","135.0","138.0"],"都有":["117.0"],"子串":["117.0"],"基数排序":["119.0"],"寻找最小的数":["119.3"],"将最小数的索引保存":["119.3"],"交换":["119.3"],"temp":["119.3"],"fast":["121.0","147.0"],"快指针和一个":["121.0"],"slow":["121.0"],"慢指针配合完成任务":["121.0"],"口诀":["125.0"],"第一个":["125.0"],"最基本的二分查找算法":["125.0"],"因为我们初始化":["125.0"],"所以决定了我们的":["125.0"],"搜索区间":["125.0"],"所以决定了":["125.0"],"同时也决定了":["125.0"],"因为我们只需找到一个":["125.0"],"的索引即可":["125.0"],"所以当":["125.0"],"reverse":["126.0","177.0"],"反转一维数组":["126.0"],"x轴固定为left":["127.0"],"四条边同时往内收缩":["127.0"],"因为是按顺时针推入结果数组的":["127.0"],"所以剩下的一行":["127.0"],"如果是逆时针旋转90度":["128.0"],"则":["128.0"],"lc":["128.1"],"二分查找":["129.0"],"f":["129.0"],"low":["129.0"],"high":["129.0"],"sumrange":["130.0","133.0"],"col2":["131.0"],"sumregion":["131.0"],"left":["133.0"],"right":["133.0","181.0"],"如果栈中有元素":["134.0"],"且栈顶元素比当前字符小":["134.0"],"并且栈顶字符在后续字符串还会出现":["134.0"],"用当前字符替换栈顶字符得到字典序更小的字符串":["134.0"],"此处将一直与栈顶元素相比":["134.0"],"直到栈为空或栈顶字符比当前字符小":["134.0"],"或栈顶字符在当前位置之后不会再出现":["134.0"],"len":["138.0"],"一快一慢":["139.0"],"初始状态":["140.0"],"极端假设":["140.0"],"去掉右边全部或者去掉左边全部":["140.0"],"c":["142.0"],"s长度为奇数":["143.0"],"以s":["143.0"],"为中心":["143.0"],"s2":["143.0"],"s长度为偶数":["143.0"],"反转数组":["145.0"],"题目还可能让你对数组中的某些元素进行":["149.0"],"trips":["150.0"],"capacity":["150.0"],"carpooling":["150.0"],"最多有":["150.0"],"个车站":["150.0"],"df":["150.0"],"corpflightbookings":["151.0"],"根据初始数组构造差分数组":["152.0"],"给闭区间":["152.0"],"增加":["152.0"],"可以是负数":["152.0"],"increment":["152.0"],"filter":["153.0"],"判断左侧窗口是否要收缩":["153.0","155.0","156.0","157.0","159.0","162.0"],"固定窗口大小":["154.0"],"不断向后移动":["154.0"],"debug":["155.0","159.0","160.0"],"输出的位置":["155.0","159.0","160.0"],"n":["155.0","156.0","157.0","159.0"],"如果窗口中有重复发字符了":["156.0"],"就收缩窗口":["156.0"],"当窗口的大小":["157.0"],"大于等于s1的长度时":["157.0"],"更新结果":["157.0"],"s1的长度时":["159.0"],"进行窗口内数据的一系列更新":["160.0"],"如果当前字符在need字符中":["160.0"],"更新window中字符数":["160.0"],"如果当前窗口和需要的字符数量一致时":["160.0"],"字符种类":["160.0"],"当采摘的水果种类大于2种时":["161.0"],"便收缩窗口":["161.0"],"是将移出窗口的字符":["161.0","162.0"],"其中两处":["162.0"],"表示的更新窗口数据的地方":["162.0"],"到时候你直接往里面填就行了":["162.0"],"而且":["162.0"],"这两个":["162.0"],"处的操作分别是扩大和缩小窗口的更新操作":["162.0"],"等会你会发现它们操作是完全对称的":["162.0"],"滑动窗口时间复杂度是":["162.0"],"堆的其他地方都满足性质":["163.0"],"唯独跟节点":["163.0"],"方法先把要插入的元素添加到堆底的最后":["164.0"],"然后让其":["164.0"],"在队尾":["165.0"],"void":["165.0"],"元素的索引入队":["166.0"],"队头元素已经在滑动窗口外了":["166.0"],"在map中记录array末尾元素交换位置后的信息":["167.0"],"在map中删除目标元素":["167.0"],"在数组中删除元素":["167.0"],"使得每次新元素入栈后":["168.0"],"不使用额外空间的版本":["170.0"],"middlenode":["174.0"],"快指针":["175.0"],"就前进两步":["175.0"],"lc141":["175.0"],"判断单链表是否包含环并找出环起点":["175.0"],"慢指针走1步":["175.0"],"反转前k个节点":["177.0"],"newhead":["177.0"],"此时的新头部是newhead":["177.0"],"a为前k个节点的尾部":["177.0"],"b为第k":["177.0"],"1个节点":["177.0"],"找到反转开始节点":["178.0"],"pre2":["178.0"],"然后交换copy":["179.0"],"和copy":["179.0"],"随机生成arr的下标":["180.0"],"rand":["180.0"],"mid":["181.0"],"搜索区间变为":["181.0"]},{"0":["6.3","40.5","66.0","111.0","167.0"],"1":["8.8","8.9","8.11","8.12","22.12","23.4","41.0","42.6","50.0","51.0","87.2","106.0","108.0","110.2","120.1","126.0"],"2":["1.7","7.25","8.1","8.3","8.9","22.12","22.17","22.18","23.4","24.1","26.2","36.3","40.7","84.0","129.0","150.0"],"3":["5.2","7.15","7.25","22.12","22.15","22.17","23.4","35.0","35.4","36.3","36.17","38.10","54.0"],"4":["0.12","21.8","23.4","30.1","35.0","36.11","42.13","43.0","65.0","145.0"],"5":["1.5","26.0","37.4","42.12","118.0","119.2","119.3","119.4","119.5","120.2"],"6":["1.5","7.20","37.4","38.13","42.12"],"7":["2.8","22.4","30.14","38.9"],"8":["7.0","22.4","38.9","41.8"],"9":["118.0","119.1","119.2","119.3","119.5","120.2"],"10":["35.3","118.0","119.1","119.2","119.5","120.2"],"11":["7.7"],"12":["34.0"],"18":["4.14","34.0","36.15"],"19":["118.0","119.1","119.2","119.3","119.4","119.5","120.2"],"20":["8.10","35.3"],"22":["2.8","7.16","36.15"],"23":["3.3"],"24":["1.8","118.0","119.1","119.2","119.3","119.4","119.5","120.2"],"31":["118.0","119.1","119.2","119.5"],"35":["31.0"],"44":["118.0","119.1","119.2","119.3","119.4","119.5"],"48":["119.1","119.2","119.3","119.4","119.5"],"52":["36.15"],"54":["128.1"],"60":["3.3"],"65":["1.1"],"66":["119.1","119.2","119.3","119.4","119.5"],"70":["38.7"],"80":["19.2","40.2"],"100":["30.14"],"122":["80.5"],"123":["80.5"],"188":["80.5"],"204":["36.5"],"300":["11.0"],"304":["44.0"],"502":["44.0"],"2000":["25.0"],"2013":["34.0"],"2017":["7.7"],"2019":["35.3"],"2020":["36.15"],"3000":["33.1","33.4"],"6999":["36.9"],"229532":["1.0"],"230845":["2.0"],"512000":["42.9"],"12236848":["0.12"],"字面量":["0.0"],"a":["0.0","7.9","7.16","7.22","30.4","65.0","82.0","164.0"],"相当于这样":["0.0"],"第一次打印的时候":["0.1"],"函数只是被放入作用域":["0.1"],"函数没有执行":["0.1"],"变量":["0.2"],"就已经被":["0.2"],"提升":["0.2"],"了":["0.2","1.5","152.0"],"所以当":["0.2"],"循环结束之后":["0.2"],"静态":["0.3"],"作用域":["0.3"],"即函数的作用域在函数":["0.3"],"tdz":["0.4"],"es6":["0.4"],"明确规定":["0.4"],"如果区块中存在let和const命令":["0.4"],"这个区块对这些命令声明的变量":["0.4"],"从一开始就形成了封闭作用域":["0.4"],"凡是在声明之前就使用这些变量":["0.4"],"就会报错":["0.4"],"简单理解":["0.4"],"在let或者const声明之前使用该变量":["0.4"],"作用域链":["0.4"],"其实在每个执行上下文的变量环境中":["0.4"],"都包含了一个外部引用":["0.4"],"用来":["0.4"],"指向外部的执行上下文":["0.4"],"我们把这个外部引用称为":["0.4"],"先不进行介绍":["0.5"],"img":["0.5","10.0","20.18","29.3","30.2"],"src":["0.5","10.0","20.18","22.8","29.3","30.5","40.3"],"picture":["0.5","10.0","29.3","30.5","39.6","40.3"],"pic9":["0.5","39.6","40.0"],"变成了2":["0.6"],"因为obj是引用数据类型":["0.6"],"该语句将obj的":["0.6"],"创建":["0.7"],"虽然不会爆栈":["0.7"],"但也无法去执行下一个任务":["0.7"],"主线程被卡死":["0.7"],"微任务和事件循环":["0.7"],"用栈来管理函数的":["0.7"],"优势":["0.7"],"如下":["0.7"],"栈的结构和非常适合函数调用过程":["0.7"],"根据词法作用域的规则":["0.8"],"内部函数总是可以访问其外部函数中声明的变量":["0.8"],"当通过调用一个外部函数返回一个内部函数后":["0.8"],"即使该外部函数已经执行结束了":["0.8"],"但是内部函数引用外部函数的变量依然保存在内存中":["0.8"],"我们就把这些变量的集合称为闭包":["0.8"],"比如外部函数是":["0.8"],"foo":["0.8"],"执行":["0.10"],"的流程图如下":["0.10"],"pic8":["0.10","2.3"],"pic1":["0.10","10.0","29.3"],"eval":["0.10"],"是全局对象的一个函数属性":["0.10"],"会将传入的字符串当做":["0.10"],"代码进行执行":["0.10"],"核心流程分为两步":["0.10"],"编译阶段":["0.10"],"将js代码转换为低级":["0.10"],"中间代码":["0.10"],"或者机器能够理解的":["0.10"],"机器代码":["0.10"],"或二进制代码":["0.11"],"字节码是介于":["0.11"],"和机器代码的中间代码":["0.11"],"解释器":["0.11"],"事件循环系统主要用来处理任务的排队和任务的调度":["0.12"],"后续会详细介绍":["0.12"],"事件循环机制":["0.12"],"v8中的对象表示":["0.12"],"参考文章":["0.12"],"https":["0.12","10.7","35.4"],"www":["0.12"],"cnblogs":["0.12"],"com":["0.12","15.0","20.0"],"chargeworld":["0.12"],"p":["0.12","9.0","38.4","54.0"],"html":["0.12","20.0"],"属性分为":["0.12"],"命名属性":["0.12"],"可索引属性":["0.12"],"命名属性存放在":["0.12"],"properties":["0.12"],"可索引属性存放在":["0.12"],"elements":["0.12"],"它们的区别主要体现在键名能否被索引":["0.12"],"命名属性有三种不同的存储方式":["0.12"],"对象内属性":["0.12"],"快属性和慢属性":["0.12"],"前两者通过":["0.12"],"线性":["0.12"],"查找进行访问":["0.12"],"慢属性通过":["0.12"],"哈希存储":["0.12"],"的方式进行访问":["0.12"],"总是以相同的顺序初始化对象成员":["0.12"],"能充分利用相同的隐藏类":["0.12"],"用来描述命名属性是怎么存放的":["0.12"],"进而提高性能":["0.12"],"增加或删除可索引属性":["0.12"],"不会引起隐藏类的变化":["0.12"],"稀疏的可索引属性会退化为哈希存储":["0.12"],"普通的ui线程架构":["1.0"],"每个":["1.0","38.2"],"ui":["1.0","37.3"],"线程都拥有一个消息队列":["1.0"],"所有的待执行的事件都会被添加进消息队列中":["1.0"],"pic6":["1.1","20.13"],"width":["1.1","38.7"],"使用settimeout可以将foo函数转化为":["1.1"],"并且":["1.2"],"await下一句语句会被当成微任务":["1.2"],"添加到当前任务队列的末尾异步执行":["1.2"],"ps":["1.2","36.4","41.6"],"new":["1.2","3.1","20.17","33.7"],"这个位置的代码是":["1.2"],"同步执行":["1.2","23.4"],"的":["1.2","16.0","37.3","173.0"],"是":["1.2"],"会放入微任务队列":["1.2"],"当所有当":["1.3"],"同步任务":["1.3"],"执行完毕之后就会执行":["1.3"],"这样循环往复":["1.4"],"紧接着就要执行":["1.5"],"全局环境":["1.5"],"中的代码":["1.5"],"接着又执行":["1.5"],"eventloop5":["1.5"],"当全局执行上下文环境中的代码执行完毕后":["1.5"],"会检查":["1.5"],"如果微任务队列中存在微任务":["1.5"],"它会造成我们的代码可读性非常差":["1.6"],"后期不好维护":["1.6"],"如下代码":["1.6"],"变形成了回调地狱":["1.6"],"doasync1":["1.6"],"result1":["1.6"],"doasync2":["1.6"],"promise实例生成以后":["1.7"],"可以用then方法分别指定resolved状态和rejected状态的回调函数":["1.7"],"相加等于":["1.8"],"实际开发一般会配合":["1.8"],"co":["1.8"],"库去使用":["1.8"],"co是一个为node":["1.8"],"js和浏览器打造的基于生成器的流程控制工具":["1.8"],"借助于promise":["1.8"],"你可以使用更加优雅的方式编写非阻塞代码":["1.8"],"我们可以通过":["1.8"],"函数解决回调地狱的问题":["1.8"],"fetch":["1.8"],"ajax":["1.8","36.4"],"url":["1.8","33.7"],"catch":["1.9","33.7"],"err":["1.9","33.7"],"等同于":["1.9"],"try":["1.9"],"val":["1.9","9.2"],"而不是在下一轮":["1.10"],"的开始时":["1.10"],"例题4":["1.10"],"async1":["1.10","9.2"],"start":["1.10"],"async2":["1.10"],"async2是同步":["1.10"],"之后的任务也是微任务":["1.10"],"end":["1.10","124.0"],"settimeout0":["1.10"],"settimeout3":["1.10"],"setimmediate":["1.10"],"javascript":["2.0","7.4","10.7","33.8","34.1","36.0"],"是一门自动垃圾回收的语言":["2.0"],"也就是说":["2.0","2.8","34.3"],"我们不需要去手动回收垃圾数据":["2.0"],"这一切都交给":["2.0"],"第三步":["2.1","43.0"],"做内存整理":["2.1"],"由于受":["2.1"],"代际假说":["2.1"],"的影响":["2.1"],"采用了以下两个垃圾回收器":["2.1"],"副垃圾回收器":["2.1"],"minor":["2.1"],"scavenger":["2.1"],"主要负责新生代的垃圾回收":["2.1"],"主垃圾回收器":["2.1"],"major":["2.1"],"主要负责老生代的垃圾回收":["2.1"],"在":["2.1","7.4","22.11"],"会把堆分为新生代和老生代两个区域":["2.1"],"优点":["2.2","8.2","8.9"],"有效解决了内存碎片的问题":["2.2"],"时间性能非优秀":["2.2"],"因为每次执行回收时都有从对象区":["2.2"],"复制":["2.2"],"到空闲区的操作":["2.2"],"脚本":["2.3","36.0"],"暂停":["2.3"],"下来":["2.3"],"待垃圾回收完毕后再恢复脚本执行":["2.3"],"我们把这种行为叫做":["2.3"],"全停顿":["2.3"],"全停顿的执行效果如下图所示":["2.3"],"为了解决全停顿而造成的用户体验的问题":["2.3"],"v8":["2.3"],"新生代":["2.4"],"中的垃圾清理操作":["2.4"],"这些线程同时将对象空间中的数据移动到空闲区域":["2.4"],"由于数据的地址发生了改变":["2.4"],"所以还需要同步更新引用这些对象的指针":["2.4"],"引用到":["2.5"],"但子节点还没被垃圾回收器标记处理":["2.5"],"也表明":["2.5"],"目前正在处理这个节点":["2.5"],"白色表示这个节点没有被访问到":["2.5"],"如果在本轮遍历结束时还是白色":["2.5"],"那么这块数据就会被收回":["2.5"],"引入灰色标记之后":["2.5"],"垃圾回收器就可以依据当前内存中":["2.5"],"第一":["2.6"],"当主线程执行":["2.6"],"时":["2.6"],"堆中的内容随时都有可能发生变化":["2.6"],"不再用到的内存":["2.7"],"没有及时释放":["2.7"],"就叫做":["2.7"],"内存泄漏":["2.7"],"如果应用使用的内存越来越多":["2.7"],"就会严重影响性能":["2.7"],"value":["2.8","7.10","25.0","34.3"],"test":["2.8"],"add":["2.8","10.8"],"delete":["2.8","161.0"],"使用":["2.8"],"weakset":["2.8"],"的成员是弱引用":["2.8"],"即垃圾回收机制不考虑":["2.8"],"对该对象的引用":["2.8"],"如果其他对象都不再引用该对象":["2.8"],"那么垃圾回收机制会自动回收该对象所占用的内存":["2.8"],"不考虑该对象还存在于":["2.8"],"之中":["2.8"],"map引用类型键名":["2.8"],"用来具体分析各类型对象存活情况":["2.9"],"包括实例数量":["2.9"],"引用路径等等":["2.9"],"内存分配情况":["2.9"],"record":["2.9"],"allocation":["2.9"],"profile":["2.9"],"console":["3.1","65.0","68.0","85.0","119.1","119.2","119.5","132.0","138.0","153.0","158.0"],"log":["3.1","7.22","65.0","67.0","68.0","85.0","119.1","119.5","132.0","138.0","153.0","158.0"],"cheese":["3.1"],"info":["3.2"],"var":["3.3","46.0"],"alice":["3.3"],"person2":["3.3"],"wanwan":["3.3"],"false":["3.3","7.21","7.22","51.0","63.0","114.0","120.2","134.0"],"假如构造函数有":["3.3"],"返回值":["3.3","22.6"],"该返回值是":["3.3"],"对象":["3.3","3.4","5.6","9.2","24.6"],"则实例只能访问返回的对象中的属性":["3.3"],"基本类型的值":["3.3"],"相当于没有返回值进行处理":["3.3"],"otaku":["3.3","3.5"],"strength":["3.3","3.5"],"habit":["3.3"],"games":["3.3"],"kevin":["3.3"],"新创建的对象添加属性":["3.4"],"将该属性链接至构造函数的原型":["3.4"],"将步骤":["3.4"],"新创建的对象作为":["3.4"],"test2":["3.5"],"返回基础数据":["3.5"],"name":["3.5"],"age":["3.5"],"es6改动很大":["4.0"],"可以简单分为四类":["4.0"],"对原有语法进行增强":["4.0"],"主用const":["4.1"],"配合let":["4.1"],"获取对象key":["4.12"],"全新的数据结构和数据类型":["4.13"],"且遍历不到":["4.17"],"执行上下文":["5.0"],"闭包":["5.0"],"绝大部分浏览器都支持这个非标准的方法访问原型":["5.1"],"然而它并不存在于":["5.1"],"中":["5.1","81.0","87.1"],"实际上":["5.1"],"它是来自于":["5.1"],"真的是继承吗":["5.1"],"issues":["5.2"],"f":["5.4","30.8"],"return":["5.4","5.8","10.3","10.5","21.3","22.13","119.3","133.0"],"原因":["5.5","7.1","7.3"],"js内部机制会把函数声明提到最前面":["5.5"],"效果如下":["5.5"],"函数上下文的变量对象初始化只包括":["5.6"],"arguments":["5.6"],"在进入执行上下文时会给变量对象添加形参":["5.6"],"在foo作用域内没找到":["5.7"],"便会顺着作用域链向上找":["5.7"],"上一级的作用域是":["5.7"],"全局作用域":["5.7"],"bar":["5.8"],"function":["5.8","7.9","33.7"],"this":["5.8"],"而与声明环境没有关系":["5.9"],"arrow":["5.10"],"true":["5.10","7.18","7.22","8.2","8.15","11.0","33.1","105.0","106.0","110.6","159.0"],"es5":["5.10"],"babel":["5.10"],"转译":["5.10"],"没太看懂":["5.11"],"引用的变量都是同一个":["5.12"],"每执行一次循环":["5.12"],"i就变化一次":["5.12"],"最后是3":["5.12"],"所以打印出来全是3":["5.12"],"let":["5.12","75.0","126.0","167.0"],"如果改成let":["5.12"],"结果是什么":["5.12"],"basewhile":["6.1"],"因为promise的定义":["6.2"],"tostring":["6.3"],"call":["6.3"],"split":["6.3"],"slice":["6.3","65.0","68.0","89.0"],"join":["6.3","103.0","115.0"],"其中前7中为":["7.0"],"基本":["7.0"],"原始":["7.0"],"object为":["7.0"],"引用类型":["7.0","8.3","8.8"],"包括":["7.0"],"类型":["7.0"],"array":["7.0"],"在系统存储变量的方式中":["7.1"],"000":["7.1"],"开头代表是对象":["7.1"],"然而":["7.1"],"表示为全零":["7.1"],"nan":["7.1"],"从":["7.2"],"react源码":["7.2"],"中获取判断变量类型的灵感":["7.2"],"const":["7.2","23.6","178.0"],"gettype":["7.2"],"array的原型是object":["7.3"],"类型转换":["7.4"],"有两种类型转换的方式":["7.4"],"分别是":["7.4"],"隐式类型转换":["7.4"],"默认值是":["7.5"],"他只是一个转换标志":["7.5"],"转化后的结果并不一定是这个参数所值的类型":["7.5"],"结论":["7.6"],"wed":["7.7"],"oct":["7.7"],"08":["7.7"],"00":["7.7","34.0"],"gmt":["7.7","34.0","36.15"],"0800":["7.7"],"中国标准时间":["7.7"],"func":["7.7"],"除这些对象及其实例化对象之外":["7.7"],"其他对象返回的都是该对象的类型":["7.7"],"函数":["7.9"],"转为字符串是":["7.9"],"一般对象":["7.9"],"数组首先会被转换成":["7.10"],"原始类型":["7.10"],"即primitive":["7.10"],"参考":["7.10"],"toprimitive":["7.10"],"得到原始类型后再根据上面的转换规则转换":["7.10"],"其余全部为true":["7.11"],"则直接报错":["7.12"],"抛出异常":["7.12"],"date对象会先调用":["7.12"],"加":["7.13"],"减":["7.13"],"乘":["7.13"],"除":["7.13"],"规则4":["7.16"],"b":["7.16","65.0","82.0"],"anan":["7.16"],"而这里面又分为三种情况":["7.17"],"其他的情况都是":["7.18"],"通过":["7.20"],"类型相同时":["7.20"],"没有类型转换":["7.20"],"内存地址不同":["7.20"],"2此时":["7.21"],"也就是2":["7.21"],"同上可以推导":["7.21"],"3也返回true":["7.21"],"故最终结果":["7.21"],"3返回true":["7.21"],"例题四":["7.21"],"undefined":["7.21","8.7","10.4"],"parseint":["7.23"],"parsefloat":["7.23"],"arr":["7.25","120.2","126.0"],"obj2":["7.26"],"tojson":["7.26"],"章节":["7.27"],"boolean":["7.28"],"或者":["7.28","15.4","24.0","36.2","38.8"],"png":["7.29","10.0","20.13","33.6","40.3"],"寄生组合式继承":["8.0"],"最为推荐":["8.0"],"es6类继承extends":["8.0"],"混入方式继承多个对象":["8.0"],"对象无法识别":["8.1"],"因为所有的实例都指向一个原型":["8.1"],"每次通过person创建对象的时候":["8.1"],"实例可以识别为一个特定的类型":["8.2"],"可以动态的添加原型对象的方法和属性":["8.3"],"并直接反映在对象实例上":["8.3"],"缺点":["8.3","8.8","8.11","8.12","15.3","40.7"],"属性会被":["8.3"],"实例":["8.3","9.0"],"共享":["8.3","8.8","37.1"],"hanmeimei":["8.6"],"子类实例会":["8.8"],"父类":["8.8"],"引用对象":["8.8"],"这样如果不小心修改了原型对象中的":["8.8"],"避免了引用类型的属性被所有实例共享":["8.9"],"可以在":["8.9","33.8"],"中向":["8.9"],"传参":["8.9"],"child2":["8.10"],"daisy":["8.10"],"原型链继承多个实例的引用类型属性指向":["8.11"],"相同":["8.11"],"存在篡改的可能":["8.11"],"同原型式继承":["8.12"],"原型链继承多个实例的引用类型属性指向相同":["8.12"],"的作用":["8.14"],"class可以通过extends关键字实现继承父类的所有":["8.14"],"属性和方法":["8.14"],"若是使用了extends实现继承的子类内部没有constructor方法":["8.14"],"则会被默认添加constructor和super":["8.14"],"子类必须在constructor方法中调用super方法":["8.14"],"否则新建实例时会报错":["8.14"],"是个函数":["8.14"],"而且它是父类的构造器":["8.14"],"proto":["8.15"],"p的状态才会变成fulfilled":["9.0"],"race":["9.0"],"p3之中有一个实例率先改变状态":["9.0"],"p的状态就跟着改变":["9.0"],"allsettled":["9.0"],"any":["9.0"],"obj":["9.0","130.0"],"直接返回一个fulfilled状态的":["9.0"],"返回一个新的":["9.0"],"该实例的状态为rejected":["9.0"],"例题":["9.0"],"参数是一个promise对象":["9.0"],"如果在一秒钟之内":["9.0"],"promise没有返回结果的话就自动reject":["9.0"],"如果有就返回promise返回的结果":["9.0"],"同步执行的":["9.1","22.0"],"then":["9.1","33.7"],"后面紧跟着的代码是一个耗时的操作或者是一个异步操作":["9.2"],"后面必须是一个":["9.2"],"promise对象":["9.2"],"如果不是会被转化为一个已完成状态的promise":["9.2"],"resolved":["9.2"],"凡是加上":["9.2"],"的函数都默认返回一个":["9.2"],"可以使用then方法添加回调函数":["9.2"],"当函数执行的时候":["9.2"],"一旦遇到await就会先返回":["9.2"],"等到异步操作完成":["9.2"],"再接着执行函数体内后面的语句":["9.2"],"await并发请求":["9.2"],"如果请求两个文件":["9.2"],"毫无关系":["9.2"],"可以通过并发请求":["9.2"],"fs":["9.2"],"require":["9.2"],"read":["9.2"],"file":["9.2"],"因为它们指向的是同一个对象":["10.0"],"copy":["10.0"],"深浅拷贝问题":["10.0"],"主要针对的是":["10.0"],"基础类型的值本身即是复制一模一样的一份":["10.0"],"不区分深浅拷贝":["10.0"],"从已有的数组中返回选定的元素":["10.1"],"展开运算符":["10.1"],"正则":["10.4"],"对应的value设置成":["10.7"],"拷贝后的内存地址":["10.7"],"for":["10.7","92.0","148.0"],"key":["10.7"],"in":["10.7"],"developer":["10.7","42.0"],"mozilla":["10.7","42.0"],"org":["10.7","42.0"],"zh":["10.7","42.0"],"cn":["10.7","36.9","42.0"],"docs":["10.7","42.0"],"web":["10.7","36.14","42.0"],"reference":["10.7"],"statements":["10.7"],"hasownproperty是拿到自己本身有的key":["10.7"],"不会拿到原型链上继承来的key":["10.7"],"push":["10.8","56.0","57.0","62.0","103.0","115.0","136.0","157.0"],"如果定时器存在":["11.0"],"直到定时器执行":["11.0"],"然后执行函数":["11.0"],"清空定时器":["11.0"],"这样就可以设置下个定时器":["11.0"],"fn":["11.0"],"canrun":["11.0"],"instanceof":["11.0"],"等":["12.0"],"进行开发":["12.0"],"有前端组件化和模块化思想":["12.0"],"node":["12.0","33.8"],"及相关框架":["12.0"],"nestijs":["12.0"],"koa":["12.0"],"进行服务搭建":["12.0"],"能使用":["12.0"],"参与项目整体的设计规划":["12.1"],"方向讨论":["12.1"],"负责整体的服务端技术设计":["12.1"],"项目搭建和维护":["12.1"],"参与平台需求迭代":["12.2"],"完成前后端的开发工作":["12.2"],"完成部分需求的产品方案":["12.2"],"技术方案产出":["12.2"],"汇总":["12.3"],"新版方案设计":["12.3"],"并完成重构的前端方案和开发工作":["12.3"],"参与平台的日常值班":["12.3"],"bug修复等工作":["12.3"],"members":["14.0"],"github":["15.0"],"yacan8":["15.0"],"blog":["15.0"],"都需要重新请求一次页面":["15.1"],"重新查一次数据库":["15.1"],"重新组装一次html":["15.1"],"前端javascript代码和后端":["15.1"],"jsp":["15.1"],"前端响应速度慢":["15.2"],"特别是首屏":["15.2"],"这样用户是受不了的":["15.2"],"不利于seo优化":["15.2"],"因为爬虫不认识spa":["15.2"],"所以它只是记录了一个页面":["15.2"],"可以更好地保护敏感数据":["15.3"],"不会暴露在客户端环境中":["15.3"],"不利于前后端分离":["15.3"],"开发的效率降低了":["15.3"],"对html的解析":["15.3"],"对前端来说加快了速度":["15.3"],"官方提供的渲染引擎":["15.4"],"reactdomserver":["15.4"],"rendertostring":["15.4"],"在这个例子中":["15.5"],"同时也可以缓存一些静态文件":["15.6"],"减少请求次数":["15.6"],"提高性能":["15.6"],"总的来说":["15.6"],"seo":["15.7"],"优化":["15.7"],"如何在前端页面中给出用户是否开启了":["15.7"],"就是我们期望的":["16.0"],"值":["16.0","36.17"],"由于":["16.0","42.13"],"值的变化不会导致浏览器像服务器发送请求":["16.0"],"而且":["16.0"],"的改变会触发":["16.0"],"hashchange":["16.0"],"事件":["16.0"],"浏览器的前进后退也能对其进行控制":["16.0"],"所以在":["16.0"],"h5":["16.0"],"配合使用":["16.1"],"只是当它们执行修改时":["16.1"],"虽然改变了当前的":["16.1"],"但":["16.1"],"浏览器不会立即向后端发送请求":["16.1"],"的区别在于":["16.1"],"以便让":["16.2"],"监听到":["16.2"],"对象上的变化":["16.2"],"并自动更新组件状态":["16.2"],"总结一下":["16.2"],"模式的实现原理是通过监听":["16.2"],"事件和使用":["16.2"],"它们最大的不同点在于fetch是浏览器原生支持":["19.2"],"而axios需要引入axios库":["19.2"],"iamkasong":["20.0"],"preparation":["20.0"],"idea":["20.0"],"e7":["20.0"],"part1":["20.1","20.13","20.18"],"stack":["20.1"],"努力将同步的更新变为":["20.2"],"可中断的异步":["20.2","22.0"],"更新":["20.2","20.6"],"react15的缺点":["20.3"],"协调器和渲染器依次执行工作":["20.3"],"更新的过程是同步的":["20.3"],"当子组件更新一旦开始":["20.3"],"中途就无法中断":["20.3"],"相较于react15":["20.4"],"react16中新增了scheduler":["20.4"],"所以不稳定":["20.5"],"scheduler是独立于react的库":["20.5"],"的标记":["20.6"],"整个scheduler与reconciler的工作都在内存中进行":["20.6"],"只有当所有组件都完成reconciler的工作":["20.6"],"才会统一交给renderer":["20.6"],"reconciler内部采用了":["20.6"],"pic4":["20.8","31.0","40.3"],"pic5":["20.8"],"的工作不会被用户看见":["20.9"],"只有render":["20.9"],"渲染器":["20.9"],"会更新页面上的dom":["20.9"],"异步的可中断更新":["20.10"],"支持任务不同":["20.11"],"优先级":["20.11"],"可":["20.11"],"中断与恢复":["20.11"],"并且恢复后可以复用之前的":["20.11"],"中间状态":["20.11"],"需要更新的状态":["20.12"],"需要执行的工作":["20.12"],"需要被删除":["20.12"],"被插入页面中":["20.12"],"被更新":["20.12"],"在react16中":["20.12"],"pictures":["20.13","20.18","22.8"],"指dom节点tagname":["20.14"],"type":["20.14","42.2"],"fiber对应的真实dom节点":["20.14"],"noeffect":["20.15"],"nexteffect":["20.15"],"firsteffect":["20.15"],"opens":["20.17"],"getelementbyid":["20.18"],"root":["20.18"],"mount构建时":["20.18"],"首次执行reactdom":["20.18"],"render会创建fiberrootnode":["20.18"],"源码中叫fiberroot":["20.18"],"和rootfiber":["20.18"],"其中fiberrootnode是整个应用的根节点":["20.18"],"rootfiber是":["20.18"],"所在组件树的根节点":["20.18"],"work":["20.19"],"即react在工作中":["20.19"],"相对应的":["20.19"],"placementandupdate":["21.0","22.7"],"0b00000000000110":["21.0","22.7"],"dom需要删除":["21.0","22.7"],"diff算法的本质是对比":["21.1"],"和":["21.1","22.3","24.0","34.7","35.2","110.0"],"如果没有key":["21.2"],"react会认为div的第一个子节点由p变为h3":["21.2"],"第二个子节点由h3变p":["21.2"],"这符合限制2的设定":["21.2"],"会":["21.2"],"reconcilechildrenarray":["21.3"],"一些其他情况调用处理函数":["21.3"],"以上都没有命中":["21.3"],"删除节点":["21.3"],"deleteremainingchildren":["21.3"],"xiao":["21.4"],"bei":["21.4"],"未设置key":["21.4"],"prop默认":["21.4"],"null":["21.4","22.13","24.2","75.0"],"所以更新前后key相同":["21.4"],"都为null":["21.4"],"但是更新前type为div":["21.4"],"更新后为p":["21.4"],"type改变则":["21.4"],"不能复用":["21.4"],"算法的整体逻辑会经历":["21.6"],"两轮遍历":["21.6"],"第一轮遍历":["21.6"],"处理":["21.6","38.1","38.2"],"cc":["21.7"],"情况3":["21.7"],"newchildren遍历完":["21.7"],"oldfiber没遍历完":["21.7"],"oldfiber剩下":["21.7"],"总结":["21.7","29.6"],"第一次遍历结束后":["21.7"],"会有如下4种情况":["21.7"],"deletion":["21.8","22.14"],"删除":["21.8"],"所以a":["21.9"],"a节点需要":["21.9"],"bc":["21.9"],"重点要注意的是":["22.0"],"这一阶段是":["22.0"],"不能中止":["22.0"],"scheduler":["22.0"],"调度器":["22.0"],"调度任务的优先级":["22.0"],"高优任务优先进入reconciler":["22.0"],"会在浏览器空闲时触发回调的功能":["22.0"],"还会执行其他操作":["22.0"],"scheduler是一个独立于react的包":["22.0"],"reconciler":["22.0","22.1"],"协调器":["22.0","22.1"],"负责找出变化的组件":["22.0"],"在此引用了":["22.0"],"fiber架构":["22.0"],"目的是为了实现将":["22.0"],"同步":["22.0"],"的更新变为":["22.0"],"其工作的阶段被称为":["22.0"],"因为在该阶段会调用组件的render方法":["22.0"],"renderer":["22.0"],"并将workinprogress与已创建的fiber节点连接起来构成fiber树":["22.1"],"fiber":["22.1","23.6","24.3"],"通过遍历的方式实现可中断的递归":["22.1"],"所以":["22.1"],"时就会进入":["22.2"],"归":["22.2"],"阶段会交错执行直到":["22.3"],"lazycomponent":["22.5"],"functioncomponent":["22.5","24.3"],"classcomponent":["22.5","23.0"],"hostroot":["22.5","22.9","23.0"],"hostcomponent":["22.5"],"child":["22.6"],"作为本":["22.6"],"beginwork":["22.6"],"并作为下次":["22.6"],"省略":["22.9"],"updatehostcontainer":["22.9"],"内部":["22.10"],"被处理完的props会被赋值给":["22.10"],"updatequeue":["22.10"],"并最终会在":["22.10"],"commit阶段":["22.10"],"被渲染在页面上":["22.10"],"这样":["22.11"],"只需要遍历":["22.11"],"状态重置的工作":["22.12"],"在layout阶段之后":["22.12"],"useeffect相关处理":["22.12"],"性能追踪相关":["22.12"],"执行同步任务":["22.12"],"normalschedulerpriority":["22.13"],"触发useeffect":["22.13"],"flushpassiveeffects":["22.13"],"方法由":["22.13"],"其中effecttag包括":["22.14"],"placement":["22.14"],"update":["22.14"],"根据dom兄弟节点是否存在决定调用":["22.15"],"parentnode":["22.15"],"insertbefore":["22.15"],"他会根据fiber":["22.16"],"tag分别处理":["22.16"],"解绑ref":["22.17"],"调度":["22.17"],"指特殊处理后的functioncomponent":["22.18"],"比如forwardref":["22.18"],"react":["22.18"],"memo包裹的functioncomponent":["22.18"],"commitattachref":["22.18"],"赋值":["22.18"],"获取dom实例":["22.18"],"forceupdate":["23.0"],"usereducer":["23.0","24.6"],"一共三种组件":["23.0"],"可以触发更新":["23.0"],"由于不同类型组件工作方式不同":["23.0"],"所以存在":["23.0"],"payload为reactdom":["23.1"],"render的第一个传参":["23.1"],"callback":["23.1"],"更新的回调函数":["23.1"],"保存的updatequeue即":["23.2"],"pending中形成单向环状链表":["23.3"],"当由update计算state时这个环会被剪开并连接在lastbaseupdate后面":["23.3"],"effects":["23.3"],"数组":["23.3"],"整个更新流程结束":["23.4"],"调度更新":["23.4"],"深入理解优先级":["23.4"],"react根据":["23.4"],"人机交互研究的结果":["23.4"],"中用户对交互的预期顺序为交互产生的状态更新赋予不同优先级":["23.4"],"具体如下":["23.4"],"生命周期方法":["23.4"],"受控的用户输入":["23.4"],"比如输入框内输入文字":["23.4"],"交互事件":["23.4"],"比如动画":["23.4"],"高优先级执行":["23.4"],"阶段完成渲染":["23.5"],"lastbaseupdate中":["23.5"],"保存了上一次的update":["23.5"],"通过组件实例获取对应fiber":["23.6"],"getinstance":["23.6"],"eventtime":["23.6"],"requesteventtime":["23.6"],"suspenseconfig":["23.6"],"requestcurrentsuspenseconfig":["23.6"],"获取优先级":["23.6"],"lane":["23.6"],"requestupdatelane":["23.6"],"createupdate":["23.6"],"只有":["24.0"],"函数定义组件":["24.0"],"可以调用":["24.0"],"类组件":["24.0"],"普通函数":["24.0"],"更新内容为":["24.1"],"组件":["24.1"],"与同一个hook的其他更新形成链表":["24.2"],"quene":["24.3"],"保存在":["24.3"],"对应的":["24.3"],"使用如下精简的":["24.3"],"结构":["24.3"],"hooks队列的首个hook":["24.4"],"中的":["24.4"],"memoizedstate":["24.5"],"触发组件render":["24.5"],"statenode":["24.5"],"组件首次render为mount":["24.5"],"用于定义组件的":["24.6"],"state":["24.6"],"对标到类组件中this":["24.6"],"state的功能":["24.6"],"useeffect":["24.6"],"通过依赖触发的钩子函数":["24.6"],"常用于模拟类组件中的componentdidmount":["24.6"],"componentdidupdate":["24.6"],"componentwillunmount方法":["24.6"],"usecontext":["24.6"],"获取":["24.6"],"context":["24.6"],"类似于":["24.6"],"redux":["24.6"],"思想的实现":["24.6"],"但其并不足以替代":["24.6"],"可以理解成一个组件内部的":["24.6"],"并不是持久化存储":["24.6"],"会随着组件被销毁而销毁":["24.6"],"属于组件内部":["24.6"],"各个组件是相互隔离的":["24.6"],"单纯用它并无法共享数据":["24.6"],"配合usecontext的全局性":["24.6"],"可以完成一个轻量级的":["24.6"],"usecallback":["24.6"],"在usedeferredvalue内部会调用usestate并触发一次更新":["25.0"],"这次更新的优先级很低":["25.0"],"所以当前如果有正在进行中的更新":["25.0"],"不会受usedeferredvalue产生的更新影响":["25.0"],"所以usedeferredvalue能够返回延迟的值":["25.0"],"标签把":["26.0"],"全局共享数据和负责抛出修改xx的dispatch":["26.0"],"暴露给子组件":["26.0"],"在子组件中用":["26.0"],"获取全局变量":["26.0"],"input":["26.1","29.2"],"onchange":["26.1"],"button":["26.1"],"onclick":["26.1"],"provider":["26.2"],"with":["26.3"],"container":["26.3"],"框架内部运行机制根据当前状态渲染视图":["29.1"],"这也能看出现代框架的一个重要特性":["29.1"],"msg":["29.2"],"如何根据":["29.3"],"找到":["29.3"],"变化的部分":["29.3","29.6"],"不需要":["29.6"],"则可以直接不使用":["29.6"],"技术":["29.6"],"最终目的是快速找出一组":["29.6"],"能从":["29.7"],"预编译优化中受益":["29.7"],"因为模板的结构固定":["29.7"],"容易分析":["29.7"],"去除不必要的代码":["30.1"],"缩短变量名":["30.1"],"混淆代码":["30.1"],"注意":["30.2"],"webpack是打包命令":["30.2"],"后面的是打包参数":["30.2"],"可以看到":["30.2"],"文件夹中多了bundle":["30.2"],"js这个文件":["30.2"],"这时index":["30.2"],"html文件再去引入bundle":["30.2"],"js就不会报错了":["30.2"],"filename":["30.3"],"bundle":["30.3"],"打包产物":["30.3"],"mode":["30.3"],"none":["30.3","40.5"],"exports":["30.4"],"entry":["30.4"],"打包入口":["30.4"],"output":["30.4","30.6"],"此处内容与前面一致":["30.4"],"rules":["30.4"],"表示当文件后缀是":["30.4"],"css时":["30.4"],"使用对应use里的loader":["30.4"],"webpack":["30.5"],"vendor":["30.6"],"resolve":["30.6"],"即多入口":["30.8"],"的值是对象的属性名":["30.8"],"对应每一个口文":["30.8"],"件":["30.8"],"app1":["30.8"],"app2":["30.8"],"该内存中的文件路径":["30.9"],"我们会用webpack配置文件的":["30.9"],"devserver":["30.9"],"自身可以处理js和json文件模块":["30.11"],"它无法理解其它类型的文件模块":["30.11"],"可以是字符串":["30.12"],"对象或数组":["30.12"],"表示要使用的loader":["30.12"],"如果该loader额外配置参数":["30.12"],"那么可以取对象":["30.12"],"额外参数放在options里":["30.12"],"有部分loader放query里":["30.12"],"执行对象的":["30.14"],"run":["30.14"],"方法开始执行编译":["30.14"],"确定入口":["30.14"],"根据配置中的":["30.14"],"找出所有的入口文件":["30.14"],"编译模块":["30.14"],"从入口文件出发":["30.14"],"调用所有配置的":["30.14"],"对模块进行翻译":["30.14"],"再找出该模块依赖的模块":["30.14"],"再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理":["30.14"],"完成模块编译":["30.14"],"在经过第":["30.14"],"步使用":["30.14"],"翻译完所有模块后":["30.14"],"得到了每个模块被翻译后的最终内容以及它们之间的依赖关系":["30.14"],"输出资源":["30.14"],"根据入口和模块之间的依赖关系":["30.14"],"组装成一个个包含多个模块的":["30.14"],"再把每个":["30.14"],"转换成一个单独的文件加入到输出列表":["30.14"],"这步是可以修改输出内容的最后机会":["30.14"],"输出完成":["30.14"],"在确定好输出内容后":["30.14"],"根据配置确定输出的路径和文件名":["30.14"],"把文件内容写入到文件系统":["30.14"],"build":["30.14"],"process":["30.14"],"初始化":["30.14"],"options启动":["30.14"],"run实例化":["30.14"],"figure":["31.0"],"请求服务器提供的接口":["33.0"],"就可以获取到服务器的数据":["33.0"],"然后再操作":["33.0"],"dom":["33.0","36.1","38.0","38.13"],"来更新页面内容":["33.0"],"整个过程只需要更新网页的一部分就可以了":["33.0"],"而不用像之前那样还得刷新整个页面":["33.0"],"这样既有效率又不会打扰到用户":["33.0"],"打开请求":["33.1"],"配置参数":["33.1"],"open":["33.1"],"get":["33.1","33.7","36.3"],"创建一个get请求":["33.1"],"采用异步":["33.1"],"timeout":["33.1"],"设置xhr请求的超时时间":["33.1"],"比如可以监控到":["33.3"],"http":["33.3","41.0"],"头加载完成的消息":["33.3"],"3000来配置超时时间":["33.4"],"也就是说如果请求超过":["33.4"],"如果超时了":["33.5"],"ontimeout":["33.5"],"如果是正常的数据接收":["33.5"],"pic2":["33.6"],"最后通过export抛出get函数":["33.7"],"export":["33.7"],"params":["33.7"],"res":["33.7","138.0","152.0"],"data":["33.7"],"封装post方法":["33.7"],"原理同get基本一样":["33.7"],"但post方法必须要使用对提交从参数对象进行":["33.7"],"序列化":["33.7"],"ajax则可以自动将cookie发送到服务器":["33.8"],"axios和fetch的区别":["33.8"],"都是":["33.8"],"中用于发送网络请求的工具":["33.8"],"它们之间的区别有以下几点":["33.8"],"js":["33.8"],"和浏览器两种环境中使用":["33.8"],"username":["34.0"],"john":["34.0"],"doe":["34.0"],"expires":["34.0","36.15","40.3"],"thu":["34.0"],"dec":["34.0"],"path":["34.0","36.15"],"在任何情况下都会发送":["34.1"],"数据":["34.1"],"它旨在防止":["34.1"],"csrf":["34.1","36.17"],"跨网站请求伪造":["34.1"],"攻击":["34.1"],"httponly":["34.1"],"这个选项禁止任何":["34.1"],"访问":["34.1"],"我们使用":["34.1"],"看不到此类":["34.1"],"都必须为":["34.3"],"字符串":["34.3"],"存储绑定到源":["34.3"],"域":["34.3"],"协议":["34.3"],"端口三者":["34.3"],"不同协议或子域对应不同的存储对象":["34.3"],"它们之间无法访问彼此数据":["34.3"],"两个存储对象都提供相同的方法和属性":["34.3"],"setitem":["34.3"],"存储键":["34.3"],"getitem":["34.3"],"按照键获取值":["34.3"],"removeitem":["34.3"],"删除键及其对应的值":["34.3"],"它在浏览器重启甚至系统重启后仍然存在":["34.5"],"重新":["34.6"],"打开浏览器标签页后":["34.6"],"强大得多":["34.7"],"通过支持多种类型的键":["34.7"],"来存储几乎可以是任何类型的值":["34.7"],"支撑事务的可靠性":["34.7"],"支持键值范围查询":["34.7"],"索引":["34.7","121.0"],"相比":["34.7"],"它可以存储更大的数据量":["34.7"],"适用于离线应用":["34.7"],"可与":["34.7"],"serviceworkers":["34.7"],"和其他技术相结合使用":["34.7"],"中存入一段辨别用户身份的数据来实现的":["34.9"],"盐以哈希算法压缩成一定长的十六进制字符串":["34.10"],"可以防止恶意第三方拼接token请求服务器":["34.10"],"然后渲染进程会对这些资源进行解析":["35.0"],"绘制等操作":["35.0"],"最终生成一幅图片":["35.0"],"但是渲染进程并不负责将图片显示到界面上":["35.0"],"而是将最终生成的图片提交给浏览器内核模块":["35.0"],"由":["35.0"],"浏览器内核模块负责显示这张图片":["35.0"],"指的是进程间通信":["35.0"],"在渲染进程需要访问系统资源的时候":["35.1"],"需要通过浏览器内核来实现":["35.1"],"然后将访问的结果通过":["35.1"],"ipc":["35.1"],"linux":["35.2"],"提供的":["35.2"],"x":["35.2"],"window":["35.2"],"我们就把":["35.2"],"统称为窗口句柄":["35.2"],"应用程序可以在窗口句柄上进行绘制和接收":["35.2"],"键盘鼠标":["35.2"],"消息":["35.2"],"由于每个渲染进程都有安全沙箱的保护":["35.2"],"进程的内容":["35.3"],"因此也就无法攻击其他站点了":["35.3"],"年":["35.3"],"月":["35.3"],"详见":["35.4"],"网络":["35.4"],"cssom":["36.0"],"等信息":["36.0"],"在银行站点内部插入":["36.0"],"劫持用户登录的用户名和密码":["36.0"],"读取银行站点的":["36.0"],"cookie":["36.0","42.10"],"两个不同的源之间若想要相互访问资源或者操作":["36.1"],"由于同源策略":["36.2"],"不同源的页面之间不能互相访问对方的":["36.2"],"等内容":["36.2"],"head":["36.3"],"http的头信息不超出以下几种字段":["36.3"],"accept":["36.3"],"language":["36.3"],"content":["36.3","42.2"],"last":["36.3"],"信息":["36.4"],"如果需要包含":["36.4"],"请求需要设置":["36.4"],"xhr":["36.4"],"的属性":["36.4"],"withcredentials":["36.4"],"返回码是":["36.5"],"允许该请求之后":["36.5"],"浏览器便可发送真正的请求了":["36.5"],"并且以后每次浏览器正常的":["36.5"],"cors":["36.5"],"就都跟简单请求一样了":["36.5"],"ie10":["36.6"],"以下的浏览器":["36.6"],"而且一次预检请求通过后":["36.7"],"之后浏览器发送的请求只要在缓存期内":["36.7"],"都只会发正式请求":["36.7"],"的代码":["36.8"],"http协议":["36.9"],"qcact":["36.9"],"cloud":["36.9"],"api请求":["36.9"],"访问本地node层服务":["36.9"],"xss":["36.10"],"全称是":["36.10"],"cross":["36.10"],"site":["36.10"],"还可以":["36.11"],"在页面内生成浮窗广告":["36.11"],"这些广告会严重地影响用户体验":["36.11"],"要想避免站点被注入恶意脚本":["36.11"],"就要知道有哪些常见的注入方式":["36.11"],"通常情况下":["36.11"],"主要有":["36.11"],"存储型":["36.11"],"在存储之前":["36.12"],"没有做过滤":["36.12"],"前端从服务端请求到数据":["36.12"],"漏洞常见于通过":["36.13"],"传递参数的功能":["36.13"],"如网站搜索":["36.13"],"跳转等":["36.13"],"资源传输过程或者在用户使用页面的过程中修改":["36.14"],"m8q2ftwbsr8rlcldpvt7qkrqr38lmfy9juxkko3":["36.15"],"4bi6qu":["36.15"],"ocnoat7nkyzutzolhjfnwbw0izgsatsi7tzyiiiav94qgh":["36.15"],"bzeysnva7tzmjaytxytom9l":["36.15"],"0cn9ipl6cxi8l6":["36.15"],"z41asxtm2uewcoc5oh9djkffomhwqqrlnctoi":["36.15"],"sat":["36.15"],"apr":["36.15"],"06":["36.15"],"domain":["36.15"],"google":["36.15"],"跨站请求伪造":["36.16"],"攻击者诱导受害者进入第三方网站":["36.16"],"在第三方网站中":["36.16"],"利用用户的登录状态向被攻击网站发送跨站请求":["36.16"],"利用受害者在被攻击网站已经获取的注册凭证":["36.16"],"token":["36.17"],"第一步":["36.17"],"在浏览器向服务器发起请求时":["36.17"],"服务器生成一个":["36.17"],"其实就是服务器生成的字符串":["36.17"],"然后将该字符串植入到返回的页面中":["36.17"],"第二步":["36.17"],"在浏览器端如果要发起转账的请求":["36.17"],"个浏览器进程":["37.0"],"个":["37.0"],"gpu":["37.0"],"进程以及":["37.0"],"个渲染进程":["37.0"],"之间":["37.1"],"进程中的数据":["37.1"],"当一个进程关闭之后":["37.1"],"操作系统会回收进程所占用的内存":["37.1"],"渲染引擎的崩溃也会导致整个浏览器的崩溃":["37.2"],"所有页面的渲染模块":["37.2"],"执行环境以及插件都是运行在同一个线程中的":["37.2"],"一旦某个js脚本陷入无限循环":["37.2"],"就会导致整个浏览器失去响应":["37.2"],"只是随后网页":["37.3"],"界面都选择采用":["37.3"],"来绘制":["37.3"],"主要负责页面的网络资源加载":["37.3"],"之前是作为一个模块运行在浏览器进程里面的":["37.3"],"直至最近才独立出来":["37.3"],"成为一个单独的进程":["37.3"],"主要是负责插件的运行":["37.3"],"准备渲染进程":["37.4"],"准备进行渲染":["37.4"],"浏览器进程检查当前url是否和之前打开的渲染进程":["37.4"],"根域名":["37.4"],"是否相同":["37.4"],"如果相同":["37.4"],"则复用原来的进程":["37.4"],"如果不同":["37.4"],"则开启新的渲染进程":["37.4"],"浏览器向渲染进程发起":["37.4"],"提交文档":["37.4"],"的消息":["37.4"],"渲染进程收到消息后":["37.4"],"会和网络进程建立传输数据的":["37.4"],"文档数据传输完成后":["37.4"],"渲染进程会返回":["37.4"],"确认提交":["37.4"],"的消息给浏览器进程":["37.4"],"浏览器接受":["37.4"],"消息后":["37.4"],"移除旧文档":["37.4"],"更新界面":["37.4"],"树":["38.0"],"绘制":["38.0"],"分块":["38.0"],"光栅化和合成":["38.0"],"输入":["38.1","38.2"],"输出":["38.1","38.2"],"html文档":["38.1"],"继承规则":["38.2"],"层叠规则":["38.2"],"继承":["38.2"],"节点都包含有父节点的样式":["38.2"],"层叠":["38.2"],"最终得到":["38.2"],"chrome":["38.3"],"在布局阶段需要完成两个任务":["38.3"],"标签下面的全部内容":["38.4"],"再比如":["38.4"],"body":["38.4"],"span":["38.4"],"这个元素":["38.4"],"那么这个节点就从属于父节点的图层":["38.6"],"通常满足下面两点中任意一点的元素就可以被提升为单独的一个图层":["38.6"],"拥有层叠上下文属性":["38.6"],"比如":["38.6"],"flex":["38.6"],"position":["38.6"],"grid等":["38.6"],"生成位图的过程叫快速栅格化":["38.8"],"光栅化线程池":["38.9"],"中将图块转换成位图":["38.9"],"合成线程发送绘制图块命令":["38.9"],"给浏览器进程":["38.9"],"浏览器进程根据":["38.9"],"更新完成的渲染流水线":["38.10"],"无几何位置变换":["38.11"],"直接进入绘制阶段":["38.11"],"并没有占用主线程的资源":["38.12"],"另外也避开了布局和绘制两个子阶段":["38.12"],"所以相对于重绘和重排":["38.12"],"属性的读写要分离":["38.13"],"will":["38.13","130.0","131.0","167.0","179.0","180.0"],"参考链接":["39.0","40.2"],"这样海南移动用户的请求就不会千里迢迢跑到北京电信机房的服务器":["39.1"],"假设源站部署在北京电信机房":["39.1"],"load":["39.2"],"balance":["39.2"],"意思是将负载":["39.2"],"工作任务":["39.2"],"访问请求":["39.2"],"进行平衡":["39.2"],"分摊到多个操作单元":["39.2"],"服务器":["39.2"],"发现自己没有这个资源":["39.3"],"一般是缓存的数据过期了":["39.3"],"转头向根服务器":["39.3"],"的字段来设置cdn边缘节点数据缓存时间":["39.4"],"如果使用回源的方式":["39.5"],"必然会带来性能问题":["39.5"],"所以流媒体一般采用的都是主动推送的方式来进行":["39.5"],"cache":["39.6"],"就不会进行下一步":["40.0"],"直到达到全球只有13台的跟域名服务器":["40.0"],"今天主要介绍的就是浏览器缓存":["40.0"],"在本文主要介绍":["40.0"],"一旦会话结束就被释放":["40.1"],"并且缓存时间也很短暂":["40.1"],"在chrome浏览器中只有5分钟左右":["40.1"],"同时它也并非严格执行http头中的缓存指令":["40.1"],"如果以上四种缓存都没有命中的话":["40.1"],"那么只能发起请求来获取资源了":["40.1"],"通常浏览器缓存策略分为两种":["40.1"],"强缓存":["40.1"],"强缓存可以通过设置两种http":["40.3"],"header实现":["40.3"],"since":["40.5"],"表示的是服务器的资源最后一次修改的时间":["40.5"],"etag":["40.5"],"match":["40.5"],"表示的是服务器资源的唯一标识":["40.5"],"pic7":["40.6"],"只要资源发生了修改":["40.7"],"无论内容是否发生了实质性的改变":["40.7"],"都会将该资源返回客户端":["40.7"],"例如周期性重写":["40.7"],"但这种情况下资源包含的数据实质是一样的":["40.7"],"如没有则发送网络请求":["40.8"],"普通刷新":["40.8"],"f5":["40.8"],"因为":["40.8"],"tab":["40.8"],"并没有关闭":["40.8"],"因此":["40.8"],"memory":["40.8"],"是可用的":["40.8"],"会被优先使用":["40.8"],"如果匹配的话":["40.8"],"其次才是":["40.8"],"强制刷新":["40.8"],"ctrl":["40.8"],"建立连接":["41.0"],"关闭连接":["41.0"],"1默认使用长连接":["41.0"],"并指明此时客户端的序列号":["41.1"],"初始为":["41.1"],"所以第二个报文段要":["41.1"],"establised":["41.1"],"请求连接":["41.3"],"接收":["41.3"],"即":["41.3"],"由于是不存在的":["41.4"],"服务端长时间收不到客户端的ack":["41.4"],"1s":["41.5"],"2s":["41.5"],"4s":["41.5"],"且把服务端的序列值":["41.6"],"作为自己":["41.6"],"报文的序号值":["41.6"],"time":["41.6"],"时间等待":["41.6"],"等待足够的时间以确保远程tcp接收到连接中断请求的确认":["41.6"],"注意了":["41.6"],"确保对端没有收到":["41.7"],"重传的":["41.7"],"fin":["41.7"],"报文可以到达":["41.7"],"网站注册的域名服务器":["41.8"],"的地址给本地域名服务器":["41.8"],"这个name":["41.8"],"server就是网站注册的域名服务器":["41.8"],"本地域名服务器再向这个":["41.8"],"发送dns请求":["41.8"],"server根据映射关系表找到目标ip":["41.8"],"basics":["42.0"],"9的特点":["42.1"],"第一个是只有一个请求行":["42.1"],"并":["42.1"],"没有":["42.1"],"请求头和请求体":["42.1"],"因为只需要一个请求行就可以完整表达客户端的需求了":["42.1"],"第二个是服务器也":["42.1"],"没有返回头信息":["42.1"],"这是因为服务器端并不需要告诉客户端太多信息":["42.1"],"只支持":["42.2"],"压缩":["42.2"],"那么它会通过响应头中的":["42.2"],"字段告诉浏览器最终的压缩类型":["42.2"],"也就是说最终浏览器需要根据响应头的信息来处理数据":["42.2"],"下面是一段响应头的数据信息":["42.2"],"alive不会永久保持连接":["42.4"],"它有一个保持时间":["42.4"],"可以在不同的服务器软件":["42.4"],"如apache":["42.4"],"中设定这个时间":["42.4"],"通道中的某个请求因为某些原因没有及时返回":["42.5"],"那么就会阻塞后面的所有请求":["42.5"],"而post有所限制":["42.6"],"管线化是通过持久连接完成的":["42.6"],"且只有http":["42.6"],"值做不同的处理":["42.7"],"最后使用一个零长度的块作为发送数据完成的标志":["42.8"],"这样就提供了对动态内容的支持":["42.8"],"客户端下载一个1024k的文件":["42.9"],"已经下载了其中512k":["42.9"],"网络中断":["42.9"],"客户端请求续传":["42.9"],"因此需要在http头中申明本次需要续传的片段":["42.9"],"这个头通知服务端从文件的512k位置开始传输文件":["42.9"],"服务端收到断点续传请求":["42.9"],"客户端":["42.10"],"多路复用":["42.11"],"设置请求优先级":["42.11"],"并将处理的响应行":["42.12"],"响应头和响应体分别发送至二进制分帧层":["42.12"],"同样":["42.12"],"二进制分帧层会将这些响应数据转换为一个个带有请求":["42.12"],"经过协议栈发送给浏览器":["42.12"],"浏览器接收到响应帧之后":["42.12"],"会根据":["42.12"],"有更多的优点":["42.13"],"其中最重要的一点是减少了握手所花费的":["42.13"],"rtt":["42.13"],"个数":["42.13"],"实现了":["42.13"],"多路复用功能":["42.13"],"不同":["42.13"],"实现了在同一物理连接上可以有多个独立的逻辑数据流":["42.13"],"如下图":["42.13"],"实现了数据流的单独传输":["42.13"],"就解决了":["42.13"],"中队头阻塞的问题":["42.13"],"快速握手功能":["42.13"],"是基于":["42.13"],"服务端生成的随机数":["43.0"],"service":["43.0"],"浏览器回应":["43.0"],"客户端收到后":["43.0"],"检查证书是否合法":["43.0"],"主要检查下面几点":["43.0"],"证书是否过期":["43.0"],"证书是否已经被吊销":["43.0"],"证书是否可信":["43.0"],"证书验证通过后":["43.0"],"客户端生成随机数":["43.0"],"pre":["43.0","177.0"],"master":["43.0"],"然后利用":["43.0"],"对":["43.0"],"并向服务器发送加密后的数据":["43.0"],"第四步":["43.0"],"服务器最后的回应":["43.0"],"服务器使用":["43.0"],"私钥":["43.0"],"断点续传":["44.0"],"或者将一个大文档分解为多个下载段同时下载":["44.0"],"3xx":["44.0"],"重定向":["44.0"],"如果客户端发送了一个带条件的":["44.0"],"请求且该请求已被允许":["44.0"],"而文档的内容":["44.0"],"自上次访问以来或者根据请求的条件":["44.0"],"并没有改变":["44.0"],"则服务器应当返回这个状态码":["44.0"],"涉及到":["44.0"],"协商缓存":["44.0"],"4xx":["44.0"],"客户端错误":["44.0"],"5xx":["44.0"],"服务器错误":["44.0"],"服务器上的一个":["44.0"],"错误网关":["44.0"],"因此说它是无效的":["44.0"],"如果当前节点最大":["46.0","163.0"],"已经是最大堆":["46.0","163.0"],"递归向下继续执行":["46.0"],"nums":["46.0"],"k":["46.0"],"findkthlargest":["46.0"],"else":["49.0","71.0","81.0","84.0","86.0","97.0","109.0","127.0","129.0","140.0","141.0","181.0"],"math":["49.0","52.0","71.0","81.0","83.0","84.0","91.0","97.0","129.0","137.0","138.0","154.0","167.0"],"max":["49.0","51.0","81.0","83.0","84.0","91.0","93.0"],"min":["52.0","71.0","74.0","97.0"],"将原先的右子树接到当前右子树的末端":["54.0"],"while":["54.0","68.0","126.0","177.0"],"前序位置":["55.0"],"将传入的两个节点穿起来":["55.0"],"连接相同父节点的两个子节点":["55.0"],"利用函数定义":["58.0"],"先翻转左右子树":["58.0"],"然后交换左右子节点":["58.0"],"限定左子树的最大值是":["63.0"],"右子树的最小值是":["63.0"],"便是前序位置":["64.0"],"left":["64.0"],"便是中序位置":["64.0"],"right":["64.0"],"便是后序位置":["64.0"],"函数其实就是一个能够遍历二叉树所有节点的一个函数":["64.0"],"与遍历数组或者链表本质上没有区别":["64.0"],"以返回二叉树最大深度为例":["64.0"],"maxdepth":["64.0"],"sort":["65.0","82.0"],"遍历一遍布尔数组":["66.0"],"数出素数的个数":["66.0"],"count":["66.0"],"str":["68.0"],"set":["69.0"],"重点":["69.0"],"base":["69.0"],"case":["69.0"],"递归函数必须有个":["69.0"],"用来结束递归":["69.0"],"其实这段代码就是我们分治算法的":["69.0"],"最底层":["71.0","97.0"],"jj":["72.0"],"coinchange2":["73.0"],"外层":["73.0"],"循环在遍历所有状态的所有取值":["73.0"],"of":["73.0","92.0","112.0","150.0","151.0"],"直到找到最优解":["74.0"],"相关":["75.0"],"只维护长度为2的滚动数组":["75.0"],"不断替换数组元素":["75.0"],"sum":["75.0"],"正确的状态转移方程":["79.0"],"才能正确地穷举":["79.0"],"动态规划可以用":["79.1"],"递归":["79.1"],"记忆化":["79.1"],"自底向上":["79.2"],"函数的含义":["79.3"],"常见题型":["79.3"],"否则没有交易次数":["80.1"],"持有股票":["80.3"],"而不是dp":["80.4"],"ii":["80.5"],"medium":["80.5"],"交易次数无限制":["80.5"],"infinity":["80.5"],"iii":["80.5"],"hrad":["80.5"],"至少有一个不在":["81.0"],"pop":["82.0","103.0","105.0","115.0","134.0"],"numarray":["85.0","132.0","158.0"],"minpresum":["85.0","132.0","158.0"],"不相邻":["86.0"],"状态转移关系":["87.0"],"两种思路模版":["87.0"],"就是dp数组定义的两种思路":["87.0"],"在子数组":["87.1"],"我们要求的子序列":["87.1"],"我们要求的子序列的长度为dp":["87.2"],"相关题目整理":["87.2"],"最长递增子序列":["87.2"],"lc300":["87.2"],"不抢":["90.0"],"然后去下家":["90.0"],"not":["90.0"],"interval":["92.0"],"if":["93.0","95.0","129.0","135.0","152.0","166.0","169.0"],"可能碰到了":["95.0"],"卡住跳不动了":["95.0"],"判断是否能跳过最后一格":["95.0"],"的闭区间":["96.0"],"请你设计一个算法":["96.0"],"算出这些区间中最多有几个互不相交的区间":["96.0"],"最右边":["102.0"],"放左括号":["103.0","115.0"],"放右括号":["103.0","115.0"],"回溯遍历下一层节点":["104.0","107.0","108.0","109.0"],"注意是i":["104.0","110.8"],"元素可重复":["104.0"],"撤销选择":["104.0","105.0","108.0","110.3"],"进入下一层选择":["105.0"],"回到上一层":["105.0"],"做选择":["107.0","109.0","110.5","110.6"],"保证元素不重复":["107.0","108.0"],"continue":["109.0","110.5"],"children":["110.0"],"length":["110.0"],"前序位置需要的操作":["110.0"],"后序位置需要的操作":["110.0"],"而所谓的":["110.0"],"前序遍历":["110.0"],"后序遍历":["110.0"],"他们只是两个很有用的时间点":["110.0"],"前序遍历的代码在进入某一个节点之前的那个时间点执行":["110.0"],"后序遍历代码在离开某个节点之后的那个时间点执行":["110.0"],"回想我们刚才说的":["110.0"],"注意参数":["110.2","110.5","110.8"],"addlast":["110.3","110.5","110.6"],"排序和剪枝":["110.4"],"删掉去重逻辑":["110.7"],"即可":["110.7"],"neighbor":["112.0"],"再加一个":["113.0"],"在左边插入":["116.0"],"中左括号的数量都":["117.0"],"堆排序":["119.0"],"在数组中并没有真正意义上的指针":["121.0"],"但我们可以把":["121.0"],"当做数组中的指针":["121.0"],"这里改成收缩左侧边界即可":["122.0"],"时可以立即返回":["125.0"],"第二个":["125.0"],"寻找":["125.0"],"左侧边界":["125.0"],"的二分查找":["125.0"],"因为我们需找到":["125.0"],"的最左侧索引":["125.0"],"时不要立即返回":["125.0"],"而要收紧右侧边界以锁定左侧边界":["125.0"],"temp":["126.0"],"必然是从左至右进入结果":["127.0"],"剩下的一列":["127.0"],"必然是从上至下进入结果":["127.0"],"剩下一行":["127.0"],"从左到右依次添加":["127.0"],"jpeg":["128.0"],"lc":["128.0"],"mid":["129.0","138.0"],"floor":["129.0","138.0","167.0"],"your":["130.0","131.0","165.0","167.0","179.0","180.0"],"object":["130.0","131.0","159.0","160.0","167.0","179.0","180.0"],"be":["130.0","131.0","167.0","179.0","180.0"],"instantiated":["130.0","131.0","179.0","180.0"],"and":["130.0","131.0","179.0","180.0"],"called":["130.0","131.0","180.0"],"as":["130.0","180.0"],"such":["130.0","180.0"],"abs":["137.0"],"去掉双指针中间的":["140.0"],"s长度为奇数的情况":["144.0"],"反转字符串":["145.0"],"回文串判断":["145.0"],"原地删除":["149.0"],"trip":["150.0"],"fill":["151.0"],"df":["151.0"],"booking":["151.0"],"说明是对":["152.0"],"及以后的整个数组都进行修改":["152.0"],"那么就不需要再给":["152.0"],"数组减":["152.0"],"返回结果数组":["152.0"],"result":["152.0"],"size":["155.0","165.0"],"当窗口大小超过了k":["155.0"],"就收缩窗口":["155.0","160.0"],"d":["155.0","157.0","159.0","160.0"],"是将移出窗口的字符":["155.0","156.0","157.0","159.0","160.0"],"缩小窗口":["155.0","156.0","157.0","159.0","161.0"],"在这里更新结果":["156.0"],"keys":["157.0","159.0","160.0","165.0"],"如果d在需要的字符中":["157.0","159.0"],"n":["160.0"],"判断左侧窗口是否要收缩":["160.0"],"字符种类与需要的字符个数一致时":["160.0"],"即窗口中的字符串包含了t中的所有字符":["160.0"],"newres":["160.0"],"substring":["160.0"],"只有一个字符串的情况":["162.0"],"到正确位置":["164.0"],"删除最大元素":["164.0"],"方法先把堆顶元素":["164.0"],"和堆底最后的元素":["164.0"],"后判断是否超载":["165.0"],"next":["165.0"],"找到头节点":["165.0"],"shift":["166.0"],"len":["167.0"],"randomindex":["167.0"],"random":["167.0"],"栈内的元素都保持有序":["168.0"],"单调递增或单调递减":["168.0"],"p2":["170.0"],"p指向下一个位置":["171.0"],"p2已经遍历完了":["171.0"],"p1已经遍历完了":["171.0"],"遍历结束后":["173.0"],"我们将":["173.0"],"指针置空":["173.0"],"这是因为当前节点复用的是原链表的节点":["173.0"],"而其":["173.0"],"指针可能指向一个小于":["173.0"],"xx":["173.0"],"的节点":["173.0"],"快指针走两步":["175.0"],"如果":["175.0"],"最终和":["175.0"],"相遇":["175.0"],"那肯定是":["175.0"],"解释":["176.0"],"反转以a为头结点的链表":["177.0"],"b为结束节点的链表":["177.0"],"cur":["177.0","178.0"],"nxt":["177.0"],"结束条件":["177.0"],"tpm":["179.0"],"收缩右侧边界":["181.0"]},{"0":["7.2","40.3","64.0","108.0","109.0"],"1":["8.4","9.0","21.3","40.3","41.3","49.0","144.0","180.0"],"2":["8.4","8.8","8.11","8.12","9.0","20.18","21.3","26.1","30.10","65.0","67.0","87.2","100.0","111.0","140.0","151.0","167.0"],"3":["8.4","8.11","36.2","65.0","67.0","87.2","100.0","111.0","124.0","129.0","140.0","161.0","163.0","167.0"],"4":["5.6","36.9","37.0","41.1","42.11","67.0","87.2","100.0","129.0","140.0","163.0"],"5":["0.12","3.1","33.1","36.3","42.13","43.0","65.0","73.0","82.0","100.0","102.0","124.0","129.0","140.0","145.0","163.0"],"6":["26.0","65.0","100.0","163.0"],"7":["1.5","37.4","65.0","82.0","163.0","175.0"],"8":["37.4","163.0"],"9":["22.4","41.8","65.0","82.0","119.4","124.0","163.0"],"10":["22.4","41.8","66.0","82.0","119.3","119.4","129.0","140.0"],"11":["73.0"],"12":["124.0"],"18":["3.5","82.0"],"19":["102.0"],"21":["129.0"],"30":["15.0","30.2"],"31":["119.3","119.4","120.2"],"40":["102.0"],"44":["120.2"],"48":["118.0","120.2","128.0"],"50":["0.5"],"57":["102.0"],"60":["3.5","30.5","31.0"],"66":["118.0","120.2"],"80":["36.5","133.0"],"86":["20.0"],"90":["20.0","20.8","20.13","20.18"],"101":["82.0"],"200":["36.5"],"206":["42.9"],"309":["80.5"],"503":["44.0"],"504":["44.0"],"714":["80.5"],"1000":["9.0"],"1024":["2.8"],"1970":["34.0"],"6888":["36.9"],"1024000":["42.9"],"ps":["0.0","5.10","36.9","38.0"],"var的":["0.0"],"创建和初始化":["0.0"],"被提升":["0.0"],"赋值不会被提升":["0.0"],"let的":["0.0"],"创建":["0.0"],"初始化和赋值不会被提升":["0.0"],"function的":["0.0"],"初始化和赋值":["0.0"],"均会被提升":["0.0"],"输出的是全局作用域中声明并赋值好的1":["0.1"],"然后函数执行":["0.1"],"中的":["0.1"],"修改为":["0.1"],"并没有被销毁":["0.2"],"作用域":["0.2"],"作用域就是存放":["0.2"],"变量和函数":["0.2"],"的地方":["0.2"],"位置决定了变量的生命周期":["0.2"],"通俗地理解":["0.2"],"作用域就是变量与函数的可访问范围":["0.2"],"即作用域控制着变量和函数的可见性和生命周期":["0.2"],"定义":["0.3"],"的时候就决定了":["0.3"],"outer":["0.4"],"当一段代码使用了一个变量时":["0.4"],"引擎首先会在":["0.4"],"当前的执行上下文":["0.4"],"中查找该变量":["0.4"],"如果没有找到js引擎会在":["0.4"],"所指向的上下文中查找":["0.4"],"我们把这个查找的链条就称为":["0.4"],"pic12":["0.4"],"png":["0.5","20.1","20.18","22.8","23.4","29.3","30.2","30.5","34.7","36.5","39.6","133.0"],"width":["0.5","20.13","20.18","30.2","30.5","36.5","133.0"],"赋值给了newobj":["0.6"],"所以newobj和obj指向的是同一块":["0.6"],"堆内存空间":["0.6"],"所以改变newobj等于改变了共同的堆内存":["0.6"],"常见面试题":["0.6"],"javascript基础":["0.6"],"深浅拷贝":["0.6"],"在栈上分配资源和销毁资源的速度非常快":["0.7"],"因为栈空间是连续的":["0.7"],"分配空间和销毁空间只需要移动下指针就可以了":["0.7"],"缺点":["0.7","2.2","8.2","8.9","8.10","31.0"],"栈空间有限":["0.7"],"容易导致":["0.7"],"栈溢出":["0.7","1.1"],"采用栈来存储相对基本类型更加复杂的对象数据":["0.7"],"那么切换上下文":["0.7"],"esp指针上下移":["0.7"],"的开销将变得巨大":["0.7"],"那么这些变量的集合就称为":["0.8"],"函数的闭包":["0.8"],"函数":["0.8"],"函数能够访问的自由变量":["0.8"],"执行阶段":["0.10"],"执行转换后的代码并输出执行结果":["0.10"],"可以把":["0.10"],"看成是一个虚构出来的计算机":["0.10"],"也称为虚拟机":["0.10"],"虚拟机通过模拟实际计算机的各种功能来实现代码的执行":["0.10"],"如模拟实际计算机的":["0.10"],"cpu":["0.10"],"堆栈":["0.10"],"寄存器等":["0.10"],"虚拟机还具有它自己的一套指令系统":["0.10"],"所以对于":["0.10"],"代码来说":["0.10"],"就是它的整个世界":["0.10"],"代码时":["0.10"],"你并不需要担心现实中不同操作系统":["0.10"],"体系结构计算机的差异":["0.10"],"只需要按照虚拟机的规范写好代码就可以了":["0.10"],"可直接解释执行字节码":["0.11"],"或者将字节码编译为二进制代码然后再执行":["0.11"],"这个阶段会进行":["0.11"],"变量的提升":["0.11"],"delete":["0.12","155.0"],"操作可能会改变对象的结构":["0.12"],"导致引擎将对象的存储方式降级为哈希表存储的方式":["0.12"],"不利于":["0.12"],"的优化":["0.12"],"应尽可能避免使用":["0.12"],"当沿着属性添加的反方向删除属性时":["0.12"],"对象不会退化为哈希存储":["0.12"],"二进制代码如何被cpu执行的":["0.12"],"二进制代码装载进内存":["0.12"],"系统会将第一条指令的地址写入到":["0.12"],"pc":["0.12"],"寄存器中":["0.12"],"读取指令":["0.12"],"根据pc寄存器中地址":["0.12"],"读取到第一条指令":["0.12"],"并将pc寄存器中内容更新成下一条指令地址":["0.12"],"分析指令":["0.12"],"并识别出不同的类型的指令":["0.12"],"以及各种获取操作数的方法":["0.12"],"执行指令":["0.12"],"由于cpu访问内存花费时间较长":["0.12"],"因此cpu内部提供了通用寄存器":["0.12"],"用来保存关键变量":["0.12"],"临时数据等":["0.12"],"指令包括加载指令":["0.12"],"存储指令":["0.12"],"更新指令":["0.12"],"跳转指令":["0.12"],"如果涉及加减运算":["0.12"],"会额外让alu进行运算":["0.12"],"指令完成后":["0.12"],"通过pc寄存器取出下一条指令地址":["0.12"],"并更新pc寄存器中内容":["0.12"],"再重复以上步骤":["0.12"],"线程会按照一定规则":["1.0"],"循环地取出消息队列中的事件":["1.0"],"并执行事件":["1.0"],"js在此基础上又延伸出很多新技术":["1.0"],"比如":["1.0","7.18","23.4","87.1"],"放入延迟消息队列中":["1.1"],"解决了":["1.1"],"的问题":["1.1"],"上述提到的":["1.1"],"普通任务队列和延迟队列中的任务":["1.1"],"都属于":["1.1"],"等待await后面的操作执行完毕":["1.2"],"即返回promise":["1.2"],"成功状态":["1.2"],"才会执行下一句语句":["1.2"],"并且会被当成":["1.2"],"放在当前微任务队列末尾":["1.2"],"如果得到promise的":["1.2"],"值":["1.2","24.4"],"则报错并结束该函数的执行":["1.2"],"await下一条语句不会执行":["1.2"],"会依次取出微任务":["1.5"],"并按照顺行执行":["1.5"],"先进先出":["1.5"],"eventloop6":["1.5"],"等微任务队列中的所有":["1.5"],"都执行完成之后":["1.5"],"当前的宏任务也就执行结束了":["1.5"],"接":["1.5"],"来主线程会继续重复执行从":["1.5"],"消息队列":["1.5","35.0"],"中取出任务":["1.5"],"执行任务的过程":["1.5"],"于正常情况下":["1.5"],"取出宏任务的顺序是按照":["1.5"],"的顺序":["1.5"],"所有最后打印出来的顺序是":["1.5"],"result2":["1.6","1.8"],"doasync3":["1.6"],"result3":["1.6","1.8"],"console":["1.6","7.20","66.0","73.0","81.0","82.0","84.0","89.0","100.0","102.0","105.0","111.0","114.0","118.0","119.3","119.4","120.2","124.0","134.0","140.0","161.0","163.0"],"log":["1.6","7.20","66.0","73.0","81.0","82.0","84.0","89.0","100.0","102.0","105.0","111.0","114.0","118.0","119.2","119.3","119.4","120.2","124.0","134.0","140.0","161.0","163.0"],"val":["1.7"],"success":["1.7"],"failure":["1.7"],"url1":["1.8"],"url2":["1.8"],"result1":["1.8"],"后面紧跟着的代码是一个耗时的操作或者是一个异步操作":["1.9"],"后面必须是一个":["1.9"],"promise对象":["1.9"],"如果不是会被转化为一个已完成状态的promise":["1.9"],"process":["1.10","23.4"],"nexttick":["1.10"],"当所有当同步任务执行完毕之后就会执行nexttick":["1.10"],"promise1":["1.10"],"promise2":["1.10"],"这个虽然放在了resolve":["1.10"],"之后":["1.10"],"但也是同步任务":["1.10"],"会被立即执行":["1.10"],"promise3":["1.10"],"v8":["2.0"],"的垃圾回收器来完成":["2.0"],"为了更高效地回收垃圾":["2.0"],"引入了两个垃圾回收器":["2.0"],"它们分别针对着不同的场景":["2.0"],"新生代":["2.1"],"中存放的是生存时间":["2.1"],"短":["2.1"],"的对象":["2.1"],"老生代":["2.1"],"中存放生存时间":["2.1"],"久":["2.1"],"的堆内存":["2.1"],"是新生代内存和老生代内存之和":["2.1"],"新生代通常只支持":["2.1"],"8m":["2.1"],"的容量":["2.1"],"而老生代支持的容量就大很多了":["2.1"],"所以v8":["2.1"],"分别使用两个不同的垃圾回收器":["2.1"],"以便更高效地实施垃圾回收":["2.1"],"需要时间成本":["2.2"],"所以":["2.2","7.16","20.9","23.5","42.13"],"为了执行效率":["2.2"],"一般新生区的空间会被设置得比较小":["2.2"],"正是因为新生区的空间不大":["2.2"],"所以很容易被存活的对象装满整个区域":["2.2"],"便很快执行下一次垃圾回收":["2.2"],"算法内存只能使用新生代内存的一半":["2.2"],"团队经过了很多年的努力":["2.3"],"向现有的垃圾回收器添加":["2.3"],"并行":["2.3"],"并发和增量":["2.3"],"等垃圾回收技术":["2.3"],"这些技术主要是从两方面来解决垃圾回收效率问题的":["2.3"],"第一":["2.3"],"将一个完整的垃圾回收的任务拆分成多个小的任务":["2.3"],"这样就消灭了单个长的垃圾回收任务":["2.3"],"第二":["2.3","2.6"],"将标记对象":["2.3"],"移动对象等任务转移到后台线程进行":["2.3"],"这会大大减少主线程暂停的时间":["2.3"],"改善页面卡顿的问题":["2.3"],"让动画":["2.3"],"滚动和用户交互更加流畅":["2.3"],"虽然提升了效率":["2.4"],"但这还是":["2.4"],"全停顿":["2.4"],"的垃圾回收方式":["2.4"],"有没有灰色节点":["2.5"],"来判断整个标记":["2.5"],"是否完成":["2.5"],"如果没有灰色节点了":["2.5"],"就可以进行清理工作了":["2.5"],"如果还有灰色标记":["2.5"],"当下次恢复垃圾回收器时":["2.5"],"便从灰色的节点开始继续执行":["2.5"],"从而使得辅助线程之前做的工作完全无效":["2.6"],"主线程和辅助线程极有可能在同一时间去更改同一个对象":["2.6"],"这就需要额外实现读写锁的一些功能了":["2.6"],"甚至导致浏览器的崩溃":["2.7"],"v8的":["2.7"],"垃圾回收机制":["2.7"],"虽然能回收绝大部分的垃圾内存":["2.7"],"但是还是存在回收不了的情况":["2.7"],"key":["2.8"],"array":["2.8"],"weakmap":["2.8"],"的键名是弱引用":["2.8"],"用来查看分配给各函数的内存大小":["2.9"],"内存分配时间轴":["2.9"],"timeline":["2.9"],"用来查看实时的内存分配及回收情况":["2.9"],"bind都可以改变函数的this指向":["3.0"],"otaku2":["3.3"],"handsome":["3.3","3.5"],"boy":["3.3","3.5"],"this":["3.4","4.6"],"的上下文":["3.4"],"如果该函数没有返回":["3.4"],"则返回":["3.4"],"var":["3.5","122.0"],"person":["3.5"],"kevin":["3.5"],"对原有语法的增强":["4.1"],"apply":["4.6"],"es5代替方案":["4.6"],"新增对象":["4.8"],"全新的方法":["4.8"],"全新的功能":["4.8"],"ownkeys":["4.12"],"super可以作为函数调用":["4.14"],"也可以作为对象调用":["4.14"],"作为函数调用时":["4.14"],"只能在子类的constructor中调用":["4.14"],"参数按值传递":["5.0"],"继承意味着":["5.1"],"复制":["5.1"],"操作":["5.1"],"然而":["5.1"],"javascript":["5.1","15.7"],"默认并不会复制对象的属性":["5.1"],"相反":["5.1"],"只是在两个对象之间创建一个":["5.1"],"关联":["5.1"],"这样":["5.1"],"一个对象就可以通过委托访问另一个对象的属性和函数":["5.1"],"所以与其叫继承":["5.1"],"委托的说法反而更准确些":["5.1"],"两段代码打印出来的都是":["5.4"],"因为javascript采用的是词法作用域":["5.4"],"函数的作用域基于函数创建的位置":["5.4"],"变量声明等初始的属性值":["5.6"],"在代码执行阶段":["5.6"],"会再次修改变量对象的属性值":["5.6"],"bar对应的reference是":["5.8"],"barreference":["5.8"],"propertyname":["5.8"],"3年过去了":["5.8"],"还是看不懂":["5.8"],"箭头函数不能用":["5.10"],"new调用":["5.10"],"不能":["5.10"],"到某个对象":["5.10"],"虽然":["5.10"],"方法调用没问题":["5.10"],"但是不会产生预期效果":["5.10"],"let只在let命令所在的代码块内有效":["5.12"],"所以每执行一次循环":["5.12"],"便会创建一个块级作用域":["5.12"],"在这个块级作用域中":["5.12"],"你又定义了一个函数":["5.12"],"而这个函数又引用了函数外部的i变量":["5.12"],"那么这就产生了":["5.12"],"也就是说":["5.12"],"所有块级作用域中的i都不会被销毁":["5.12"],"所以再次调用":["5.12"],"时":["5.12","24.1"],"v8就会拿出闭包中的变量i":["5.12"],"且i的值都不同":["5.12"],"结论":["5.13"],"在js中":["5.13"],"参数如果是基本类型是按值传递":["5.13"],"如果是引用类型按共享传递":["5.13"],"break":["6.1"],"是具有then方法的对象或函数":["6.2"],"方法":["6.3","7.7","8.3","8.9","8.10","15.5","22.5"],"会返回一个形如":["6.3"],"xxx":["6.3"],"的字符串":["6.3"],"date":["7.0"],"regexp":["7.0"],"function":["7.0","122.0"],"等":["7.0","7.23","22.14","35.0","38.13"],"typeof是用来判断变量":["7.1"],"基本类型":["7.1"],"的关键字":["7.1"],"但":["7.1"],"是个js的老bug":["7.1"],"split":["7.2"],"slice":["7.2"],"join":["7.2","68.0","134.0"],"而instanceof的实现原理是在原型链上遍历":["7.3"],"和":["7.4","22.1","40.1"],"显示类型转换":["7.4"],"因为":["7.4","16.0"],"是一种弱类型的语言":["7.4"],"在一个表达式中":["7.4"],"运算符两边的类型可以不同":["7.4"],"比如一个字符串和一个数字相加":["7.4"],"解释器会在运算之前将它们的类型进行转换":["7.4"],"但是转换结果一定是一个原始值":["7.5"],"或者报错":["7.5"],"toprimitive规则":["7.6","7.10"],"是引用类型向原始类型转变的规则":["7.6","7.10"],"如果没有特别指定preferredtype":["7.6"],"则默认为number":["7.6"],"它遵循":["7.6","7.10"],"先valueof后tostring":["7.6","7.10"],"的模式期望得到一个原始类型":["7.6","7.10"],"都是继承的":["7.7"],"prototype":["7.7"],"obj":["7.7","131.0","165.0","167.0","179.0","180.0","181.0"],"math":["7.7","64.0","156.0"],"相当于调用对象的":["7.9"],"tostring":["7.9","7.12"],"返回的是":["7.9"],"object":["7.9","7.22","165.0","181.0"],"star":["7.10","21.9"],"取模":["7.13"],"字符串运算符":["7.13"],"比较运算符":["7.13"],"会先变成转成原始类型":["7.15"],"然后再转成number类型变成":["7.15"],"因为相当于":["7.16"],"而":["7.16"],"相当于字符串转为number类型":["7.16"],"结果为nan":["7.16"],"nan":["7.16"],"则返回false":["7.20"],"let":["7.20"],"a":["7.20","9.0","102.0"],"b":["7.20","102.0","164.0"],"根据规则2":["7.21"],"boolean":["7.21"],"首先被转换为":["7.21"],"类型":["7.21"],"变成":["7.21"],"根据规则5":["7.21"],"转为原始类型":["7.21"],"先调用valueof会返回本身":["7.21"],"再调用tostring":["7.21"],"undefined会被当成空字符串处理":["7.21"],"此时变成":["7.21"],"根据规则规则3":["7.21"],"转为number类型为0":["7.21"],"所以结果为true":["7.21"],"return":["7.26","152.0"],"replace":["7.26"],"javascript深入之创建对象的多种方式以及优缺点":["8.0"],"所有的getname方法都是一样的":["8.1"],"但是却存储了多次":["8.1"],"浪费资源":["8.1"],"每次创建实例时":["8.2"],"每个方法都要被创建一次":["8.2"],"所有的":["8.3"],"都是":["8.3"],"的":["8.3","36.11","42.13"],"没有办法创建实例自己的属性和方法":["8.3"],"也没有办法像构造函数那样":["8.3"],"传递参数":["8.3"],"优点":["8.4","9.0"],"解决了原型模式对于引用对象的缺点":["8.4"],"解决了原型模式没有办法传递参数的缺点":["8.4"],"解决了构造函数模式不能共享方法的缺点":["8.4"],"继承":["8.7"],"javascript深入之继承的多种方式和优缺点":["8.7"],"javascript常用八种继承方案":["8.7"],"属性":["8.8"],"那么所有子类创建的实例对象都会":["8.8"],"受到影响":["8.8"],"这点从修改child1":["8.8"],"arr可以看出来":["8.8"],"子类无法向父类传参":["8.8"],"方法都在构造函数中定义":["8.9"],"每次创建实例都会创建一遍方法":["8.9"],"只能继承父类的实例属性和方法":["8.9"],"不能继承原型属性":["8.9"],"在原型中会存在两份相同的属性":["8.10"],"无法传递参数":["8.11","8.12"],"es5中存在":["8.11"],"create":["8.11"],"的方法":["8.11"],"能够代替上面的object方法":["8.11"],"存在篡改的可能":["8.12"],"子类中的super":["8.14"],"其实就是父类中":["8.14"],"构造器的一个引用":["8.14"],"父类的静态方法":["8.14"],"也会被子类继承":["8.14"],"super关键字":["8.14"],"如果在子类构造函数中使用this":["8.14"],"就要采用super关键字":["8.14"],"它表示调用父类的构造函数":["8.14"],"false":["8.15","11.0","24.5","110.3","110.6","112.0","150.0","155.0","159.0","169.0"],"instanceof":["8.15"],"fetch":["9.0"],"resource":["9.0"],"that":["9.0"],"may":["9.0"],"take":["9.0"],"while":["9.0","59.0"],"settimeout":["9.0"],"request":["9.0"],"timeout":["9.0"],"解决了回调地狱的问题":["9.0"],"实现错误冒泡后一站式处理":["9.0"],"解决每次任务中判断错误":["9.0"],"增加代码混乱度的问题":["9.0"],"是微任务":["9.1"],"会放入微任务队列":["9.1"],"readfile":["9.2"],"utf8":["9.2"],"data":["9.2","36.3"],"readall":["9.2"],"read1":["9.2"],"read2":["9.2"],"这个函数同步执行":["9.2"],"r":["9.2"],"txt":["9.2"],"b复制了a":["10.0"],"当修改a时":["10.0"],"如果":["10.0","69.0"],"b也跟着变了":["10.0"],"说明这是浅拷贝":["10.0"],"b不变":["10.0"],"说明这是深拷贝":["10.0"],"以上几种操作均为浅拷贝":["10.1"],"error类型没有拷贝成功":["10.4"],"hasownproperty":["10.7"],"这个判断的目的是为了避免访问非target本身的属性":["10.7"],"比如继承来的属性":["10.7"],"也可以使用getownpropertynames":["10.7"],"这个方法":["10.7"],"eval":["10.8"],"npm":["12.0"],"webpack":["12.0"],"git":["12.0"],"shell":["12.0"],"whistle":["12.0"],"swichhosts":["12.0"],"等基礎工具理項目":["12.0"],"建":["12.0"],"版本管理等":["12.0"],"项目经历":["12.0"],"配合qa同学进行项目推广":["12.1"],"记录使用反馈并进行优化":["12.1"],"协作人员沟通":["12.2"],"前后端代码开发上线":["12.2"],"上线后效果查看以及后续改进":["12.2"],"致谢":["12.3"],"感谢您花时间阅读我的简历":["12.3"],"期待能有机会与您共事":["12.3"],"issues":["15.0"],"代码混杂在一起":["15.1"],"使得日益复杂的web应用难以维护":["15.1"],"重点":["15.2"],"客户端渲染通常需要从服务器端获取数据和模板":["15.2"],"然后在":["15.2"],"浏览器端":["15.2"],"进行数据绑定和渲染":["15.2"],"但是加大了服务器的压力":["15.3"],"csr和ssr本质的区别":["15.3"],"是谁来完成了html的完整拼接":["15.3"],"服务端渲染是在服务端生成dom树":["15.3"],"客户端渲染是由浏览器生成dom树":["15.3"],"rendertostaticmarkup":["15.4"],"来进行渲染":["15.4"],"路由处理":["15.4"],"因为服务端渲染是针对某一个页面进行渲染的":["15.4"],"需要服务端也能够正确的解析浏览器地址路由":["15.4"],"我们首先使用":["15.5"],"方法找到用户请求的":["15.5"],"对应的路由":["15.5"],"然后根据路由中定义的组件渲染页面":["15.5"],"如果定义了":["15.5"],"我们还需要执行它来获取组件的初始化数据":["15.5"],"最后":["15.5"],"将组件渲染成实际的":["15.5"],"并返回":["15.5"],"js提供了一套完整的服务端渲染解决方案":["15.6"],"不但提高了网站的性能":["15.6"],"同时也可以方便的在react应用中使用服务端渲染和其他相关技术":["15.6"],"模式出现之前":["16.0"],"基本都是使用":["16.0"],"模式来实现前端路由":["16.0"],"使用":["16.0"],"模式的好处是":["16.0"],"可以避免因为路由变化而导致整个页面的刷新":["16.0"],"只会影响到":["16.0"],"的一部分":["16.0"],"不会触发完整的页面重新加载":["16.0"],"这也是单页面应用中常用的一种路由模式":["16.0"],"在保留现有历史记录的同时":["16.1"],"将":["16.1"],"加入到历史记录中":["16.1"],"会将历史记录中的当前页面历史替换为":["16.1"],"通过监听":["16.1"],"popstate":["16.1"],"事件":["16.1"],"获取url的变化":["16.1"],"来实现的":["16.2","40.1","42.12"],"然后再将":["16.2"],"以便进行状态管理和导航":["16.2"],"fetch想要实现axios的部分功能":["19.2"],"需要另行封装":["19.2"],"e5":["20.0"],"bf":["20.0"],"b5":["20.0"],"heart":["20.2"],"当层级很深时":["20.3"],"递归更新时间超过了16ms":["20.3"],"用户交互就会卡顿":["20.3"],"让我们来了解下他":["20.4"],"fiber":["20.6"],"的架构":["20.6"],"heavy":["20.6","20.12"],"exclamation":["20.6","20.12"],"mark":["20.6","20.12"],"其中红框中的步骤随时可能由于以下原因被中断":["20.8"],"有其他更高优任务需要先更新":["20.8"],"当前帧没有剩余时间":["20.8"],"由于红框中的工作都在内存中进行":["20.8"],"不会更新页面上的dom":["20.8"],"所以即使反复中断":["20.8"],"用户也不会看见更新不完全的dom":["20.8"],"即使有被中断的更新":["20.9"],"用户也不会看到更新不完全的视图":["20.9"],"其中每个任务更新单元为":["20.11"],"react":["20.11"],"element":["20.11"],"对应的":["20.11"],"fiber节点":["20.11","22.0"],"虚拟dom就是fiber节点":["20.12"],"statenode":["20.14","24.3"],"lasteffect":["20.15"],"window":["20.17"],"pic7":["20.18"],"点击p标签":["20.18"],"pic8":["20.18"],"如果任务正在scheduler内调度":["20.19"],"就不属于work":["20.19","22.0"],"deletion":["21.0","22.7"],"0b0000000000100":["21.0","22.7"],"生成":["21.1"],"销毁并新建":["21.2"],"但是当我们用key指明了节点前后对应关系后react知道":["21.2"],"的p在更新后还存在":["21.2"],"所以dom节点可以复用":["21.2"],"只是需要交下顺序":["21.2"],"我们可以从同级的节点数量将diff分为两类":["21.3"],"当newchild类型为object":["21.3"],"代表同级只有一个节点":["21.3"],"当newchild类型为array":["21.3"],"同级有多个节点":["21.3"],"更新前后key改变":["21.4"],"不需要再判断type":["21.4"],"更新前后key与type都未改变":["21.4"],"可以复用":["21.4"],"children变化":["21.4"],"dom的子元素需要更新":["21.4"],"的节点":["21.6"],"第二轮遍历":["21.6"],"处理剩下的不属于更新的节点":["21.6"],"newchildren与oldfiber同时遍历完":["21.7"],"是最理想的情况":["21.7"],"只需在第一轮遍历进行组件更新":["21.7"],"diff结束":["21.7"],"意味着本次更新有":["21.7"],"新节点插入":["21.7"],"我们只需要遍历剩下的newchildren为生成的workinprogress":["21.7"],"fiber依次标记":["21.7"],"意味着本次更新比之前的节点数量少":["21.7"],"有节点被删除了":["21.7"],"所以需要遍历剩下的oldfiber":["21.7"],"依次标记":["21.7"],"newchildren与oldfiber都没遍历完":["21.7"],"这意味着有节点在这次":["21.7","21.8"],"更新中改变了位置":["21.7","21.8"],"这是diff算法最精髓也是最难懂的部分":["21.7","21.8"],"都没遍历完":["21.8"],"c节点需要":["21.9"],"可以看到":["21.9"],"我们以为从":["21.9"],"变为":["21.9"],"只需要将d":["21.9"],"向左":["21.9"],"移动到前面":["21.9"],"但实际上react":["21.9"],"保持d不变":["21.9"],"将abc分别":["21.9"],"移动到了d的后面":["21.9"],"从这点可以看出":["21.9"],"考虑性能":["21.9"],"我们要尽量减少将节点从后面移动到前面的操作":["21.9"],"react性能优化tips":["21.9"],"渲染器":["22.0"],"负责将变化的组件渲染到页面上其工作的阶段被称为":["22.0"],"commit阶段会把render阶段提交的信息":["22.0"],"渲染":["22.0","37.4"],"在页面上":["22.0"],"render与commit阶段统称为":["22.0"],"work":["22.0"],"即react在工作中":["22.0"],"相对应的":["22.0"],"如果任务正在":["22.0"],"内调度":["22.0"],"本章我们会讲解":["22.0"],"是如何被创建并构建":["22.0"],"fiber树":["22.0","22.18","23.2"],"的工作可以分为两部分":["22.1"],"递":["22.1"],"归":["22.1"],"到rootfiber":["22.3"],"至此":["22.3","41.1"],"render阶段的工作就结束了":["22.3"],"hosttext":["22.5"],"省略其他类型":["22.5"],"对于我们常见的组件类型":["22.5"],"如":["22.5"],"最终会进入":["22.5"],"reconcilechildren":["22.5"],"performunitofwork":["22.6"],"执行时":["22.6"],"的传参":["22.6"],"hostcomponent":["22.9"],"主要有以下三个逻辑":["22.10"],"为fiber节点生成对应的":["22.10"],"将子孙dom节点插入刚生成的dom节点中":["22.10"],"与update逻辑中的":["22.10"],"类似的处理props的过程":["22.10"],"就能执行所有":["22.11"],"effect":["22.11"],"了":["22.11"],"比如在":["22.12"],"componentdidmount":["22.12"],"中执行":["22.12"],"setstate":["22.12"],"创建的更新会在这里被同步执行":["22.12"],"uselayouteffect":["22.12","24.6"],"useeffect的回调方法也会在这里被执行":["22.12"],"scheduler":["22.13","23.4"],"模块提供":["22.13"],"用于以某个":["22.13"],"优先级异步调度一个回调函数":["22.13"],"异步调度主要是防止同步执行时阻塞浏览器渲染":["22.13"],"hydrating":["22.14"],"或":["22.15"],"appendchild":["22.15"],"执行dom插入操作":["22.15"],"useeffect":["22.17"],"的销毁函数":["22.17"],"更新ref":["22.18"],"另外":["22.18","37.2"],"在":["22.18"],"layout":["22.18"],"阶段":["22.18"],"workinprogress":["22.18"],"fiber树在commit阶段完成渲染后会变为current":["22.18"],"两种不同结构的update":["23.0"],"其中":["23.0"],"共用一套update结构":["23.0"],"单独使用一种update结构":["23.0"],"虽然他们的结构不同":["23.0"],"但是他们工作机制与工作流程大体相同":["23.0"],"在本节我们介绍前一种update":["23.0"],"即":["23.0","36.10"],"next":["23.1","26.1"],"与其他update连接形成链表":["23.1"],"在commit阶段完成页面渲染后":["23.2"],"fiber树变为current":["23.2"],"fiber树内fiber节点的updatequeue就变成current":["23.2"],"保存update":["23.3"],"callback":["23.3"],"null的update":["23.3"],"其他":["23.4"],"比如数据请求":["23.4"],"低优先级执行":["23.4"],"每当需要调度任务时":["23.4"],"react会调用":["23.4"],"调度器":["23.4"],"提供的方法runwithpriority":["23.4"],"该方法接收一个优先级常量与一个回调函数作为参数":["23.4"],"回调函数会以优先级高低为顺序排列在一个定时器中并在合适的时间触发":["23.4"],"img":["23.4","34.7","36.5","133.0"],"src":["23.4","30.2","34.7","36.5","133.0"],"pictures":["23.4"],"fiber树变成current":["23.5"],"fiber树后也不会造成update丢失":["23.5"],"赋值回调函数":["23.6"],"undefined":["23.6"],"将update插入updatequeue":["23.6"],"enqueueupdate":["23.6"],"scheduleupdateonfiber":["23.6"],"不能在useeffect中使用usestate":["24.0"],"会报错提示":["24.0"],"类组件不会被替换或废弃":["24.0"],"不需要强制改造类组件":["24.0"],"两种方式能并存":["24.0"],"以":["24.1","58.0"],"返回的num为更新后的结果":["24.1"],"环状单向链表":["24.2"],"app组件对应的fiber对象":["24.3"],"memoizedstate":["24.3"],"保存该functioncomponent对应的hooks链表":["24.3"],"app":["24.3"],"指向app函数":["24.3"],"则指的是当前hook缓存的":["24.4"],"state":["24.4"],"以后再触发的更新为update":["24.5"],"缓存回调函数":["24.6"],"避免传入的回调每次都是新的函数实例而导致依赖组件重新渲染":["24.6"],"具有性能优化的效果":["24.6"],"usememo":["24.6"],"用于缓存传入的":["24.6"],"props":["24.6"],"避免依赖的组件每次都重新渲染":["24.6"],"useref":["24.6"],"获取组件的真实节点":["24.6"],"dom更新同步钩子":["24.6"],"用法与useeffect类似":["24.6"],"只是区别于执行时间点的不同":["24.6"],"useeffect属于异步执行":["24.6"],"并不会等待":["24.6"],"dom":["24.6"],"真正渲染后执行":["24.6"],"而uselayouteffect则会真正渲染后才触发":["24.6"],"可以获取更新后的":["24.6"],"自定义钩子":["24.6"],"usexxxxx":["24.6"],"基于":["24.6"],"可以引用其它":["24.6"],"这个特性":["24.6"],"我们可以编写自定义钩子":["24.6"],"详见":["25.0","37.4"],"react核心原理1":["25.0"],"理念":["25.0"],"react15":["25.0"],"scheduler包含两个功能":["25.0"],"优先级调度":["25.0"],"xxcontext":["26.0"],"dispatch":["26.0"],"去抛出修改xx的事件":["26.0"],"携带修改事件类型和参数":["26.0"],"unstated":["26.1"],"这个库只做了一件事情":["26.1"],"提供":["26.1"],"createcontainer":["26.1"],"将自定义":["26.1"],"hooks":["26.1"],"封装为一个数据对象":["26.1"],"注入与":["26.1"],"usecontainer":["26.1"],"获取":["26.1"],"store":["26.1"],"这两个方法":["26.1"],"在store中保存两个内容":["26.1"],"states":["26.1"],"可以修改states的方法":["26.1"],"document":["26.2","36.15"],"getelementbyid":["26.2"],"root":["26.2"],"recoil":["26.3"],"https":["26.3"],"recoiljs":["26.3"],"org":["26.3"],"docs":["26.3"],"introduction":["26.3"],"getting":["26.3"],"started":["26.3"],"数据驱动":["29.1"],"v":["29.2"],"model":["29.2"],"属于应用级框架":["29.3"],"属于组件级框架":["29.3"],"svelte":["29.3"],"属于元素级框架":["29.3"],"元素中变化的部分":["29.6"],"应用级和组件级":["29.6"],"框架需要使用":["29.6"],"元素级框架由于直接指导变化的元素":["29.6"],"因此不需要":["29.6"],"jsx":["29.7"],"则难以优化":["29.7"],"除非约束":["29.7"],"的灵活性":["29.7"],"代码打包的同时进行混淆":["30.1"],"提高代码的安全性":["30.1"],"picture":["30.2","34.7","36.5"],"files":["30.2"],"这就是最简单的一个打包过程了":["30.2"],"webpack打包模式":["30.3","30.4"],"默认是":["30.3","30.4"],"production":["30.3","30.4"],"这样就是使用配置文件打包的方式":["30.3"],"use里面的值是数组":["30.4"],"每一项是一个loader":["30.4"],"loader的执行顺序是从后向前执行":["30.4"],"mode":["30.4","30.6"],"none":["30.4","30.6"],"这样再执行打包命令":["30.4"],"便成功了":["30.4"],"在浏览器打开index":["30.4"],"发现css生效了":["30.4"],"文字颜色变成蓝色":["30.4"],"入口与出口":["30.4"],"dirname":["30.6"],"filename":["30.6"],"name":["30.6"],"上方的配置分别从两个入口文件打包":["30.6"],"每个入口文件各自寻找自己依赖的文件模块打包成一个js文件":["30.6"],"最终得到两个js文件":["30.6"],"配置项的publicpath表示":["30.9"],"它虚拟映射了电脑磁盘路径":["30.9"],"绝对路径":["30.10"],"publicpath的值以http协议名称开始":["30.10"],"一般在使用cdn的时候":["30.10"],"因为cdn的域名与我们自己服务器的域名不一样":["30.10"],"我们会采用这种方式":["30.10"],"此时便可以用loader来处理webpack无法处理的模块":["30.11"],"例如":["30.12","36.15"],"babel":["30.12"],"options":["30.12"],"编译构建":["30.14"],"make":["30.14"],"经过上面一步使用":["30.14"],"seal":["30.14"],"step":["30.14"],"jpg":["30.14"],"sourcemap和webpack":["30.14"],"webpack和vite":["30.14"],"rollup的区别":["30.14"],"todo":["30.14"],"尝试自己实现一个简单的webpack":["30.14"],"实际项目里面的webpack是如何配置的":["30.14"],"pic3":["31.0","110.0"],"pnpm查看子级依赖很不方便":["31.0"],"xmlhttprequest可以做到":["33.0"],"在不重新加载页面的情况下更新网页":["33.0"],"在页面已加载后从服务器请求数据":["33.0"],"在页面已加载后从服务器接收数据":["33.0"],"在后台向服务器发送数据":["33.0"],"responsetype":["33.1"],"text":["33.1","36.3"],"设置响应返回的数据格式":["33.1"],"setrequestheader":["33.1"],"x":["33.1","36.3"],"test":["33.1"],"time":["33.1"],"geekbang":["33.1"],"发送请求":["33.1"],"send":["33.1"],"用来执行实际的网络请求操作":["33.2"],"响应体消息以及数据加载完成的消息等":["33.3"],"毫秒还没有响应":["33.4"],"那么这次请求就被判断为失败了":["33.4"],"onreadystatechange":["33.5"],"来反馈相应的状态":["33.5"],"将对象的状态信息转换为可以存储或传输的形式的过程":["33.7"],"的操作":["33.7"],"post":["33.7"],"qs":["33.7"],"stringify":["33.7"],"只能在浏览器环境中使用":["33.8"],"支持取消请求和自定义请求拦截器":["33.8"],"不太方便实现取消请求和请求拦截":["33.8"],"更加灵活和易于使用":["33.8"],"相对简单":["33.8"],"使用起来不太方便":["33.8"],"设置cookie":["34.0"],"01":["34.0"],"jan":["34.0"],"删除cookie":["34.0"],"也无法对此类":["34.1"],"进行操作":["34.1"],"设置了httponly":["34.1"],"如果用户访问了带有黑客":["34.1"],"代码的页面":["34.1"],"黑客代码将执行但无法通过":["34.1"],"获取到包含用户身份验证信息的":["34.1"],"所以攻击会被预防":["34.1"],"可以用于防范":["34.1"],"xss":["34.1"],"clear":["34.3"],"删除所有数据":["34.3"],"index":["34.3"],"获取该索引下的键名":["34.3"],"length":["34.3","50.0"],"存储的内容的长度":["34.3"],"同源":["34.3"],"的所有标签页和窗口之间共享数据":["34.3"],"在当前浏览器标签页中可见":["34.3"],"包括同源的":["34.3"],"iframe":["34.3"],"同一标签页下的":["34.3"],"之间是共享":["34.3"],"浏览器重启后数据仍然保留":["34.3"],"页面刷新后数据仍然保留":["34.3"],"但标签页关闭后数据则不再保留":["34.3"],"不会被保留":["34.6"],"总结cookie":["34.7"],"indexdb":["34.7","36.0"],"pic2":["34.7","36.5","110.0","176.0"],"cookie":["34.7","36.16"],"session":["34.7"],"token的区别":["34.7"],"域的cookie数量是有限的":["34.9"],"还可以把不变的参数也放进token":["34.10"],"避免多次查库":["34.10"],"常见的方式有":["35.0"],"管道":["35.0"],"包括无名管道和命名管道":["35.0"],"信号量":["35.0"],"共享存储":["35.0"],"socket":["35.0"],"streams":["35.0"],"转发给渲染进程":["35.1"],"安全沙箱最小的保护单位是":["35.1"],"进程":["35.1"],"所以在渲染进程内部是无法直接操作窗口句柄的":["35.2"],"这也是为了限制渲染进程监控到用户的输入事件":["35.2"],"所以渲染进程需要完成以下两点大的改变":["35.2"],"渲染进程需要渲染出位图":["35.2"],"操作系统没有将用户输入事件直接传递给渲染进程":["35.2"],"而是将这些事件传递给浏览器内核":["35.2"],"然后浏览器内核再根据当前浏览器界面的状态来判断如何调度这些事件":["35.2"],"如果当前焦点位于浏览器地址栏中":["35.2"],"则输入事件会在浏览器内核内部处理":["35.2"],"如果当前焦点在页面的区域内":["35.2"],"则浏览器内核会将输入事件转发给渲染进程":["35.2"],"日":["35.3"],"团队宣布安卓版的":["35.3"],"已经全面支持站点隔离":["35.3"],"章节":["35.4","37.4"],"等数据":["36.0"],"甚至还可以将这些信息上传至自己的服务器":["36.0"],"这样就可以在你不知情的情况下伪造一些转账请求等信息":["36.0"],"而浏览器中最基础":["36.0"],"最核心的安全策略就是":["36.0"],"那么会有一套基础的安全策略的制约":["36.1"],"我们把这称为":["36.1"],"同源策略":["36.1"],"同源策略对网络层面的影响":["36.2"],"同源策略限制了通过":["36.2"],"xmlhttprequest":["36.2"],"等方式将站点的数据发送给不同源的站点":["36.2"],"如何解决跨域问题":["36.2"],"event":["36.3"],"id":["36.3"],"type":["36.3"],"只限于三个值application":["36.3"],"www":["36.3"],"form":["36.3"],"urlencoded":["36.3"],"multipart":["36.3"],"plain":["36.3"],"为":["36.4"],"true":["36.4","134.0","150.0","169.0"],"服务器需要设置响应头部":["36.4"],"credentials":["36.4"],"safe":["36.5"],"第一次发送非简单请求时会多一次请求":["36.6"],"节约了很多服务端的计算量":["36.7"],"act":["36.9"],"新版chrome支持本地跨域请求调试":["36.9"],"还有一个常用工具":["36.9"],"开发环境切换host工具":["36.9"],"switchhosts":["36.9"],"网站攻击及如何防范":["36.9"],"scripting":["36.10"],"跨站脚本":["36.10"],"攻击":["36.11"],"反射型":["36.11"],"攻击和基于":["36.11"],"三种方式来注入恶意脚本":["36.11"],"没有过滤输出":["36.12"],"由于需要用户主动打开恶意的":["36.13"],"才能生效":["36.13"],"攻击者往往会结合多种手段诱导用户点击":["36.13"],"页面的数据":["36.14"],"com":["36.15"],"标记的":["36.15"],"只能使用在":["36.15"],"请求过程中":["36.15"],"所以无法通过":["36.15"],"js":["36.15"],"来读取这段":["36.15"],"绕过后台的用户验证":["36.16"],"达到冒充用户对被攻击的网站执行某项操作的目的":["36.16"],"那么需要带上页面中的":["36.17"],"然后服务器会验证该":["36.17"],"是否合法":["36.17"],"如果是从第三方站点发出的请求":["36.17"],"那么将无法获取到":["36.17"],"的值":["36.17"],"所以即使发出了请求":["36.17"],"服务器也会因为":["36.17"],"不正确而拒绝请求":["36.17"],"共":["37.0"],"如果打开的页面有运行插件的话":["37.0"],"还需要再加上":["37.0"],"个插件进程":["37.0"],"之间的内容相互":["37.1"],"隔离":["37.1"],"变卡顿":["37.2"],"内存泄露":["37.2"],"也会导致进程变慢":["37.2"],"因插件易崩溃":["37.3"],"所以需要通过插件进程来隔离":["37.3"],"以保证插件进程崩溃不会对浏览器和页面造成影响":["37.3"],"虽然多进程模型提升了浏览器的稳定性":["37.3"],"流畅性和安全性":["37.3"],"但同样不可避免地带来了一些":["37.3"],"问题":["37.3"],"更高的资源占用":["37.3"],"更复杂的体系架构":["37.3"],"浏览器各模块之间耦合性高":["37.3"],"扩展性差等问题":["37.3"],"会导致现在的架构已经很难适应新的需求了":["37.3"],"地址栏":["37.4"],"导航历史状态等":["37.4"],"此时标识浏览器加载状态的小圆圈":["37.4"],"从此前":["37.4"],"网络请求时的逆时针选择":["37.4"],"即将变成顺时针旋转":["37.4"],"进入正式渲染进程":["37.4"],"对文档进行页面解析和子资源加载":["37.4"],"解析html源码":["37.4"],"生成dom树":["37.4"],"解析css样式生成css":["37.4"],"tree":["37.4"],"回流":["37.4"],"重绘":["37.4"],"最后显示在屏幕中新页面显示出来":["37.4"],"宏观":["37.4"],"渲染流程":["37.4"],"http1":["37.4"],"1之后可以保持长链接":["37.4"],"渲染树":["38.0"],"是16年之前的东西了":["38.0"],"现在的代码完全重构了":["38.0"],"所以本文讲的都是":["38.0"],"新":["38.0"],"的东西":["38.0"],"dom树":["38.1"],"css文本":["38.2"],"转stylesheets":["38.2"],"属性值标准化":["38.2"],"计算每个节点具体样式":["38.2"],"创建布局树和布局计算":["38.3"],"因为它的属性包含":["38.4"],"dispaly":["38.4"],"所以这个元素也没有被包进布局树":["38.4"],"的元素会被提升为单独的一层":["38.6"],"需要剪裁":["38.6"],"内容超出容器大小":["38.6"],"的地方也会被创建为图层":["38.6"],"生成的位图被保存在":["38.8"],"内存中":["38.8"],"消息":["38.9"],"生成页面":["38.9"],"并":["38.9"],"显示":["38.9"],"到显示器上":["38.9"],"相关概念":["38.9"],"开销最大":["38.10"],"合成能大大提升绘制效率":["38.12"],"change":["38.13"],"transform":["38.13"],"做优化":["38.13"],"上了":["39.1"],"组件":["39.2"],"上进行执行":["39.2"],"是解决高性能":["39.2"],"单点故障":["39.2"],"高可用":["39.2"],"扩展性":["39.2"],"水平伸缩":["39.2"],"的终极解决方案":["39.2"],"或者它的上层服务器":["39.3"],"去要这个资源的过程":["39.3"],"dns缓存":["39.5"],"浏览器":["40.0","41.8"],"中的缓存":["40.0"],"pic1":["40.0"],"参考链接":["40.0"],"协商缓存":["40.1"],"并且缓存策略都是通过设置":["40.1"],"header":["40.1"],"后过期":["40.4"],"需要再次请求":["40.4"],"只要资源有变化":["40.5"],"etag就会重新生成":["40.5"],"的优先级高于last":["40.5"],"以时刻作为标识":["40.7"],"无法识别":["40.7"],"一秒内多次修改的情况":["40.7"],"如果资源更新的速度是秒以下的单位":["40.7"],"那么该缓存是不能被使用的":["40.7"],"因为它的时间最低单位是秒":["40.7"],"浏览器不使用缓存":["40.8"],"因此发送的请求头部均带有":["40.8"],"control":["40.8"],"no":["40.8"],"为了兼容":["40.8"],"还带了":["40.8"],"pragma":["40.8"],"服务器直接返回":["40.8"],"和最新内容":["40.8"],"connection":["41.0"],"keep":["41.0"],"alive":["41.0"],"当一个网页打开完成后":["41.0"],"客户端和服务器之间用于传输http数据的tcp连接不会关闭":["41.0"],"established":["41.1"],"代表一个打开的连接":["41.1"],"数据可以传送给用户":["41.1"],"服务器收到":["41.1"],"也处于":["41.1"],"双方建立起了":["41.1"],"tcp":["41.1"],"连接":["41.1"],"可以进行数据传输了":["41.1"],"的时候不能携带数据":["41.3"],"会导致服务端不断重发数据":["41.4"],"直到耗尽服务端的资源":["41.4"],"8s":["41.5"],"这个时候":["41.6"],"客户端需要等待足够长的时间":["41.6"],"具体来说":["41.6"],"是":["41.6"],"个":["41.6"],"msl":["41.6"],"maximum":["41.6"],"segment":["41.6"],"lifetime":["41.6"],"报文最大生存时间":["41.6"],"在这段时间内如果客户端没有收到服务端的重发请求":["41.6"],"那么表示":["41.6"],"成功到达":["41.6"],"挥手结束":["41.6"],"否则客户端重发":["41.6"],"这就是等待":["41.7"],"2msl":["41.7"],"的意义":["41.7"],"返回给本地域名服务器ldns":["41.8"],"ldns":["41.8"],"缓存":["41.8"],"这个域名和对应的ip":["41.8"],"ldns把解析的结果返回给":["41.8"],"浏览器并缓存到本地系统缓存中":["41.8"],"域名解析过程至此结束":["41.8"],"of":["42.0"],"evolution":["42.0"],"只需要返回数据就可以了":["42.1"],"第三个是返回的文件内容是以":["42.1"],"字符流来传输的":["42.1"],"因为都是":["42.1"],"格式的文件":["42.1"],"所以使用":["42.1"],"字节码来传输是最合适的":["42.1"],"基于请求头和响应头":["42.2"],"0的特点如下":["42.2"],"对":["42.2"],"多类型文件":["42.2"],"提供良好的支持":["42.2"],"告诉浏览器服务器最终处理该请求的情况":["42.2"],"请求头中加入了":["42.2"],"字段":["42.2"],"用于表示客户端的基础信息":["42.2"],"实现长连接需要客户端和服务端都支持长连接":["42.4"],"http协议的长连接和短连接":["42.4"],"实质上是tcp协议的长连接和短连接":["42.4"],"版本支持":["42.6"],"从文件的512k位置开始传输":["42.9"],"并且在http头中增加":["42.9"],"这个头表示此次传输的文件是从512k位置开始直到最后结束":["42.9"],"并且文件总大小是1024k":["42.9"],"并且此时服务端返回的http状态码应该是":["42.9"],"而不是200":["42.9"],"安全机制":["42.10"],"服务器推送":["42.11","42.12"],"头部压缩":["42.11","42.12"],"编号将帧的数据提交给对应的请求":["42.12"],"是通过在协议栈中添加":["42.12"],"二进制分帧层":["42.12"],"有了二进制分帧层还能够实现请求的":["42.12"],"优先级":["42.12"],"等特性":["42.12"],"从而大大提升了文件传输效率":["42.12"],"可以实现使用":["42.13"],"或者":["42.13"],"来建立连接":["42.13"],"这意味着":["42.13"],"可以用最快的速度来发送和接收数据":["42.13"],"这样可以大大提升首次打开页面的速度":["42.13"],"2019年9月":["42.13"],"3支持已添加到cloudflare和google":["42.13"],"chrome":["42.13"],"canary":["42.13"],"build":["42.13"],"firefox":["42.13"],"nightly在2019年秋季之后添加支持":["42.13"],"2022年6月6日":["42.13"],"ietf正式标准化http":["42.13"],"3为rfc9114":["42.13"],"解密得到这个随机数":["43.0"],"并返回确认消息":["43.0"],"到目前为止":["43.0"],"服务器和浏览器就有了共同的":["43.0"],"然后服务器和浏览器会使用这三组随机数生成":["43.0"],"对称密钥":["43.0"],"secret":["43.0"],"因为服务器和浏览器使用同一套方法来生成密钥":["43.0"],"所以最终生成的密钥也是相同的":["43.0"],"第五步":["43.0"],"采用":["43.0"],"的密钥":["43.0"],"进行数据传输":["43.0"],"首先需要获取https证书":["43.0"],"将https证书和网站域名进行绑定":["43.0"],"就可以通过https访问网站了":["43.0"],"服务不可用":["44.0"],"服务器由于维护或者负载过重未能应答":["44.0"],"网关超时":["44.0"],"由作为代理或网关的服务器使用":["44.0"],"表示不能及时地从远程服务器获得应答":["44.0"],"url是一种":["44.0"],"具体":["44.0"],"的uri":["44.0"],"它是uri的一个子集":["44.0"],"它不仅唯一标识资源":["44.0"],"而且还提供了定位该资源的信息":["44.0"],"uri":["44.0"],"是一种语义上的":["44.0"],"抽象概念":["44.0"],"可以是绝对的":["44.0"],"也可以是相对的":["44.0"],"而url则必须提供足够的信息来定位":["44.0"],"是绝对的":["44.0"],"end":["45.0","46.0","47.0","48.0","49.0","50.0","51.0","52.0","53.0","54.0","55.0","56.0","57.0","58.0","59.0","60.0","61.0","62.0","63.0","66.0","67.0","68.0","69.0","71.0","72.0","74.0","76.0","77.0","78.0","81.0","82.0","83.0","84.0","86.0","88.0","89.0","90.0","91.0","95.0","97.0","98.0","99.0","100.0","101.0","103.0","104.0","105.0","106.0","107.0","108.0","109.0","111.0","113.0","114.0","115.0","116.0","122.0","123.0","126.0","127.0","130.0","131.0","134.0","135.0","136.0","138.0","140.0","141.0","142.0","143.0","144.0","146.0","147.0","148.0","150.0","151.0","153.0","154.0","155.0","156.0","157.0","159.0","160.0","161.0","165.0","166.0","167.0","169.0","170.0","171.0","172.0","173.0","174.0","177.0","179.0","180.0","181.0"],"new":["46.0","163.0","179.0","180.0","181.0"],"下沉后的元素不参与到大顶堆的调整":["46.0"],"重新调整大顶堆":["46.0"],"你说":["54.0"],"函数是怎么把左右子树拉平的":["54.0"],"不容易说清楚":["54.0"],"但是只要知道":["54.0"],"的定义如此并利用这个定义":["54.0"],"让每一个节点做它该做的事情":["54.0"],"然后":["54.0"],"函数就会按照定义工作":["54.0"],"连接跨越父节点的两个子节点":["55.0"],"和定义逻辑自恰":["58.0"],"为根的这棵二叉树已经被翻转":["58.0"],"返回":["58.0"],"bst":["59.0"],"最左边的就是最小的":["59.0"],"利用定义":["64.0"],"计算左右子树的最大深度":["64.0"],"leftmax":["64.0"],"rightmax":["64.0"],"整棵树的最大深度等于左右子树的最大深度取最大值":["64.0"],"然后再加上根节点自己":["64.0"],"res":["64.0","90.0"],"max":["64.0","156.0"],"返回结果":["64.0"],"代表着你":["69.0"],"到什么时候可以开始":["69.0"],"为空":["69.0"],"说明算式是一个数字":["69.0"],"没有运算符":["69.0"],"parseint":["69.0"],"子问题无解":["73.0"],"跳过":["73.0"],"返回从起点跳到终点的最优解":["74.0"],"状态转移方程":["79.0"],"就是动态规划三要素":["79.0"],"的方式减少不必要的重复计算":["79.1"],"路径问题":["79.3"],"最长子序列":["79.3"],"因为最后一天卖出肯定比持有收益更高":["80.4"],"iv":["80.5"],"hard":["80.5"],"最多次数为":["80.5"],"最佳买卖股票时机含冷冻期":["80.5"],"含有交易冷冻期":["80.5"],"买卖股票的最佳时机含手续费":["80.5"],"每次交易含手续费":["80.5"],"abc":["81.0"],"def":["81.0"],"整个s的最长回文子串长度":["84.0"],"bbbab":["84.0"],"更新结果":["86.0"],"的长度是":["87.1"],"lc354":["87.2"],"俄罗斯套娃信封问题":["87.2"],"最大子数组":["87.2"],"lc53":["87.2"],"最大子数组和":["87.2"],"lc1143":["87.2"],"lc516":["87.2"],"最长回文子序列":["87.2"],"set":["90.0"],"找到下一个视频":["91.0"],"更新":["91.0"],"解题思路":["96.0"],"选择最早结束的区间":["96.0"],"sort":["102.0"],"pop":["104.0","106.0","107.0","108.0","109.0","110.8"],"撤销选择":["107.0","109.0","110.2","110.5","110.6","110.8","112.0"],"保证元素不重复":["109.0","110.2","110.5"],"是每个节点的属性":["110.0"],"函数在树上游走要正确处理节点的属性":["110.0"],"我们只要在递归之前做出选择":["110.0"],"在递归之后撤销刚才的选择":["110.0"],"就能正确得到每个节点的选择列表和路径":["110.0"],"removelast":["110.2","110.3","110.5","110.6"],"元素可重复":["110.8"],"节点":["112.0"],"离开路径":["112.0"],"插入一个":["113.0"],"大于或等于":["117.0"],"右括号的数量":["117.0"],"时间复杂度":["119.1","119.2","119.3","119.4"],"o":["119.1","119.2","119.3","119.4","119.5"],"n":["119.1","119.2","119.4","119.5","120.1"],"空间复杂度":["119.1","119.2","119.3","119.4","119.5"],"nlogn":["119.4"],"平均时间复杂度是":["119.5"],"lgn":["119.5"],"最坏情况是":["119.5"],"n2":["119.5"],"时间复杂度o":["120.1"],"这样也可以在数组中施展双指针技巧":["121.0"],"本文主要讲数组相关的":["121.0"],"双指针算法":["121.0"],"searchrange":["122.0"],"continue":["123.0"],"第三个":["125.0"],"右侧边界":["125.0"],"的最右侧索引":["125.0"],"而要收紧左侧边界以锁定右侧边界":["125.0"],"剩下一列":["127.0"],"从上到下依次添加":["127.0"],"旋转图像":["128.0"],"螺旋矩阵":["128.1"],"as":["131.0","165.0","167.0","179.0","181.0"],"such":["131.0","165.0","167.0","179.0","181.0"],"push":["134.0"],"bcabc":["134.0"],"i":["138.0"],"最长回文子串":["145.0"],"更新window中字符数":["157.0","159.0"],"如果当前窗口和需要的字符数量一致时":["157.0","159.0"],"字符种类":["157.0","159.0"],"缩小窗口":["160.0"],"如果d在需要的字符中":["160.0"],"没有找到覆盖子串返回":["160.0"],"否则返回覆盖子串":["160.0"],"递归向下继续执行":["163.0"],"module":["163.0"],"exports":["163.0"],"p":["163.0"],"对调":["164.0"],"然后删除":["164.0"],"最后让":["164.0"],"will":["165.0","181.0"],"be":["165.0","181.0"],"instantiated":["165.0","167.0","181.0"],"and":["165.0","167.0","181.0"],"called":["165.0","167.0","179.0","181.0"],"我们需要切断这个引用":["173.0"],"超过了":["175.0"],"一圈":["175.0"],"说明链表中含有环":["175.0"],"lc160":["175.0"],"判断两个单链表是否相交并找出交点":["175.0"],"逐个结点反转":["177.0"],"your":["181.0"]}]'},t={"0.0":{t:"- 前言\r",p:`
变量提升(var) ...`,l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html",a:"前言"},"0.1":{t:"关于作用域、变量提升、函数表达式、立即函数表达式的经典面试题\r",p:"var n = 1; ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#关于作用域、变量提升、函数表达式、立即函数表达式的经典面试题",a:"关于作用域、变量提升、函数表达式、立即函数表达式的经典面试题"},"0.2":{t:"变量提升带来的问题\r",p:`

变量容易在不被察 ...`,l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#变量提升带来的问题",a:"变量提升带来的问题"},"0.3":{t:"全局作用域和函数作用域\r",p:"在ES6之前，只有两 ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#全局作用域和函数作用域",a:"全局作用域和函数作用域"},"0.4":{t:"块级作用域(let，const， 暂时性死区)\r",p:"但由于变量提升带来的 ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#块级作用域-let-const-暂时性死区",a:"块级作用域-let-const-暂时性死区"},"0.5":{t:"词法作用域\r",p:"词法作用域就是指作用 ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#词法作用域",a:"词法作用域"},"0.6":{t:"栈空间和堆空间简介\r",p:`
基本数据类型用栈存 ...`,l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#栈空间和堆空间简介",a:"栈空间和堆空间简介"},"0.7":{t:"栈空间的重要作用 - 管理函数调用（创建并切换函数执行上下文）\r",p:"函数有两个主要的特性 ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#栈空间的重要作用-管理函数调用-创建并切换函数执行上下文",a:"栈空间的重要作用-管理函数调用-创建并切换函数执行上下文"},"0.8":{t:"有了栈，为什么还要堆？\r",p:"因为栈空间有一个重要 ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#有了栈-为什么还要堆",a:"有了栈-为什么还要堆"},"0.9":{t:"延迟解析：V8如何实现闭包？\r",p:"惰性解析：解析器在解 ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#延迟解析-v8如何实现闭包",a:"延迟解析-v8如何实现闭包"},"0.10":{t:"预解析器如何解决闭包给惰性解析带来的问题\r",p:"function f ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#预解析器如何解决闭包给惰性解析带来的问题",a:"预解析器如何解决闭包给惰性解析带来的问题"},"0.11":{t:"第一步：编译阶段\r",p:`
准备基础环境：包括 ...`,l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#第一步-编译阶段",a:"第一步-编译阶段"},"0.12":{t:"第二步：执行阶段\r",p:"执行阶段有以下3部分 ...",l:"Google V8/V8(1) - 变量提升，作用域、内存管理机制、闭包、如何执行JS代码.html#第二步-执行阶段",a:"第二步-执行阶段"},"1.0":{t:"- V8怎么实现回调函数的？\r",p:`
事件循环机制

宏 ...`,l:"Google V8/V8(2) - 事件循环机制.html",a:"v8怎么实现回调函数的"},"1.1":{t:"宏任务(网络请求、文件读写、setTimeout/setInterval)\r",p:"宏任务：指消息队列中 ...",l:"Google V8/V8(2) - 事件循环机制.html#宏任务-网络请求、文件读写、settimeout-setinterval",a:"宏任务-网络请求、文件读写、settimeout-setinterval"},"1.2":{t:"微任务（Promise.then(或.reject)、await下一条语句）\r",p:"引入微任务的初衷是为 ...",l:"Google V8/V8(2) - 事件循环机制.html#微任务-promise-then-或-reject-、await下一条语句",a:"微任务-promise-then-或-reject-、await下一条语句"},"1.3":{t:"nextTick\r",p:"process.ne ...",l:"Google V8/V8(2) - 事件循环机制.html#nexttick",a:"nexttick"},"1.4":{t:"宏任务和微任务的执行过程\r",p:"开始 -&gt; 取 ...",l:"Google V8/V8(2) - 事件循环机制.html#宏任务和微任务的执行过程",a:"宏任务和微任务的执行过程"},"1.5":{t:"EventLoop - 过程详解\r",p:`总结：

一开始整段 ...`,l:"Google V8/V8(2) - 事件循环机制.html#eventloop-过程详解",a:"eventloop-过程详解"},"1.6":{t:"面试问题\r",p:`

执行宏任务时，遇 ...`,l:"Google V8/V8(2) - 事件循环机制.html#面试问题",a:"面试问题"},"1.7":{t:"Promise\r",p:"Promise：将原 ...",l:"Google V8/V8(2) - 事件循环机制.html#promise",a:"promise"},"1.8":{t:"生成器Generators/ yield\r",p:"Generator函 ...",l:"Google V8/V8(2) - 事件循环机制.html#生成器generators-yield",a:"生成器generators-yield"},"1.9":{t:"async/await：异步编程的“终极”方案\r",p:"async本质上是g ...",l:"Google V8/V8(2) - 事件循环机制.html#async-await-异步编程的-终极-方案",a:"async-await-异步编程的-终极-方案"},"1.10":{t:"总结\r",p:"&lt;img sr ...",l:"Google V8/V8(2) - 事件循环机制.html#总结",a:"总结"},"2.0":{t:"- 前言\r",p:`
垃圾数据如何产生？ ...`,l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html",a:"前言"},"2.1":{t:"垃圾数据如何产生？\r",p:"无论是使用什么语言， ...",l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#垃圾数据如何产生",a:"垃圾数据如何产生"},"2.2":{t:"副垃圾回收器 - 新生代垃圾回收 - Scavenge算法\r",p:"副垃圾回收器主要负责 ...",l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#副垃圾回收器-新生代垃圾回收-scavenge算法",a:"副垃圾回收器-新生代垃圾回收-scavenge算法"},"2.3":{t:"主垃圾回收器 - 老生代垃圾回收 - 标记/清除(Mark-Sweep)算法， 标记/整理(Mark-Compact)算法\r",p:"刚刚介绍了新生代的回 ...",l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#主垃圾回收器-老生代垃圾回收-标记-清除-mark-sweep-算法-标记-整理-mark-compact-算法",a:"主垃圾回收器-老生代垃圾回收-标记-清除-mark-sweep-算法-标记-整理-mark-compact-算法"},"2.4":{t:"并行回收 - 副垃圾回收器\r",p:"并行回收，是指垃圾回 ...",l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#并行回收-副垃圾回收器",a:"并行回收-副垃圾回收器"},"2.5":{t:"增量回收\r",p:"增量式垃圾回收，是指 ...",l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#增量回收",a:"增量回收"},"2.6":{t:"并发 (concurrent) 回收\r",p:"增量回收是在主线程上 ...",l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#并发-concurrent-回收",a:"并发-concurrent-回收"},"2.7":{t:"主垃圾回收器 = 并行 + 增量 + 并发\r",p:"V8 的主垃圾回收器 ...",l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#主垃圾回收器-并行-增量-并发",a:"主垃圾回收器-并行-增量-并发"},"2.8":{t:"常见的几种内存泄露情况\r",p:`

全局变量
在非严 ...`,l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#常见的几种内存泄露情况",a:"常见的几种内存泄露情况"},"2.9":{t:"如何发现内存泄露\r",p:`参考链接


Tas ...`,l:"Google V8/V8(3) - 垃圾回收机制，内存泄露.html#如何发现内存泄露",a:"如何发现内存泄露"},"3.0":{t:"- call、apply、bind使用\r",p:`
call
appl ...`,l:"JavaScript基础/call、apply、bind、new.html",a:"call、apply、bind使用"},"3.1":{t:"call\r",p:"使用一个指定的 th ...",l:"JavaScript基础/call、apply、bind、new.html#call",a:"call"},"3.2":{t:"apply\r",p:"调用一个具有给定 t ...",l:"JavaScript基础/call、apply、bind、new.html#apply",a:"apply"},"3.3":{t:"bind\r",p:"bind() 方法将 ...",l:"JavaScript基础/call、apply、bind、new.html#bind",a:"bind"},"3.4":{t:"new生成一个对象的过程\r",p:`
创建一个空对象，从 ...`,l:"JavaScript基础/call、apply、bind、new.html#new生成一个对象的过程",a:"new生成一个对象的过程"},"3.5":{t:"手写new\r",p:"function m ...",l:"JavaScript基础/call、apply、bind、new.html#手写new",a:"手写new"},"4.0":{t:"- 解决原有语法的缺陷和不足\r",p:`
let const ...`,l:"JavaScript基础/es6新特性.html",a:"解决原有语法的缺陷和不足"},"4.1":{t:"let const\r",p:`
let：块级作用域 ...`,l:"JavaScript基础/es6新特性.html#let-const",a:"let-const"},"4.2":{t:"结构赋值\r",p:"\r",l:"JavaScript基础/es6新特性.html#结构赋值",a:"结构赋值"},"4.3":{t:"模版字符串\r",p:"let str =  ...",l:"JavaScript基础/es6新特性.html#模版字符串",a:"模版字符串"},"4.4":{t:"字符串新增方法\r",p:"\r",l:"JavaScript基础/es6新特性.html#字符串新增方法",a:"字符串新增方法"},"4.5":{t:"函数参数增强：参数默认值\r",p:"const fn = ...",l:"JavaScript基础/es6新特性.html#函数参数增强-参数默认值",a:"函数参数增强-参数默认值"},"4.6":{t:"...操作符：收起剩余数据、展开数组\r",p:`

收取剩余参数：取 ...`,l:"JavaScript基础/es6新特性.html#操作符-收起剩余数据、展开数组",a:"操作符-收起剩余数据、展开数组"},"4.7":{t:"?.可选链\r",p:"\r",l:"JavaScript基础/es6新特性.html#可选链",a:"可选链"},"4.8":{t:"箭头函数\r",p:"箭头函数没有自己的t ...",l:"JavaScript基础/es6新特性.html#箭头函数",a:"箭头函数"},"4.9":{t:"Object.assign()\r",p:"用于合并多个对象，第 ...",l:"JavaScript基础/es6新特性.html#object-assign",a:"object-assign"},"4.10":{t:"Object.is()\r",p:"判断两个值是否相等( ...",l:"JavaScript基础/es6新特性.html#object-is",a:"object-is"},"4.11":{t:"proxy\r",p:"\r",l:"JavaScript基础/es6新特性.html#proxy",a:"proxy"},"4.12":{t:"Reflect: 封装操作对象的统一API\r",p:"Reflect的目的 ...",l:"JavaScript基础/es6新特性.html#reflect-封装操作对象的统一api",a:"reflect-封装操作对象的统一api"},"4.13":{t:"用于处理异步，解决回调函数的地狱式嵌套问题\r",p:"详见《异步编程(pr ...",l:"JavaScript基础/es6新特性.html#用于处理异步-解决回调函数的地狱式嵌套问题",a:"用于处理异步-解决回调函数的地狱式嵌套问题"},"4.14":{t:"class 类\r",p:`es5写法
func ...`,l:"JavaScript基础/es6新特性.html#class-类",a:"class-类"},"4.15":{t:"Set\r",p:"类似于数组，但是成员 ...",l:"JavaScript基础/es6新特性.html#set",a:"set"},"4.16":{t:"Map\r",p:"es5中的对象key ...",l:"JavaScript基础/es6新特性.html#map",a:"map"},"4.17":{t:"Symbol新的数据结构，唯一值\r",p:"用途：防止全局对象中 ...",l:"JavaScript基础/es6新特性.html#symbol新的数据结构-唯一值",a:"symbol新的数据结构-唯一值"},"4.18":{t:"for ... of 遍历",p:"",l:"JavaScript基础/es6新特性.html#for-of-遍历",a:"for-of-遍历"},"5.0":{t:"- 原型和原型链\r",p:`
词法（静态）作用域 ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html",a:"原型和原型链"},"5.1":{t:"原型和原型链\r",p:`
参考资料：http ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#原型和原型链",a:"原型和原型链"},"5.2":{t:"词法（静态）作用域与动态作用域\r",p:`
参考链接：http ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#词法-静态-作用域与动态作用域",a:"词法-静态-作用域与动态作用域"},"5.3":{t:"什么是作用域\r",p:`
作用域是指程序源代 ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#什么是作用域",a:"什么是作用域"},"5.4":{t:"静态、动态作用域\r",p:`
词法(静态)作用域 ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#静态、动态作用域",a:"静态、动态作用域"},"5.5":{t:"执行上下文栈\r",p:`
参考链接：
htt ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#执行上下文栈",a:"执行上下文栈"},"5.6":{t:"变量对象\r",p:`变量对象会包括：

 ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#变量对象",a:"变量对象"},"5.7":{t:"作用域链\r",p:`
https://g ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#作用域链",a:"作用域链"},"5.8":{t:"从ECMAScript规范解读this\r",p:`
https://g ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#从ecmascript规范解读this",a:"从ecmascript规范解读this"},"5.9":{t:"this对象\r",p:`
this对象代表函 ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#this对象",a:"this对象"},"5.10":{t:"this绑定规则\r",p:"默认绑定、隐式绑定、 ...",l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#this绑定规则",a:"this绑定规则"},"5.11":{t:"执行上下文\r",p:`
https://g ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#执行上下文",a:"执行上下文"},"5.12":{t:"闭包\r",p:`
https://g ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#闭包",a:"闭包"},"5.13":{t:"参数按值传递\r",p:`
https://g ...`,l:"JavaScript基础/js原型(原型链)、作用域、this、执行上下文、闭包.html#参数按值传递",a:"参数按值传递"},"6.0":{t:"> 参考文章： 盘点六个阅读React源码后get到的基础知识\r",p:"\r",l:"JavaScript基础/js奇技淫巧.html",a:"参考文章-盘点六个阅读react源码后get到的基础知识"},"6.1":{t:"label语法\r",p:`
mdn：https ...`,l:"JavaScript基础/js奇技淫巧.html#label语法",a:"label语法"},"6.2":{t:"如何判断异步返回/判断Promise对象\r",p:"React官方使用的 ...",l:"JavaScript基础/js奇技淫巧.html#如何判断异步返回-判断promise对象",a:"如何判断异步返回-判断promise对象"},"6.3":{t:"类型判断\r",p:"有两个类型判断关键字 ...",l:"JavaScript基础/js奇技淫巧.html#类型判断",a:"类型判断"},"7.0":{t:"- js 数据类型\r",p:`
js 类型判断

 ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html",a:"js-数据类型"},"7.1":{t:"typeOf\r",p:"typeof 1   ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#typeof",a:"typeof"},"7.2":{t:"Object.prototype.toString.call(***)\r",p:"var number ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#object-prototype-tostring-call",a:"object-prototype-tostring-call"},"7.3":{t:"instanceof\r",p:"instanceof ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#instanceof",a:"instanceof"},"7.4":{t:"手写instanceof\r",p:"function m ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#手写instanceof",a:"手写instanceof"},"7.5":{t:"抽象方法ToPrimitive\r",p:"在介绍隐式类型转换之 ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#抽象方法toprimitive",a:"抽象方法toprimitive"},"7.6":{t:"ToPrimitive 转换为原始值的规则\r",p:`

如果Prefer ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#toprimitive-转换为原始值的规则",a:"toprimitive-转换为原始值的规则"},"7.7":{t:"`valueOf方法和toString方法解析`\r",p:"该两个方法一定在对象 ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#valueof方法和tostring方法解析",a:"valueof方法和tostring方法解析"},"7.8":{t:"String、Boolean、Number、对象之间的相互转换\r",p:"",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#string、boolean、number、对象之间的相互转换",a:"string、boolean、number、对象之间的相互转换"},"7.9":{t:" 其他类型转为字符串类型\r",p:`
null：转为&q ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#其他类型转为字符串类型",a:"其他类型转为字符串类型"},"7.10":{t:"其他类型转为Number类型\r",p:`
null：转为 0 ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#其他类型转为number类型",a:"其他类型转为number类型"},"7.11":{t:"其他类型转为Boolean类型\r",p:"只有null，und ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#其他类型转为boolean类型",a:"其他类型转为boolean类型"},"7.12":{t:"对象转为其他类型（原始类型）\r",p:`
当对象转为其他原始 ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#对象转为其他类型-原始类型",a:"对象转为其他类型-原始类型"},"7.13":{t:"隐式类型转换\r",p:`
参考链接：http ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#隐式类型转换",a:"隐式类型转换"},"7.14":{t:"数学运算符中的隐式类型转换\r",p:"",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#数学运算符中的隐式类型转换",a:"数学运算符中的隐式类型转换"},"7.15":{t:"减、乘、除\r",p:":star:我们在对 ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#减、乘、除",a:"减、乘、除"},"7.16":{t:"加法\r",p:":star:为什么加 ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#加法",a:"加法"},"7.17":{t:"逻辑语句中的类型转换\r",p:"当我们使用 if w ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#逻辑语句中的类型转换",a:"逻辑语句中的类型转换"},"7.18":{t:"单个变量\r",p:":star:如果只有 ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#单个变量",a:"单个变量"},"7.19":{t:"比较运算符\r",p:`
如果是对象，就通过 ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#比较运算符",a:"比较运算符"},"7.20":{t:"使用 == 比较中的5条规则\r",p:`

规则 1：NaN ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#使用-比较中的5条规则",a:"使用-比较中的5条规则"},"7.21":{t:"几道经典例题：\r",p:`例题一：
var a ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#几道经典例题",a:"几道经典例题"},"7.22":{t:"== 和 ===有什么区别？\r",p:`
===叫做严格相等 ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#和-有什么区别",a:"和-有什么区别"},"7.23":{t:"显示类型转换\r",p:`
参考链接：http ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#显示类型转换",a:"显示类型转换"},"7.24":{t:"ToString\r",p:"ToString负责 ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#tostring",a:"tostring"},"7.25":{t:"`String()、toString()`的基本类型值的字符串化规则：\r",p:`
null转换为'n ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#string-、tostring-的基本类型值的字符串化规则",a:"string-、tostring-的基本类型值的字符串化规则"},"7.26":{t:"JSON.stringify()\r",p:`
JSON.stri ...`,l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#json-stringify",a:"json-stringify"},"7.27":{t:"ToNumber\r",p:"ToNumber负责 ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#tonumber",a:"tonumber"},"7.28":{t:"ToBoolean\r",p:"只有null，und ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#toboolean",a:"toboolean"},"7.29":{t:"附录：类型转换表\r",p:"&lt;img sr ...",l:"JavaScript基础/js类型判断、类型转换(隐式、强制(显式)).html#附录-类型转换表",a:"附录-类型转换表"},"8.0":{t:"- 创建对象\r",p:`
工厂模式
构造函数 ...`,l:"JavaScript基础/创建对象、继承.html",a:"创建对象"},"8.1":{t:"工厂模式\r",p:"function c ...",l:"JavaScript基础/创建对象、继承.html#工厂模式",a:"工厂模式"},"8.2":{t:"构造函数模式\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#构造函数模式",a:"构造函数模式"},"8.3":{t:"原型模式\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#原型模式",a:"原型模式"},"8.4":{t:"组合模式:`构造函数模式`与`原型模式`双剑合璧\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#组合模式-构造函数模式-与-原型模式-双剑合璧",a:"组合模式-构造函数模式-与-原型模式-双剑合璧"},"8.5":{t:"动态原型模式\r",p:"\r",l:"JavaScript基础/创建对象、继承.html#动态原型模式",a:"动态原型模式"},"8.6":{t:"寄生构造函数模式\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#寄生构造函数模式",a:"寄生构造函数模式"},"8.7":{t:"稳妥构造函数模式\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#稳妥构造函数模式",a:"稳妥构造函数模式"},"8.8":{t:"原型链继承\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#原型链继承",a:"原型链继承"},"8.9":{t:"借用构造函数(经典继承)\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#借用构造函数-经典继承",a:"借用构造函数-经典继承"},"8.10":{t:"组合继承 = 原型链继承+经典继承 (JavaScript 中最常用的继承模式。)\r",p:"function P ...",l:"JavaScript基础/创建对象、继承.html#组合继承-原型链继承-经典继承-javascript-中最常用的继承模式。",a:"组合继承-原型链继承-经典继承-javascript-中最常用的继承模式。"},"8.11":{t:"原型式继承\r",p:"利用一个空对象作为中 ...",l:"JavaScript基础/创建对象、继承.html#原型式继承",a:"原型式继承"},"8.12":{t:"寄生式继承\r",p:"在原型式继承的基础上 ...",l:"JavaScript基础/创建对象、继承.html#寄生式继承",a:"寄生式继承"},"8.13":{t:"寄生组合式继承(最为推荐)\r",p:"结合借用构造函数传递 ...",l:"JavaScript基础/创建对象、继承.html#寄生组合式继承-最为推荐",a:"寄生组合式继承-最为推荐"},"8.14":{t:"ES6类继承extends\r",p:"ES6可以用过ext ...",l:"JavaScript基础/创建对象、继承.html#es6类继承extends",a:"es6类继承extends"},"8.15":{t:"混入方式继承多个对象\r",p:"混入方式继承就是一个 ...",l:"JavaScript基础/创建对象、继承.html#混入方式继承多个对象",a:"混入方式继承多个对象"},"9.0":{t:"- 前言\r",p:`
回调函数
Prom ...`,l:"JavaScript基础/异步编程(promise、generator、async,await).html",a:"前言"},"9.1":{t:"为什么Promise要引入微任务？\r",p:"Promise 中的 ...",l:"JavaScript基础/异步编程(promise、generator、async,await).html#为什么promise要引入微任务",a:"为什么promise要引入微任务"},"9.2":{t:"手写Promise\r",p:"从零实现promis ...",l:"JavaScript基础/异步编程(promise、generator、async,await).html#手写promise",a:"手写promise"},"10.0":{t:"- 深浅拷贝\r",p:`
浅拷贝
深拷贝

 ...`,l:"JavaScript基础/深浅拷贝.html",a:"深浅拷贝"},"10.1":{t:"浅拷贝\r",p:`原因：
直接将对象赋 ...`,l:"JavaScript基础/深浅拷贝.html#浅拷贝",a:"浅拷贝"},"10.2":{t:"深拷贝\r",p:`原理：
深拷贝的原理 ...`,l:"JavaScript基础/深浅拷贝.html#深拷贝",a:"深拷贝"},"10.3":{t:"for/for in\r",p:"function d ...",l:"JavaScript基础/深浅拷贝.html#for-for-in",a:"for-for-in"},"10.4":{t:"JSON.parse/stringfy\r",p:"function d ...",l:"JavaScript基础/深浅拷贝.html#json-parse-stringfy",a:"json-parse-stringfy"},"10.5":{t:"Object.assign\r",p:"Object.ass ...",l:"JavaScript基础/深浅拷贝.html#object-assign",a:"object-assign"},"10.6":{t:"解构赋值\r",p:"function d ...",l:"JavaScript基础/深浅拷贝.html#解构赋值",a:"解构赋值"},"10.7":{t:"深度优先遍历 - 递归\r",p:"为了解决循环引用的问 ...",l:"JavaScript基础/深浅拷贝.html#深度优先遍历-递归",a:"深度优先遍历-递归"},"10.8":{t:"广度优先遍历-深拷贝\r",p:"// getType ...",l:"JavaScript基础/深浅拷贝.html#广度优先遍历-深拷贝",a:"广度优先遍历-深拷贝"},"11.0":{t:"- 防抖\r",p:`
节流

参考文章
 ...`,l:"JavaScript基础/防抖、节流.html",a:"防抖"},"12.0":{t:"> 黑头发黑眼睛，我叫弯弯你记住",p:`个人信息


姓名： ...`,l:"guide.html",a:"黑头发黑眼睛-我叫弯弯你记住"},"12.1":{t:"腾讯云活动运营",p:`项目简介:
业务系统 ...`,l:"guide.html#腾讯云活动运营",a:"腾讯云活动运营"},"12.2":{t:"TCC电销系统",p:`项目简介:
公司内部 ...`,l:"guide.html#tcc电销系统",a:"tcc电销系统"},"12.3":{t:"商机线索管理系统",p:`项目简介:
品牌广告 ...`,l:"guide.html#商机线索管理系统",a:"商机线索管理系统"},"14.0":{t:"<VPTeamPage>",p:"&lt;VPTeam ...",l:"team.html",a:"vpteampage"},"15.0":{t:"- 没有ajax的时候，页面渲染过程\r",p:`
CSR - 客户端 ...`,l:"其他/前端渲染方案：CSR、SSR、SSG.html",a:"没有ajax的时候-页面渲染过程"},"15.1":{t:"没有ajax的时候，页面渲染过程\r",p:"在没有AJAX的时候 ...",l:"其他/前端渲染方案：CSR、SSR、SSG.html#没有ajax的时候-页面渲染过程",a:"没有ajax的时候-页面渲染过程"},"15.2":{t:"CSR - 客户端渲染\r",p:"有了nodejs之后 ...",l:"其他/前端渲染方案：CSR、SSR、SSG.html#csr-客户端渲染",a:"csr-客户端渲染"},"15.3":{t:"SSR - 服务端渲染\r",p:"浏览器请求URL，前 ...",l:"其他/前端渲染方案：CSR、SSR、SSG.html#ssr-服务端渲染",a:"ssr-服务端渲染"},"15.4":{t:"SSR的实现方式\r",p:"服务端渲染的实现一般 ...",l:"其他/前端渲染方案：CSR、SSR、SSG.html#ssr的实现方式",a:"ssr的实现方式"},"15.5":{t:"react 服务端渲染如何处理路由\r",p:"React 服务端渲 ...",l:"其他/前端渲染方案：CSR、SSR、SSG.html#react-服务端渲染如何处理路由",a:"react-服务端渲染如何处理路由"},"15.6":{t:"Next.js\r",p:"Next.js主要是 ...",l:"其他/前端渲染方案：CSR、SSR、SSG.html#next-js",a:"next-js"},"15.7":{t:"服务端渲染相关面试题\r",p:`
你是否了解客户端渲 ...`,l:"其他/前端渲染方案：CSR、SSR、SSG.html#服务端渲染相关面试题",a:"服务端渲染相关面试题"},"15.8":{t:"SSG - 静态页面生成\r",p:"// TODO: 待 ...",l:"其他/前端渲染方案：CSR、SSR、SSG.html#ssg-静态页面生成",a:"ssg-静态页面生成"},"16.0":{t:"- 前言\r",p:`
Hash模式

r ...`,l:"其他/单页面应用路由-hash、history模式.html",a:"前言"},"16.1":{t:"react 路由hash模式实现原理\r",p:"React 路由的  ...",l:"其他/单页面应用路由-hash、history模式.html#react-路由hash模式实现原理",a:"react-路由hash模式实现原理"},"16.2":{t:"react 路由history模式实现原理\r",p:"React Rout ...",l:"其他/单页面应用路由-hash、history模式.html#react-路由history模式实现原理",a:"react-路由history模式实现原理"},"17.0":{t:"前端安全CSRF攻击原理和防护方法",p:"前端跨域问题需不需要 ...",l:"其他/浏览器跨域、网络安全、攻击防范.html",a:"前端安全csrf攻击原理和防护方法"},"19.0":{t:"- Ajax\r",p:`
axios和fet ...`,l:"其他/网络请求axios、fetch.html",a:"ajax"},"19.1":{t:"Ajax\r",p:`\r
\r`,l:"其他/网络请求axios、fetch.html#ajax",a:"ajax"},"19.2":{t:"axios和fetch的区别\r",p:`
https://j ...`,l:"其他/网络请求axios、fetch.html#axios和fetch的区别",a:"axios和fetch的区别"},"20.0":{t:"- 前言\r",p:`
React理念
老 ...`,l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html",a:"前言"},"20.1":{t:"前言\r",p:"React入口函数， ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#前言",a:"前言"},"20.2":{t:"React理念\r",p:"React理念是：构 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#react理念",a:"react理念"},"20.3":{t:"老React架构 - React 15\r",p:"React15架构可 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#老react架构-react-15",a:"老react架构-react-15"},"20.4":{t:"新React架构 - React16\r",p:"React16架构可 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#新react架构-react16",a:"新react架构-react16"},"20.5":{t:"Scheduler（调度器）\r",p:"React实现了功能 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#scheduler-调度器",a:"scheduler-调度器"},"20.6":{t:"Reconciler（协调器）render阶段\r",p:"在React15中R ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#reconciler-协调器-render阶段",a:"reconciler-协调器-render阶段"},"20.7":{t:"Render（渲染器）commit阶段\r",p:"Renderer根据 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#render-渲染器-commit阶段",a:"render-渲染器-commit阶段"},"20.8":{t:"例子\r",p:`

假设有三个更新， ...`,l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#例子",a:"例子"},"20.9":{t:"总结 :heavy_exclamation_mark:\r",p:`
React16采用 ...`,l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#总结-heavy-exclamation-mark",a:"总结-heavy-exclamation-mark"},"20.10":{t:"React16协调器(render阶段)架构 -- Fiber\r",p:"React16协调器 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#react16协调器-render阶段-架构-fiber",a:"react16协调器-render阶段-架构-fiber"},"20.11":{t:"Fiber架构的心智模型\r",p:"代数效应：是函数式编 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#fiber架构的心智模型",a:"fiber架构的心智模型"},"20.12":{t:"Fiber的三层含义\r",p:`
架构层面，之前Re ...`,l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#fiber的三层含义",a:"fiber的三层含义"},"20.13":{t:"架构层面\r",p:"每个Fiber节点有 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#架构层面",a:"架构层面"},"20.14":{t:"作为静态的数据结构\r",p:"作为一种静态的数据结 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#作为静态的数据结构",a:"作为静态的数据结构"},"20.15":{t:"作为动态的工作单元\r",p:"作为动态的工作单元， ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#作为动态的工作单元",a:"作为动态的工作单元"},"20.16":{t:"Fiber架构的工作原理 - 双缓存 :heavy_exclamation_mark:\r",p:"\r",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#fiber架构的工作原理-双缓存-heavy-exclamation-mark",a:"fiber架构的工作原理-双缓存-heavy-exclamation-mark"},"20.17":{t:"怎么理解双缓存\r",p:"当我们用canvas ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#怎么理解双缓存",a:"怎么理解双缓存"},"20.18":{t:"Fiber架构双缓存\r",p:"React使用“双缓 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#fiber架构双缓存",a:"fiber架构双缓存"},"20.19":{t:"总结\r",p:"通过本章的学习，我们 ...",l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#总结",a:"总结"},"20.20":{t:"react源码如何调试？\r",p:`参考步骤
`,l:"前端框架/React/React核心原理/React核心原理1-理念(React15、fiber架构).html#react源码如何调试",a:"react源码如何调试"},"21.0":{t:"- 前置知识\r",p:`
Diff算法

概 ...`,l:"前端框架/React/React核心原理/React核心原理2-diff.html",a:"前置知识"},"21.1":{t:"概览\r",p:`
为了防止概念混淆， ...`,l:"前端框架/React/React核心原理/React核心原理2-diff.html#概览",a:"概览"},"21.2":{t:"Diff的瓶颈以及React如何应对\r",p:"由于Diff操作本身 ...",l:"前端框架/React/React核心原理/React核心原理2-diff.html#diff的瓶颈以及react如何应对",a:"diff的瓶颈以及react如何应对"},"21.3":{t:"Diff是如何实现的\r",p:"我们从Diff的入口 ...",l:"前端框架/React/React核心原理/React核心原理2-diff.html#diff是如何实现的",a:"diff是如何实现的"},"21.4":{t:"单节点diff\r",p:"单节点diff流程如 ...",l:"前端框架/React/React核心原理/React核心原理2-diff.html#单节点diff",a:"单节点diff"},"21.5":{t:"多节点Diff\r",p:"需要处理的情况如下： ...",l:"前端框架/React/React核心原理/React核心原理2-diff.html#多节点diff",a:"多节点diff"},"21.6":{t:"Diff思路\r",p:"在日常开发中，相较于 ...",l:"前端框架/React/React核心原理/React核心原理2-diff.html#diff思路",a:"diff思路"},"21.7":{t:"第一轮遍历\r",p:`过程如下：

let ...`,l:"前端框架/React/React核心原理/React核心原理2-diff.html#第一轮遍历",a:"第一轮遍历"},"21.8":{t:"第二轮遍历\r",p:"基于第一轮遍历结束后 ...",l:"前端框架/React/React核心原理/React核心原理2-diff.html#第二轮遍历",a:"第二轮遍历"},"21.9":{t:"分析`newChildren`与`oldFiber`都没遍历完的情况（处理移动的节点）\r",p:"由于有节点在这次更新 ...",l:"前端框架/React/React核心原理/React核心原理2-diff.html#分析-newchildren-与-oldfiber-都没遍历完的情况-处理移动的节点",a:"分析-newchildren-与-oldfiber-都没遍历完的情况-处理移动的节点"},"22.0":{t:"- React生命周期\r",p:`
专业术语解释， r ...`,l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html",a:"react生命周期"},"22.1":{t:"流程概览\r",p:"在render阶段， ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#流程概览",a:"流程概览"},"22.2":{t:"“递”阶段 -- beginWork\r",p:`
首先从rootFi ...`,l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#递-阶段-beginwork",a:"递-阶段-beginwork"},"22.3":{t:"“归”阶段 -- completeWork\r",p:`
在“归”阶段会调用 ...`,l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#归-阶段-completework",a:"归-阶段-completework"},"22.4":{t:"例子\r",p:"function A ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#例子",a:"例子"},"22.5":{t:"“递”阶段 - beginWork\r",p:`源码在此
begin ...`,l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#递-阶段-beginwork",a:"递-阶段-beginwork"},"22.6":{t:"reconcileChildren\r",p:"通过current  ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#reconcilechildren",a:"reconcilechildren"},"22.7":{t:"effectTag\r",p:"它表示，Render ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#effecttag",a:"effecttag"},"22.8":{t:"总结\r",p:"beginWork的 ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#总结",a:"总结"},"22.9":{t:'"归"阶段 - completeWork\r',p:"completeWo ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#归-阶段-completework",a:"归-阶段-completework"},"22.10":{t:"HostComponen如何处理\r",p:"我们重点关注页面渲染 ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#hostcomponen如何处理",a:"hostcomponen如何处理"},"22.11":{t:"`effectList`\r",p:`
effectTag ...`,l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#effectlist",a:"effectlist"},"22.12":{t:"总结\r",p:"completeWo ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#总结",a:"总结"},"22.13":{t:"before mutation阶段（执行DOM操作前）\r",p:"在before mu ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#before-mutation阶段-执行dom操作前",a:"before-mutation阶段-执行dom操作前"},"22.14":{t:"mutation阶段（执行DOM操作）\r",p:"mutation阶段 ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#mutation阶段-执行dom操作",a:"mutation阶段-执行dom操作"},"22.15":{t:"Placement effect\r",p:"含有Placemen ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#placement-effect",a:"placement-effect"},"22.16":{t:"Update effect\r",p:"含有Update e ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#update-effect",a:"update-effect"},"22.17":{t:"Deletion effect\r",p:"含有Deletion ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#deletion-effect",a:"deletion-effect"},"22.18":{t:"layout阶段（执行DOM操作后）\r",p:"layout阶段也会 ...",l:"前端框架/React/React核心原理/React核心原理2-架构(render,commit阶段，生命周期).html#layout阶段-执行dom操作后",a:"layout阶段-执行dom操作后"},"23.0":{t:"- 流程概览\r",p:`
心智模式（同步，并 ...`,l:"前端框架/React/React核心原理/React核心原理3-状态更新.html",a:"流程概览"},"23.1":{t:"Update的结构\r",p:"const upda ...",l:"前端框架/React/React核心原理/React核心原理3-状态更新.html#update的结构",a:"update的结构"},"23.2":{t:"Update与Fiber的联系 - updateQueue\r",p:"Update存在一个 ...",l:"前端框架/React/React核心原理/React核心原理3-状态更新.html#update与fiber的联系-updatequeue",a:"update与fiber的联系-updatequeue"},"23.3":{t:"updateQueue\r",p:"ClassCompo ...",l:"前端框架/React/React核心原理/React核心原理3-状态更新.html#updatequeue",a:"updatequeue"},"23.4":{t:"例子:star:\r",p:"假设有一个fiber ...",l:"前端框架/React/React核心原理/React核心原理3-状态更新.html#例子-star",a:"例子-star"},"23.5":{t:"如何保证Update不丢失\r",p:"在render阶段， ...",l:"前端框架/React/React核心原理/React核心原理3-状态更新.html#如何保证update不丢失",a:"如何保证update不丢失"},"23.6":{t:"如何保证状态依赖的连续性\r",p:"当某个Update由 ...",l:"前端框架/React/React核心原理/React核心原理3-状态更新.html#如何保证状态依赖的连续性",a:"如何保证状态依赖的连续性"},"24.0":{t:"- Hooks的优势\r",p:`
极简实现useSt ...`,l:"前端框架/React/React核心原理/React核心原理4-Hooks.html",a:"hooks的优势"},"24.1":{t:"useState做了什么？\r",p:"先通过以下例子，来看 ...",l:"前端框架/React/React核心原理/React核心原理4-Hooks.html#usestate做了什么",a:"usestate做了什么"},"24.2":{t:"update数据结构\r",p:"我们将更新定义成如下 ...",l:"前端框架/React/React核心原理/React核心原理4-Hooks.html#update数据结构",a:"update数据结构"},"24.3":{t:"update如何保存\r",p:"同一个Hooks的多 ...",l:"前端框架/React/React核心原理/React核心原理4-Hooks.html#update如何保存",a:"update如何保存"},"24.4":{t:"Hook数据结构\r",p:"接下来我们关注fib ...",l:"前端框架/React/React核心原理/React核心原理4-Hooks.html#hook数据结构",a:"hook数据结构"},"24.5":{t:"模拟React调度更新流程\r",p:"在上文dispatc ...",l:"前端框架/React/React核心原理/React核心原理4-Hooks.html#模拟react调度更新流程",a:"模拟react调度更新流程"},"24.6":{t:"计算state\r",p:"组件render时会 ...",l:"前端框架/React/React核心原理/React核心原理4-Hooks.html#计算state",a:"计算state"},"25.0":{t:"- 概览\r",p:`
Fiber架构
S ...`,l:"前端框架/React/React核心原理/React核心原理5-Concurrent-Mode.html",a:"概览"},"26.0":{t:"- redux\r",p:`
useReduce ...`,l:"前端框架/React/状态管理-redux,useReducer+useContext,unstated-next.html",a:"redux"},"26.1":{t:"例子：\r",p:"共享对象 代码如下： ...",l:"前端框架/React/状态管理-redux,useReducer+useContext,unstated-next.html#例子",a:"例子"},"26.2":{t:"使用\r",p:"import Rea ...",l:"前端框架/React/状态管理-redux,useReducer+useContext,unstated-next.html#使用",a:"使用"},"26.3":{t:"源码\r",p:"export fun ...",l:"前端框架/React/状态管理-redux,useReducer+useContext,unstated-next.html#源码",a:"源码"},"27.0":{t:"参考链接：\r",p:"六千字详解！vue3 ...",l:"前端框架/Vue/vue响应式原理.html",a:"参考链接"},"29.0":{t:">参考文章：浅谈前端框架原理\r",p:"\r",l:"前端框架/前端框架原理.html",a:"参考文章-浅谈前端框架原理"},"29.1":{t:"前端框架\r",p:"UI = f(sta ...",l:"前端框架/前端框架原理.html#前端框架",a:"前端框架"},"29.2":{t:"如何描述UI\r",p:`

JSX：Face ...`,l:"前端框架/前端框架原理.html#如何描述ui",a:"如何描述ui"},"29.3":{t:"数据驱动\r",p:"说的是，在数据驱动框 ...",l:"前端框架/前端框架原理.html#数据驱动",a:"数据驱动"},"29.4":{t:"前端用到的技术\r",p:"",l:"前端框架/前端框架原理.html#前端用到的技术",a:"前端用到的技术"},"29.5":{t:"响应式 \r",p:"//TODO: 待补 ...",l:"前端框架/前端框架原理.html#响应式",a:"响应式"},"29.6":{t:"Victual DOM\r",p:`Vdom的作用：

 ...`,l:"前端框架/前端框架原理.html#victual-dom",a:"victual-dom"},"29.7":{t:"AOT预编译技术\r",p:"在前端框架一般都有编 ...",l:"前端框架/前端框架原理.html#aot预编译技术",a:"aot预编译技术"},"30.0":{t:"# Webpack入门",p:"姜瑞涛：webpac ...",l:"工程化/Webpack-学习笔记.html",a:"webpack入门"},"30.1":{t:"Webpack是什么？",p:"Webpack是一个 ...",l:"工程化/Webpack-学习笔记.html#webpack是什么",a:"webpack是什么"},"30.2":{t:"快速入门",p:"现在我有三个文件，a ...",l:"工程化/Webpack-学习笔记.html#快速入门",a:"快速入门"},"30.3":{t:"webpack配置文件",p:"Webpack默认的 ...",l:"工程化/Webpack-学习笔记.html#webpack配置文件",a:"webpack配置文件"},"30.4":{t:"Webpack loader",p:"Webpack自身只 ...",l:"工程化/Webpack-学习笔记.html#webpack-loader",a:"webpack-loader"},"30.5":{t:"模块化相关的知识：",p:`
Webpack支持 ...`,l:"工程化/Webpack-学习笔记.html#模块化相关的知识",a:"模块化相关的知识"},"30.6":{t:"入口entry context：表示资源入口entry是从哪个目录为起点的。context的值是一个字符串，表示一个绝对路径。在我们没有设置context的时候，它是当前工程的根目录。",p:`
entry：它有三 ...`,l:"工程化/Webpack-学习笔记.html#入口entry-context-表示资源入口entry是从哪个目录为起点的。context的值是一个字符串-表示一个绝对路径。在我们没有设置context的时候-它是当前工程的根目录。",a:"入口entry-context-表示资源入口entry是从哪个目录为起点的。context的值是一个字符串-表示一个绝对路径。在我们没有设置context的时候-它是当前工程的根目录。"},"30.7":{t:"出口output",p:"webpack的ou ...",l:"工程化/Webpack-学习笔记.html#出口output",a:"出口output"},"30.8":{t:"filename",p:`

filename ...`,l:"工程化/Webpack-学习笔记.html#filename",a:"filename"},"30.9":{t:"path",p:"path表示资源打包 ...",l:"工程化/Webpack-学习笔记.html#path",a:"path"},"30.10":{t:"publicPath",p:"output中的pu ...",l:"工程化/Webpack-学习笔记.html#publicpath",a:"publicpath"},"30.11":{t:"hash、chunkhash和contenthash区别",p:"Webpack预处理 ...",l:"工程化/Webpack-学习笔记.html#hash、chunkhash和contenthash区别",a:"hash、chunkhash和contenthash区别"},"30.12":{t:"loader配置",p:"之前有用过两个loa ...",l:"工程化/Webpack-学习笔记.html#loader配置",a:"loader配置"},"30.13":{t:"rules其它配置",p:"除了test和use ...",l:"工程化/Webpack-学习笔记.html#rules其它配置",a:"rules其它配置"},"30.14":{t:"几个常用的loader",p:`
babel-loa ...`,l:"工程化/Webpack-学习笔记.html#几个常用的loader",a:"几个常用的loader"},"31.0":{t:"pnpm、npm、yarn\r",p:`

npm2 是通过 ...`,l:"工程化/包管理相关npm，yarn，pnpm.html",a:"pnpm、npm、yarn"},"32.0":{t:"前端项目为什么需要监控？",p:"我们可以通过监控，发 ...",l:"工程化/性能优化、监控相关.html",a:"前端项目为什么需要监控"},"33.0":{t:"- 前言",p:`
XMLHttpRe ...`,l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html",a:"前言"},"33.1":{t:"XMLHttpRequest 运作机制",p:"XMLHttpReq ...",l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#xmlhttprequest-运作机制",a:"xmlhttprequest-运作机制"},"33.2":{t:"第一步：创建 XMLHttpRequest 对象",p:"当执行到let xh ...",l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#第一步-创建-xmlhttprequest-对象",a:"第一步-创建-xmlhttprequest-对象"},"33.3":{t:"为 xhr 对象注册回调函数",p:"因为网络请求比较耗时 ...",l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#为-xhr-对象注册回调函数",a:"为-xhr-对象注册回调函数"},"33.4":{t:"配置基础的请求信息",p:"首先要通过 open ...",l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#配置基础的请求信息",a:"配置基础的请求信息"},"33.5":{t:"第四步：发起请求",p:"一切准备就绪之后，就 ...",l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#第四步-发起请求",a:"第四步-发起请求"},"33.6":{t:"XMLHttpRequest 三个重要的属性:onreadystatechange, readyState, status",p:"&lt;img sr ...",l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#xmlhttprequest-三个重要的属性-onreadystatechange-readystate-status",a:"xmlhttprequest-三个重要的属性-onreadystatechange-readystate-status"},"33.7":{t:"XMLHttpRequest 使用过程中的“坑”",p:`

跨域问题 (然如 ...`,l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#xmlhttprequest-使用过程中的-坑",a:"xmlhttprequest-使用过程中的-坑"},"33.8":{t:"Ajax 和 Axios的区别",p:`
Ajax 是基于原 ...`,l:"浏览器/web API-XMLHttpRequest，及ajax,axios,fetch之间的区别.html#ajax-和-axios的区别",a:"ajax-和-axios的区别"},"34.0":{t:"- Cookie，document.cookie\r",p:`
Cookie的参数 ...`,l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html",a:"cookie-document-cookie"},"34.1":{t:"Cookie的参数\r",p:"&lt;img sr ...",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#cookie的参数",a:"cookie的参数"},"34.2":{t:"Cookie函数\r",p:`
getCookie ...`,l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#cookie函数",a:"cookie函数"},"34.3":{t:"登录状态是如何保持的？\r",p:`
用户打开登录页面， ...`,l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#登录状态是如何保持的",a:"登录状态是如何保持的"},"34.4":{t:" ",p:"",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#",a:""},"34.5":{t:"localStorage\r",p:"localStora ...",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#localstorage",a:"localstorage"},"34.6":{t:"sessionStorage\r",p:"sessionSto ...",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#sessionstorage",a:"sessionstorage"},"34.7":{t:"Storage事件\r",p:"当 localSto ...",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#storage事件",a:"storage事件"},"34.8":{t:"session\r",p:"session的中文 ...",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#session",a:"session"},"34.9":{t:"cookie\r",p:"cookie是保存在 ...",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#cookie",a:"cookie"},"34.10":{t:"token\r",p:"token的意思是“ ...",l:"浏览器/存储-cookie、localStorage、sessionStorage、登陆保持.html#token",a:"token"},"35.0":{t:"- 系统安全\r",p:`
安全沙箱

安全沙 ...`,l:"浏览器/安全-系统安全(安全沙箱，站点隔离)、网络安全(https).html",a:"系统安全"},"35.1":{t:"安全沙箱\r",p:"由于渲染进程需要执行 ...",l:"浏览器/安全-系统安全(安全沙箱，站点隔离)、网络安全(https).html#安全沙箱",a:"安全沙箱"},"35.2":{t:"安全沙箱如何影响各个模块功能?\r",p:"我们知道安全沙箱最小 ...",l:"浏览器/安全-系统安全(安全沙箱，站点隔离)、网络安全(https).html#安全沙箱如何影响各个模块功能",a:"安全沙箱如何影响各个模块功能"},"35.3":{t:"站点隔离（Site Isolation）\r",p:"所谓站点隔离是指 C ...",l:"浏览器/安全-系统安全(安全沙箱，站点隔离)、网络安全(https).html#站点隔离-site-isolation",a:"站点隔离-site-isolation"},"35.4":{t:"安全沙箱能防止 XSS 或者 CSRF 一类的攻击的吗？\r",p:"安全沙箱是不能防止  ...",l:"浏览器/安全-系统安全(安全沙箱，站点隔离)、网络安全(https).html#安全沙箱能防止-xss-或者-csrf-一类的攻击的吗",a:"安全沙箱能防止-xss-或者-csrf-一类的攻击的吗"},"36.0":{t:"- 同源策略\r",p:`
什么是同源策略
同 ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html",a:"同源策略"},"36.1":{t:"什么是同源策略\r",p:"如果两个 URL 的 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#什么是同源策略",a:"什么是同源策略"},"36.2":{t:"同源策略对DOM层面、数据层面、网络层面的影响 -- 跨域问题\r",p:"两个不同源的页面之间 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#同源策略对dom层面、数据层面、网络层面的影响-跨域问题",a:"同源策略对dom层面、数据层面、网络层面的影响-跨域问题"},"36.3":{t:"CORS - 跨域资源共享\r",p:`
参考链接: htt ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html#cors-跨域资源共享",a:"cors-跨域资源共享"},"36.4":{t:"简单请求\r",p:`
浏览器先根据同源策 ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html#简单请求",a:"简单请求"},"36.5":{t:"非简单请求\r",p:"浏览器在发送真正的请 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#非简单请求",a:"非简单请求"},"36.6":{t:"总结\r",p:`优点：

CORS  ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html#总结",a:"总结"},"36.7":{t:"为什么CORS要有预检请求呢？\r",p:`

减少非简单跨域请 ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html#为什么cors要有预检请求呢",a:"为什么cors要有预检请求呢"},"36.8":{t:"页面中可以嵌入第三方资源 - JSONP\r",p:"最初的浏览器都是支持 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#页面中可以嵌入第三方资源-jsonp",a:"页面中可以嵌入第三方资源-jsonp"},"36.9":{t:"服务器代理\r",p:"浏览器有跨域限制，但 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#服务器代理",a:"服务器代理"},"36.10":{t:"XSS攻击\r",p:`
参考链接：http ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html#xss攻击",a:"xss攻击"},"36.11":{t:"什么是XSS攻击\r",p:"XSS 攻击是指黑客 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#什么是xss攻击",a:"什么是xss攻击"},"36.12":{t:"存储型XSS攻击\r",p:"也叫持久型XSS，主 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#存储型xss攻击",a:"存储型xss攻击"},"36.13":{t:"反射型 XSS 攻击\r",p:"反射型 XSS 一般 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#反射型-xss-攻击",a:"反射型-xss-攻击"},"36.14":{t:"基于 DOM 的 XSS 攻击\r",p:"黑客通过各种手段将恶 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#基于-dom-的-xss-攻击",a:"基于-dom-的-xss-攻击"},"36.15":{t:" 如何防范XSS攻击? CSP、HttpOnly、\r",p:"存储型 XSS 攻击 ...",l:"浏览器/安全-页面安全(跨域，网站攻击).html#如何防范xss攻击-csp、httponly、",a:"如何防范xss攻击-csp、httponly、"},"36.16":{t:"CSRF攻击\r",p:`
参考链接：http ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html#csrf攻击",a:"csrf攻击"},"36.17":{t:"如何防止CSRF攻击？SameSite等\r",p:`

充分利用好 Co ...`,l:"浏览器/安全-页面安全(跨域，网站攻击).html#如何防止csrf攻击-samesite等",a:"如何防止csrf攻击-samesite等"},"37.0":{t:"- 浏览器多进程架构\r",p:`
进程和线程
单进程 ...`,l:"浏览器/宏观(1)-多进程架构、从输入URL到展示.html",a:"浏览器多进程架构"},"37.1":{t:"进程和线程\r",p:`
多线程可以并行处理 ...`,l:"浏览器/宏观(1)-多进程架构、从输入URL到展示.html#进程和线程",a:"进程和线程"},"37.2":{t:"单进程浏览器时代\r",p:"单进程浏览器是指浏览 ...",l:"浏览器/宏观(1)-多进程架构、从输入URL到展示.html#单进程浏览器时代",a:"单进程浏览器时代"},"37.3":{t:"目前，多进程浏览器时代(浏览器进程、渲染进程、GPU进程、网络进程、插件进程)\r",p:"目前最新的Chrom ...",l:"浏览器/宏观(1)-多进程架构、从输入URL到展示.html#目前-多进程浏览器时代-浏览器进程、渲染进程、gpu进程、网络进程、插件进程",a:"目前-多进程浏览器时代-浏览器进程、渲染进程、gpu进程、网络进程、插件进程"},"37.4":{t:"未来，面向服务的架构\r",p:"2016年，Chro ...",l:"浏览器/宏观(1)-多进程架构、从输入URL到展示.html#未来-面向服务的架构",a:"未来-面向服务的架构"},"38.0":{t:"- 渲染流程\r",p:`
构建DOM树
样式 ...`,l:"浏览器/宏观(2)-渲染流程.html",a:"渲染流程"},"38.1":{t:"构建DOM树\r",p:"这是因为浏览器无法直 ...",l:"浏览器/宏观(2)-渲染流程.html#构建dom树",a:"构建dom树"},"38.2":{t:"样式计算\r",p:"css样式来源有三种 ...",l:"浏览器/宏观(2)-渲染流程.html#样式计算",a:"样式计算"},"38.3":{t:"布局阶段\r",p:"有了 DOM 树和  ...",l:"浏览器/宏观(2)-渲染流程.html#布局阶段",a:"布局阶段"},"38.4":{t:"创建布局树\r",p:"DOM 树还含有很多 ...",l:"浏览器/宏观(2)-渲染流程.html#创建布局树",a:"创建布局树"},"38.5":{t:"布局计算\r",p:"现在我们有了一棵完整 ...",l:"浏览器/宏观(2)-渲染流程.html#布局计算",a:"布局计算"},"38.6":{t:"分层\r",p:"现在我们有了布局树， ...",l:"浏览器/宏观(2)-渲染流程.html#分层",a:"分层"},"38.7":{t:"图层绘制\r",p:"渲染引擎会把一个图层 ...",l:"浏览器/宏观(2)-渲染流程.html#图层绘制",a:"图层绘制"},"38.8":{t:"栅格化（raster）操作\r",p:"绘制列表只是用来记录 ...",l:"浏览器/宏观(2)-渲染流程.html#栅格化-raster-操作",a:"栅格化-raster-操作"},"38.9":{t:"合成和显示\r",p:"一旦所有图块都被光栅 ...",l:"浏览器/宏观(2)-渲染流程.html#合成和显示",a:"合成和显示"},"38.10":{t:"重排（更新了元素的几何属性）\r",p:`
更新了元素的几何属 ...`,l:"浏览器/宏观(2)-渲染流程.html#重排-更新了元素的几何属性",a:"重排-更新了元素的几何属性"},"38.11":{t:"重绘（更新元素的绘制属）\r",p:`
更新元素的绘制属性 ...`,l:"浏览器/宏观(2)-渲染流程.html#重绘-更新元素的绘制属",a:"重绘-更新元素的绘制属"},"38.12":{t:"合成\r",p:"如果你更改一个既不要 ...",l:"浏览器/宏观(2)-渲染流程.html#合成",a:"合成"},"38.13":{t:"如何减少重排和重绘？\r",p:`
使用 class  ...`,l:"浏览器/宏观(2)-渲染流程.html#如何减少重排和重绘",a:"如何减少重排和重绘"},"39.0":{t:"- CDN缓存\r",p:`
cdn是什么？
c ...`,l:"浏览器/缓存-DNS、CDN.html",a:"cdn缓存"},"39.1":{t:"cdn是什么？\r",p:"cdn是内容分发网络 ...",l:"浏览器/缓存-DNS、CDN.html#cdn是什么",a:"cdn是什么"},"39.2":{t:"cdn原理（过程）\r",p:"&lt;img sr ...",l:"浏览器/缓存-DNS、CDN.html#cdn原理-过程",a:"cdn原理-过程"},"39.3":{t:"cdn缓存基本原理\r",p:"CDN 的基本原理是 ...",l:"浏览器/缓存-DNS、CDN.html#cdn缓存基本原理",a:"cdn缓存基本原理"},"39.4":{t:"cdn缓存策略\r",p:"CDN边缘节点缓存策 ...",l:"浏览器/缓存-DNS、CDN.html#cdn缓存策略",a:"cdn缓存策略"},"39.5":{t:"CDN缓存应用场景\r",p:`
CDN 往往被用来 ...`,l:"浏览器/缓存-DNS、CDN.html#cdn缓存应用场景",a:"cdn缓存应用场景"},"39.6":{t:"DNS是什么？\r",p:"通俗一点，DNS其实 ...",l:"浏览器/缓存-DNS、CDN.html#dns是什么",a:"dns是什么"},"40.0":{t:"- 前言 - Web缓存知识体系\r",p:`
缓存位置
浏览器缓 ...`,l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html",a:"前言-web缓存知识体系"},"40.1":{t:"缓存位置\r",p:"从缓存位置上来说分为 ...",l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#缓存位置",a:"缓存位置"},"40.2":{t:"浏览器缓存过程\r",p:`

浏览器每次拿到返 ...`,l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#浏览器缓存过程",a:"浏览器缓存过程"},"40.3":{t:"缓存机制\r",p:`

强缓存优先于协商 ...`,l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#缓存机制",a:"缓存机制"},"40.4":{t:"http 头：Expires\r",p:"Expires是一个 ...",l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#http-头-expires",a:"http-头-expires"},"40.5":{t:"http 头：Cache-Control\r",p:"Cache-Cont ...",l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#http-头-cache-control",a:"http-头-cache-control"},"40.6":{t:"协商缓存过程(相关状态码：304/200)\r",p:"使用协商缓存有两种情 ...",l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#协商缓存过程-相关状态码-304-200",a:"协商缓存过程-相关状态码-304-200"},"40.7":{t:"http 头：Last-Modified／If-Modified-since(http 1.0)\r",p:`

服务器通过 La ...`,l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#http-头-last-modified-if-modified-since-http-1-0",a:"http-头-last-modified-if-modified-since-http-1-0"},"40.8":{t:"http 头：Etag/If-None-match(http 1.1)\r",p:"为了解决上述问题，出 ...",l:"浏览器/缓存-浏览器(http)缓存(强缓存，协商缓存).html#http-头-etag-if-none-match-http-1-1",a:"http-头-etag-if-none-match-http-1-1"},"41.0":{t:"- 计算机网络体系\r",p:`
TCP协议

三次 ...`,l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html",a:"计算机网络体系"},"41.1":{t:"三次握手\r",p:"三次握手，建立连接过 ...",l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#三次握手",a:"三次握手"},"41.2":{t:"为什么要三次握手？\r",p:"三次握手的目的是建立 ...",l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#为什么要三次握手",a:"为什么要三次握手"},"41.3":{t:"三次握手过程中可以携带数据吗？\r",p:"第三次握手的时候，是 ...",l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#三次握手过程中可以携带数据吗",a:"三次握手过程中可以携带数据吗"},"41.4":{t:"SYN 洪泛攻击\r",p:"SYN Flood  ...",l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#syn-洪泛攻击",a:"syn-洪泛攻击"},"41.5":{t:"如果第三次握手丢失了，客户端服务端会如何处理\r",p:"服务器发送完 SYN ...",l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#如果第三次握手丢失了-客户端服务端会如何处理",a:"如果第三次握手丢失了-客户端服务端会如何处理"},"41.6":{t:"四次挥手\r",p:"四次挥手，关闭连接过 ...",l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#四次挥手",a:"四次挥手"},"41.7":{t:"等待2MSL的意义\r",p:`如果不等待会怎样？
 ...`,l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#等待2msl的意义",a:"等待2msl的意义"},"41.8":{t:"为什么是4次挥手\r",p:"任何一方都可以在数据 ...",l:"浏览器/网络(1)-TCP协议，DNS解析(域名解析).html#为什么是4次挥手",a:"为什么是4次挥手"},"42.0":{t:"- HTTP/1\r",p:`
HTTP/0.9  ...`,l:"浏览器/网络(2)-http1、2、3.html",a:"http-1"},"42.1":{t:"HTTP/0.9 - 单行协议\r",p:"HTTP/0.9 是 ...",l:"浏览器/网络(2)-http1、2、3.html#http-0-9-单行协议",a:"http-0-9-单行协议"},"42.2":{t:"HTTP/1.0 - 构建可扩展性（多文件，状态码，用户代理）\r",p:"随着万维网的发展，在 ...",l:"浏览器/网络(2)-http1、2、3.html#http-1-0-构建可扩展性-多文件-状态码-用户代理",a:"http-1-0-构建可扩展性-多文件-状态码-用户代理"},"42.3":{t:"HTTP1.1 - 标准化协议\r",p:"",l:"浏览器/网络(2)-http1、2、3.html#http1-1-标准化协议",a:"http1-1-标准化协议"},"42.4":{t:"长链接\r",p:"长链接是指，在一个  ...",l:"浏览器/网络(2)-http1、2、3.html#长链接",a:"长链接"},"42.5":{t:"管线化（并发连接 + 域名分片）\r",p:"允许在第一个应答被完 ...",l:"浏览器/网络(2)-http1、2、3.html#管线化-并发连接-域名分片",a:"管线化-并发连接-域名分片"},"42.6":{t:"管线化\r",p:`
在使用持久连接的情 ...`,l:"浏览器/网络(2)-http1、2、3.html#管线化",a:"管线化"},"42.7":{t:"提供虚拟主机的支持 - host请求头\r",p:"HTTP/1.1 的 ...",l:"浏览器/网络(2)-http1、2、3.html#提供虚拟主机的支持-host请求头",a:"提供虚拟主机的支持-host请求头"},"42.8":{t:"支持响应分块 - 断点续传\r",p:"引入 Chunk t ...",l:"浏览器/网络(2)-http1、2、3.html#支持响应分块-断点续传",a:"支持响应分块-断点续传"},"42.9":{t:"断点续传\r",p:"断点续传就是从文件上 ...",l:"浏览器/网络(2)-http1、2、3.html#断点续传",a:"断点续传"},"42.10":{t:"以及其他HTTP/1.1特性（内容协商，缓存，cookie安全机制）\r",p:`
引入内容协商机制， ...`,l:"浏览器/网络(2)-http1、2、3.html#以及其他http-1-1特性-内容协商-缓存-cookie安全机制",a:"以及其他http-1-1特性-内容协商-缓存-cookie安全机制"},"42.11":{t:"HTTP/1.1的瓶颈\r",p:`由于

TCP的慢启 ...`,l:"浏览器/网络(2)-http1、2、3.html#http-1-1的瓶颈",a:"http-1-1的瓶颈"},"42.12":{t:"二进制分帧 + 多路复用\r",p:"队头阻塞，其根本原因 ...",l:"浏览器/网络(2)-http1、2、3.html#二进制分帧-多路复用",a:"二进制分帧-多路复用"},"42.13":{t:"HTTP/2.0其他特性：设置请求优先级、服务器推送、头部压缩\r",p:`
可以设置请求的优先 ...`,l:"浏览器/网络(2)-http1、2、3.html#http-2-0其他特性-设置请求优先级、服务器推送、头部压缩",a:"http-2-0其他特性-设置请求优先级、服务器推送、头部压缩"},"43.0":{t:"- 什么是HTTPS协议\r",p:`
SSL/TLS
h ...`,l:"浏览器/网络(3)-https.html",a:"什么是https协议"},"44.0":{t:"- HTTP各种请求方法\r",p:`
GET和POST有 ...`,l:"浏览器/网络(4)-http协议相关知识.html",a:"http各种请求方法"},"45.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/112.路径总和.html",a:"javascript"},"46.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/215.数组中的第k个最大元素.html",a:"javascript"},"47.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/100.相同的树.html",a:"javascript"},"48.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/101.对称二叉树.html",a:"javascript"},"49.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/104.二叉树的最大深度.html",a:"javascript"},"50.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/108.将有序数组转换为二叉搜索树.html",a:"javascript"},"51.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/110.平衡二叉树.html",a:"javascript"},"52.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/111.二叉树的最小深度.html",a:"javascript"},"53.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/112.路径总和.html",a:"javascript"},"54.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/114.二叉树展开为链表.html",a:"javascript"},"55.0":{t:"把一棵二叉树被抽象成了一棵三叉树，三叉树上的每个节点就是原先二叉树的两个相邻节点。",p:"&lt;img sr ...",l:"算法/二叉树/116.填充每个节点的下一个右侧节点指针.html",a:"把一棵二叉树被抽象成了一棵三叉树-三叉树上的每个节点就是原先二叉树的两个相邻节点。"},"56.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/144.二叉树的前序遍历.html",a:"javascript"},"57.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/145.二叉树的后序遍历.html",a:"javascript"},"58.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/226.翻转二叉树.html",a:"javascript"},"59.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/450.删除二叉搜索树中的节点.html",a:"javascript"},"60.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/700.二叉搜索树中的搜索.html",a:"javascript"},"61.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/701.二叉搜索树中的插入操作.html",a:"javascript"},"62.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/94.二叉树的中序遍历.html",a:"javascript"},"63.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/二叉树/98.验证二叉搜索树.html",a:"javascript"},"64.0":{t:"技巧：二叉树系列问题只要思考**每个节点需要做什么，而不要思考整棵树需要做什么**。\r",p:"二叉树，前、后、中序 ...",l:"算法/二叉树/index.html",a:"技巧-二叉树系列问题只要思考-每个节点需要做什么-而不要思考整棵树需要做什么-。"},"65.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/其他/1630.等差子数组.html",a:"javascript"},"66.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/其他/204.计数质数.html",a:"javascript"},"67.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/其他/238.除自身以外数组的乘积.html",a:"javascript"},"68.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/其他/43.字符串相乘.html",a:"javascript"},"69.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/分治算法/241.为运算表达式设计优先级.html",a:"javascript"},"70.0":{t:"```javascript",p:`/**

只要我先把 ...`,l:"算法/分治算法/归并排序.html",a:"javascript"},"71.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/120.三角形最小路径和.html",a:"javascript"},"72.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/279.完全平方数.html",a:"javascript"},"73.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/322.零钱兑换.html",a:"javascript"},"74.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/45.跳跃游戏-ii.html",a:"javascript"},"75.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/509.斐波那契数.html",a:"javascript"},"76.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/62.不同路径.html",a:"javascript"},"77.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/63.不同路径-ii.html",a:"javascript"},"78.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/70.爬楼梯.html",a:"javascript"},"79.0":{t:"什么是动态规划\r",p:"动态规划，英文：Dy ...",l:"算法/动态规划/index.html",a:"什么是动态规划"},"79.1":{t:"动态规划和其他算法的区别\r",p:`
动态规划和分治的区 ...`,l:"算法/动态规划/index.html#动态规划和其他算法的区别",a:"动态规划和其他算法的区别"},"79.2":{t:"动态规划的解题方法\r",p:`
递归+记忆化(自顶 ...`,l:"算法/动态规划/index.html#动态规划的解题方法",a:"动态规划的解题方法"},"79.3":{t:"解动态规划题目的步骤\r",p:`
根据重叠子问题定义 ...`,l:"算法/动态规划/index.html#解动态规划题目的步骤",a:"解动态规划题目的步骤"},"80.0":{t:'<img src="./picture/stock.png" width=70%/>\r',p:"\r",l:"算法/动态规划/买卖股票系列问题/index.html",a:"img-src-picture-stock-png-width-70"},"80.1":{t:"限制条件\r",p:`
先买入才能卖出
不 ...`,l:"算法/动态规划/买卖股票系列问题/index.html#限制条件",a:"限制条件"},"80.2":{t:"定义操作\r",p:`
买入
卖出
不操作 ...`,l:"算法/动态规划/买卖股票系列问题/index.html#定义操作",a:"定义操作"},"80.3":{t:"定义状态\r",p:`
i: 天数
k:  ...`,l:"算法/动态规划/买卖股票系列问题/index.html#定义状态",a:"定义状态"},"80.4":{t:"举例\r",p:"  dp[i][k] ...",l:"算法/动态规划/买卖股票系列问题/index.html#举例",a:"举例"},"80.5":{t:"状态转移方程\r",p:"// 今天没有持有股 ...",l:"算法/动态规划/买卖股票系列问题/index.html#状态转移方程",a:"状态转移方程"},"81.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/子序列类问题/1143.最长公共子序列.html",a:"javascript"},"82.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/子序列类问题/300.最长递增子序列.html",a:"javascript"},"83.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/子序列类问题/354.俄罗斯套娃信封问题.html",a:"javascript"},"84.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/子序列类问题/516.最长回文子序列.html",a:"javascript"},"85.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/子序列类问题/53.最大子数组和.html",a:"javascript"},"86.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/子序列类问题/647.回文子串.html",a:"javascript"},"87.0":{t:"- 子序列问题解题模版\r",p:`
第一种思路，一维d ...`,l:"算法/动态规划/子序列类问题/index.html",a:"子序列问题解题模版"},"87.1":{t:"第一种思路，一维dp数组\r",p:"let n = ar ...",l:"算法/动态规划/子序列类问题/index.html#第一种思路-一维dp数组",a:"第一种思路-一维dp数组"},"87.2":{t:"第二种思路，二维dp数组\r",p:"let n = ar ...",l:"算法/动态规划/子序列类问题/index.html#第二种思路-二维dp数组",a:"第二种思路-二维dp数组"},"88.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/打家劫舍问题/198.打家劫舍.html",a:"javascript"},"89.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/打家劫舍问题/213.打家劫舍-ii.html",a:"javascript"},"90.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/打家劫舍问题/337.打家劫舍-iii.html",a:"javascript"},"91.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/贪心算法/1024.视频拼接.html",a:"javascript"},"92.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/贪心算法/435.无重叠区间.html",a:"javascript"},"93.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/贪心算法/45.跳跃游戏-ii.html",a:"javascript"},"94.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/贪心算法/452.用最少数量的箭引爆气球.html",a:"javascript"},"95.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/贪心算法/55.跳跃游戏.html",a:"javascript"},"96.0":{t:"贪心类型问题\r",p:"贪心算法可以认为是动 ...",l:"算法/动态规划/贪心算法/index.html",a:"贪心类型问题"},"97.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/路径类问题/120.三角形最小路径和.html",a:"javascript"},"98.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/路径类问题/62.不同路径.html",a:"javascript"},"99.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/路径类问题/63.不同路径-ii.html",a:"javascript"},"100.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/路径类问题/64.最小路径和.html",a:"javascript"},"101.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/路径类问题/70.爬楼梯.html",a:"javascript"},"102.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/动态规划/路径类问题/931.下降路径最小和.html",a:"javascript"},"103.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/回溯算法(DFS深度优先遍历)/22.括号生成.html",a:"javascript"},"104.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/回溯算法(DFS深度优先遍历)/39.组合总和.html",a:"javascript"},"105.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/回溯算法(DFS深度优先遍历)/46.全排列.html",a:"javascript"},"106.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/回溯算法(DFS深度优先遍历)/47.全排列-ii.html",a:"javascript"},"107.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/回溯算法(DFS深度优先遍历)/77.组合.html",a:"javascript"},"108.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/回溯算法(DFS深度优先遍历)/78.子集.html",a:"javascript"},"109.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/回溯算法(DFS深度优先遍历)/90.子集-ii.html",a:"javascript"},"110.0":{t:"- 总起\r",p:`
例子
排列-组合- ...`,l:"算法/回溯算法(DFS深度优先遍历)/index.html",a:"总起"},"110.1":{t:"元素无重,不可复选\r",p:"即 nums 中的元 ...",l:"算法/回溯算法(DFS深度优先遍历)/index.html#元素无重-不可复选",a:"元素无重-不可复选"},"110.2":{t:"子集/组合（元素无重,不可复选）\r",p:`
子集
组合

算法 ...`,l:"算法/回溯算法(DFS深度优先遍历)/index.html#子集-组合-元素无重-不可复选",a:"子集-组合-元素无重-不可复选"},"110.3":{t:"排列（元素无重,不可复选）\r",p:`
全排列

算法框架 ...`,l:"算法/回溯算法(DFS深度优先遍历)/index.html#排列-元素无重-不可复选",a:"排列-元素无重-不可复选"},"110.4":{t:"元素可重,不可复选\r",p:"即 nums 中的元 ...",l:"算法/回溯算法(DFS深度优先遍历)/index.html#元素可重-不可复选",a:"元素可重-不可复选"},"110.5":{t:"子集/组合（元素可重,不可复选）\r",p:`
组合总和 II
子 ...`,l:"算法/回溯算法(DFS深度优先遍历)/index.html#子集-组合-元素可重-不可复选",a:"子集-组合-元素可重-不可复选"},"110.6":{t:"排列（元素可重,不可复选）\r",p:`
全排列 II

算 ...`,l:"算法/回溯算法(DFS深度优先遍历)/index.html#排列-元素可重-不可复选",a:"排列-元素可重-不可复选"},"110.7":{t:"元素无重,可复选\r",p:"即 nums 中的元 ...",l:"算法/回溯算法(DFS深度优先遍历)/index.html#元素无重-可复选",a:"元素无重-可复选"},"110.8":{t:"子集/组合（元素无重,可复选）\r",p:`
组合总和

算法框 ...`,l:"算法/回溯算法(DFS深度优先遍历)/index.html#子集-组合-元素无重-可复选",a:"子集-组合-元素无重-可复选"},"110.9":{t:"排列（元素无重,可复选）\r",p:"leetcode中没 ...",l:"算法/回溯算法(DFS深度优先遍历)/index.html#排列-元素无重-可复选",a:"排列-元素无重-可复选"},"111.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/图论/797.所有可能的路径.html",a:"javascript"},"112.0":{t:"图节点的逻辑结构如下：\r",p:"class Vert ...",l:"算法/图论/index.html",a:"图节点的逻辑结构如下"},"113.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/括号相关的问题/1541.平衡括号字符串的最少插入次数.html",a:"javascript"},"114.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/括号相关的问题/20.有效的括号.html",a:"javascript"},"115.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/括号相关的问题/22.括号生成.html",a:"javascript"},"116.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/括号相关的问题/921.使括号有效的最少添加.html",a:"javascript"},"117.0":{t:"有关括号问题，有以下性质：\r",p:`

一个「合法」括号 ...`,l:"算法/括号相关的问题/index.html",a:"有关括号问题-有以下性质"},"118.0":{t:"```javascript",p:"var binary ...",l:"算法/排序、查找算法/test.html",a:"javascript"},"119.0":{t:"- 插入法排序\r",p:`
冒泡排序
选择排序 ...`,l:"算法/排序、查找算法/排序算法.html",a:"插入法排序"},"119.1":{t:"插入法排序\r",p:"它通过构建有序序列， ...",l:"算法/排序、查找算法/排序算法.html#插入法排序",a:"插入法排序"},"119.2":{t:"冒泡排序\r",p:"&lt;img sr ...",l:"算法/排序、查找算法/排序算法.html#冒泡排序",a:"冒泡排序"},"119.3":{t:"选择排序\r",p:"&lt;img sr ...",l:"算法/排序、查找算法/排序算法.html#选择排序",a:"选择排序"},"119.4":{t:"归并排序\r",p:"&lt;img sr ...",l:"算法/排序、查找算法/排序算法.html#归并排序",a:"归并排序"},"119.5":{t:"快速排序\r",p:`视频讲解

在数组中 ...`,l:"算法/排序、查找算法/排序算法.html#快速排序",a:"快速排序"},"119.6":{t:"计数排序\r",p:"",l:"算法/排序、查找算法/排序算法.html#计数排序",a:"计数排序"},"119.7":{t:"基数排序\r",p:"",l:"算法/排序、查找算法/排序算法.html#基数排序",a:"基数排序"},"119.8":{t:"堆排序",p:"",l:"算法/排序、查找算法/排序算法.html#堆排序",a:"堆排序"},"120.0":{t:"- 顺序查找\r",p:`
二分查找
插值查找 ...`,l:"算法/排序、查找算法/查找算法.html",a:"顺序查找"},"120.1":{t:"顺序查找\r",p:"function S ...",l:"算法/排序、查找算法/查找算法.html#顺序查找",a:"顺序查找"},"120.2":{t:"二分查找\r",p:`
元素必须是有序的。 ...`,l:"算法/排序、查找算法/查找算法.html#二分查找",a:"二分查找"},"120.3":{t:"插值查找\r",p:"",l:"算法/排序、查找算法/查找算法.html#插值查找",a:"插值查找"},"120.4":{t:"树表查找——二叉查找树",p:"",l:"算法/排序、查找算法/查找算法.html#树表查找——二叉查找树",a:"树表查找——二叉查找树"},"121.0":{t:"在处理数组和链表相关问题时，双指针技巧是经常用到的，双指针技巧主要分为两类：**左右指针和快慢指针**。",p:`
所谓左右指针，就是 ...`,l:"算法/数组/index.html",a:"在处理数组和链表相关问题时-双指针技巧是经常用到的-双指针技巧主要分为两类-左右指针和快慢指针-。"},"122.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/二分搜索/34.在排序数组中查找元素的第一个和最后一个位置.html",a:"javascript"},"123.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/二分搜索/35.搜索插入位置.html",a:"javascript"},"124.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/二分搜索/704.二分查找.html",a:"javascript"},"125.0":{t:"二分查找常用场景：寻找一个数、寻找左侧边界、寻找右侧边界。\r",p:`二分查找算法框架：
 ...`,l:"算法/数组/二分搜索/index.html",a:"二分查找常用场景-寻找一个数、寻找左侧边界、寻找右侧边界。"},"126.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/二维数组花式遍历技巧/48.旋转图像.html",a:"javascript"},"127.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/二维数组花式遍历技巧/54.螺旋矩阵.html",a:"javascript"},"128.0":{t:"顺/逆时针旋转矩阵",p:`解题思路：
(以顺时 ...`,l:"算法/数组/二维数组花式遍历技巧/index.html",a:"顺-逆时针旋转矩阵"},"128.1":{t:"矩阵的螺旋遍历",p:`思路：
&lt;im ...`,l:"算法/数组/二维数组花式遍历技巧/index.html#矩阵的螺旋遍历",a:"矩阵的螺旋遍历"},"129.0":{t:"```javascript",p:`/**


@par ...`,l:"算法/数组/前缀和/2389.和有限的最长子序列.html",a:"javascript"},"130.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/前缀和/303.区域和检索-数组不可变.html",a:"javascript"},"131.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/前缀和/304.二维区域和检索-矩阵不可变.html",a:"javascript"},"132.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/前缀和/53.最大子数组和.html",a:"javascript"},"133.0":{t:"**前缀和**技巧适用于快速、频繁地计算一个**索引区间内的元素之和**。\r",p:"前缀和主要适用的场景 ...",l:"算法/数组/前缀和/index.html",a:"前缀和-技巧适用于快速、频繁地计算一个-索引区间内的元素之和-。"},"134.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/去重/316.去除重复字母.html",a:"javascript"},"135.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/11.盛最多水的容器.html",a:"javascript"},"136.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/15.三数之和.html",a:"javascript"},"137.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/16.最接近的三数之和.html",a:"javascript"},"138.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/876.链表的中间结点.html",a:"javascript"},"139.0":{t:"双指针技巧秒杀七道数组题目\r",p:`
普通指针: 两指针 ...`,l:"算法/数组/双指针/index.html",a:"双指针技巧秒杀七道数组题目"},"140.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/左右指针/1574.删除最短的子数组使剩余数组有序.html",a:"javascript"},"141.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/左右指针/167.两数之和-ii-输入有序数组.html",a:"javascript"},"142.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/左右指针/344.反转字符串.html",a:"javascript"},"143.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/左右指针/5.最长回文子串.html",a:"javascript"},"144.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/左右指针/647.回文子串.html",a:"javascript"},"145.0":{t:"左右指针的常用算法有：\r",p:`
二分查找

参考链 ...`,l:"算法/数组/双指针/左右指针/index.html",a:"左右指针的常用算法有"},"146.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/快慢指针/26.删除有序数组中的重复项.html",a:"javascript"},"147.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/快慢指针/27.移除元素.html",a:"javascript"},"148.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/双指针/快慢指针/283.移动零.html",a:"javascript"},"149.0":{t:"数组问题中比较常见的快慢指针技巧，是让你**原地**修改数组。\r",p:"除了让你在有序数组/ ...",l:"算法/数组/双指针/快慢指针/index.html",a:"数组问题中比较常见的快慢指针技巧-是让你-原地-修改数组。"},"150.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/差分数组/1094.拼车.html",a:"javascript"},"151.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/差分数组/1109.航班预订统计.html",a:"javascript"},"152.0":{t:"**差分数组**的主要适用场景是频繁对原始数组的某个区间的**元素**进行增减\r",p:"常规的思路很容易，你 ...",l:"算法/数组/差分数组/index.html",a:"差分数组-的主要适用场景是频繁对原始数组的某个区间的-元素-进行增减"},"153.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/滑动窗口/1004.最大连续-1-的个数-iii.html",a:"javascript"},"154.0":{t:"```javascript",p:`/*


@lc a ...`,l:"算法/数组/滑动窗口/1456.定长子串中元音的最大数目.html",a:"javascript"},"155.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/滑动窗口/219.存在重复元素-ii.html",a:"javascript"},"156.0":{t:"```javascript",p:`/*


@lc a ...`,l:"算法/数组/滑动窗口/3.无重复字符的最长子串.html",a:"javascript"},"157.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/滑动窗口/438.找到字符串中所有字母异位词.html",a:"javascript"},"158.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/滑动窗口/53.最大子数组和.html",a:"javascript"},"159.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/滑动窗口/567.字符串的排列.html",a:"javascript"},"160.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/滑动窗口/76.最小覆盖子串.html",a:"javascript"},"161.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/数组/滑动窗口/904.水果成篮.html",a:"javascript"},"162.0":{t:">参考链接：https://labuladong.github.io/algo/di-ling-zh-bfe1b/wo-xie-le--f02cd/",p:"滑动窗口算法的思路非 ...",l:"算法/数组/滑动窗口/index.html",a:"参考链接-https-labuladong-github-io-algo-di-ling-zh-bfe1b-wo-xie-le-f02cd"},"163.0":{t:"```javascript",p:`/**

最大堆
* ...`,l:"算法/最大堆/MaxHeap.html",a:"javascript"},"164.0":{t:"`最大堆`: 本质上是个完全二叉树，只不过存储在数组里。一般的链表二叉树，我们操作节点的指针，而在数组里，我们把数组索引作为指针。",p:"且每个节点都大于等于 ...",l:"算法/最大堆/最大堆.html",a:"最大堆-本质上是个完全二叉树-只不过存储在数组里。一般的链表二叉树-我们操作节点的指针-而在数组里-我们把数组索引作为指针。"},"165.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/设计数据结构/146.lru-缓存.html",a:"javascript"},"166.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/设计数据结构/239.滑动窗口最大值(单调队列).html",a:"javascript"},"167.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/设计数据结构/380.o-1-时间插入、删除和获取随机元素.html",a:"javascript"},"168.0":{t:"栈（stack）是很简单的一种数据结构，先进后出的逻辑顺序，符合某些问题的特点",p:"比如说函数调用栈。单 ...",l:"算法/设计数据结构/单调栈/index.html",a:"栈-stack-是很简单的一种数据结构-先进后出的逻辑顺序-符合某些问题的特点"},"169.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/链表/双指针技巧 - 单链表/141.环形链表.html",a:"javascript"},"170.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/链表/双指针技巧 - 单链表/160.相交链表.html",a:"javascript"},"171.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/链表/双指针技巧 - 单链表/21.合并两个有序链表.html",a:"javascript"},"172.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/链表/双指针技巧 - 单链表/83.删除排序链表中的重复元素.html",a:"javascript"},"173.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/链表/双指针技巧 - 单链表/86.分隔链表.html",a:"javascript"},"174.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/链表/双指针技巧 - 单链表/876.链表的中间结点.html",a:"javascript"},"175.0":{t:"对于**单链表**来说，大部分技巧都属于快慢指针，以下几种算法题，它们都是通过一个 fast 快指针和一个 slow 慢指针配合完成任务。\r",p:`
LC21：合并两个 ...`,l:"算法/链表/双指针技巧 - 单链表/index.html",a:"对于-单链表-来说-大部分技巧都属于快慢指针-以下几种算法题-它们都是通过一个-fast-快指针和一个-slow-慢指针配合完成任务。"},"176.0":{t:"<img src='./picture/pic1.png' width=70%/>\r",p:`直接看代码实现:
/ ...`,l:"算法/链表/递归反转单链表/206.反转链表.html",a:"img-src-picture-pic1-png-width-70"},"177.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/链表/递归反转单链表/25.k-个一组翻转链表.html",a:"javascript"},"178.0":{t:"**先看反转链表前N个节点**",p:"&lt;img sr ...",l:"算法/链表/递归反转单链表/92.反转链表-ii.html",a:"先看反转链表前n个节点"},"179.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/随机算法/384.打乱数组.html",a:"javascript"},"180.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/随机算法/398.随机数索引.html",a:"javascript"},"181.0":{t:"```javascript",p:`/*

@lc ap ...`,l:"算法/随机算法/528.按权重随机选择.html",a:"javascript"}},a={previewLength:10,buttonLabel:"搜索",placeholder:"输入搜索内容",allow:[],ignore:[]},r={INDEX_DATA:e,PREVIEW_LOOKUP:t,Options:a};export{r as default};

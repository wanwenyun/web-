import{_ as t,o as e,c as s,d as o}from"./app.8cb9dc40.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"算法/链表/双指针技巧 - 单链表/index.md"}'),i={name:"算法/链表/双指针技巧 - 单链表/index.md"},l=o("<p>对于<strong>单链表</strong>来说，大部分技巧都属于快慢指针，以下几种算法题，它们都是通过一个 fast 快指针和一个 slow 慢指针配合完成任务。</p><ol><li>LC21：合并两个有序链表 -- 双指针，虚拟头节点</li><li>LC86：链表的分解 -- 双指针，虚拟头节点</li><li>LC23：合并 k 个有序链表</li><li>寻找单链表的倒数第 k 个节点，LC19：删除链表的倒数第 N 个结点 -- 快慢指针</li><li>LC：876寻找单链表的中点 -- 快慢指针，每当慢指针 slow 前进一步，快指针 fast 就前进两步</li><li>LC141：判断单链表是否包含环并找出环起点 -- 快慢指针，慢指针走1步，快指针走两步。如果 fast 最终和 slow 相遇，那肯定是 fast 超过了 slow 一圈，说明链表中含有环</li><li>LC160：判断两个单链表是否相交并找出交点 --</li></ol>",2),_=[l];function a(n,r,c,d,p,f){return e(),s("div",null,_)}const L=t(i,[["render",a]]);export{m as __pageData,L as default};

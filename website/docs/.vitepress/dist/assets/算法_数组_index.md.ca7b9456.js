import{_ as t,o as e,c as o,a as s}from"./app.e1f76b92.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"算法/数组/index.md"}'),n={name:"算法/数组/index.md"},r=s("<p>在处理数组和链表相关问题时，双指针技巧是经常用到的，双指针技巧主要分为两类：<strong>左右指针和快慢指针</strong>。</p><ul><li>所谓左右指针，就是两个指针相向而行或者相背而行；</li><li>而所谓快慢指针，就是两个指针同向而行，一快一慢。</li></ul><p>对于<strong>单链表</strong>来说，大部分技巧都属于快慢指针，前文 单链表的六大解题套路 都涵盖了，比如链表环判断，倒数第 K 个链表节点等问题，它们都是通过一个 fast 快指针和一个 slow 慢指针配合完成任务。</p><p>在数组中并没有真正意义上的指针，但我们可以把<strong>索引</strong>当做数组中的指针，这样也可以在数组中施展双指针技巧，本文主要讲数组相关的<strong>双指针算法</strong>。</p>",4),_=[r];function a(c,i,p,d,l,g){return e(),o("div",null,_)}const u=t(n,[["render",a]]);export{m as __pageData,u as default};

import{_ as e,o as t,c as a,V as o}from"./chunks/framework.75331a37.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"算法/动态规划/贪心算法/index.md","filePath":"算法/动态规划/贪心算法/index.md"}'),n={name:"算法/动态规划/贪心算法/index.md"},r=o('<p><a href="https://labuladong.github.io/algo/di-er-zhan-a01c6/tan-xin-le-9bedf/" target="_blank" rel="noreferrer">贪心类型问题</a> 贪心算法可以认为是动态规划算法的一个特例，相比动态规划，使用贪心算法需要满足更多的条件（<strong>贪心选择性质</strong>），但是效率比动态规划要高。</p><p>什么是贪心选择性质呢，简单说就是：每一步都做出一个<strong>局部最优</strong>的选择，最终的结果就是全局最优。</p><p>贪心算法适用场景：</p><ol><li><p><code>区间调度问题</code>：给你很多形如 [start, end] 的闭区间，请你设计一个算法，算出这些区间中最多有几个互不相交的区间。</p><p>解题思路：选择最早结束的区间。</p></li></ol>',4),_=[r];function s(d,i,c,p,l,f){return t(),a("div",null,_)}const m=e(n,[["render",s]]);export{g as __pageData,m as default};
